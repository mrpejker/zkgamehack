import { Field } from "o1js";
export type ReturnType<FunctionType extends Function> = FunctionType extends (...args: any[]) => infer Return ? Return : any;
export type Subclass<Class extends new (...args: any) => any> = (new (...args: any) => InstanceType<Class>) & {
    [Key in keyof Class]: Class[Key];
} & {
    prototype: InstanceType<Class>;
};
export declare function notInCircuit(): MethodDecorator;
export declare function stringToField(value: string): import("o1js/dist/node/lib/provable/field").Field;
export declare function singleFieldToString(value: Field | bigint): string;
//# sourceMappingURL=utils.d.ts.map