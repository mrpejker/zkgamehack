import { Field, Bool, ProvablePure } from "o1js";
/**
 * Utilities for creating a hash list from a given value type.
 */
export declare abstract class ProvableHashList<Value> {
    protected readonly valueType: ProvablePure<Value>;
    commitment: Field;
    constructor(valueType: ProvablePure<Value>, commitment?: Field);
    protected abstract hash(elements: Field[]): Field;
    /**
     * Converts the provided value to Field[] and appends it to
     * the current hashlist.
     *
     * @param value - Value to be appended to the hash list
     * @returns Current hash list.
     */
    push(value: Value): this;
    pushIf(value: Value, condition: Bool): this;
    /**
     * @returns Traling hash of the current hashlist.
     */
    toField(): import("o1js/dist/node/lib/provable/field").Field;
}
export declare class DefaultProvableHashList<Value> extends ProvableHashList<Value> {
    hash(elements: Field[]): Field;
}
//# sourceMappingURL=ProvableHashList.d.ts.map