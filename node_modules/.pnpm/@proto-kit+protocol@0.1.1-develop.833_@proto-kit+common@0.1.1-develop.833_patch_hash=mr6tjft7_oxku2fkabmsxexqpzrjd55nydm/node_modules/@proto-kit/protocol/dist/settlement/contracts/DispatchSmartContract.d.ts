import { Field, PublicKey, SmartContract, State, UInt64 } from "o1js";
import { RuntimeMethodIdMapping } from "../../model/RuntimeLike";
export declare const ACTIONS_EMPTY_HASH: import("o1js/dist/node/lib/provable/field").Field;
export interface DispatchContractType {
    updateMessagesHash: (executedMessagesHash: Field, newPromisedMessagesHash: Field) => Promise<void>;
    initialize: (settlementContract: PublicKey) => Promise<void>;
    promisedMessagesHash: State<Field>;
}
export declare class DispatchSmartContract extends SmartContract implements DispatchContractType {
    static args: {
        methodIdMappings: RuntimeMethodIdMapping;
        incomingMessagesPaths: Record<string, `${string}.${string}`>;
    };
    promisedMessagesHash: State<import("o1js/dist/node/lib/provable/field").Field>;
    honoredMessagesHash: State<import("o1js/dist/node/lib/provable/field").Field>;
    settlementContract: State<PublicKey>;
    updateMessagesHash(executedMessagesHash: Field, newPromisedMessagesHash: Field): Promise<void>;
    initialize(settlementContract: PublicKey): Promise<void>;
    private dispatchMessage;
    deposit(amount: UInt64): Promise<void>;
}
//# sourceMappingURL=DispatchSmartContract.d.ts.map