import { PublicKey, UInt64 } from "o1js";
declare const Deposit_base: (new (value: {
    address: PublicKey;
    amount: UInt64;
}) => {
    address: PublicKey;
    amount: UInt64;
}) & {
    _isStruct: true;
} & Omit<import("o1js/dist/node/lib/provable/types/provable-intf").Provable<{
    address: PublicKey;
    amount: UInt64;
}, {
    address: {
        x: bigint;
        isOdd: boolean;
    };
    amount: bigint;
}>, "fromFields"> & {
    fromFields: (fields: import("o1js/dist/node/lib/provable/field").Field[]) => {
        address: PublicKey;
        amount: UInt64;
    };
} & {
    fromValue: (value: {
        address: PublicKey | {
            x: bigint | import("o1js/dist/node/lib/provable/field").Field;
            isOdd: boolean | import("o1js/dist/node/lib/provable/bool").Bool;
        };
        amount: bigint | UInt64;
    }) => {
        address: PublicKey;
        amount: UInt64;
    };
    toInput: (x: {
        address: PublicKey;
        amount: UInt64;
    }) => {
        fields?: import("o1js/dist/node/lib/provable/field").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/provable/field").Field, number][] | undefined;
    };
    toJSON: (x: {
        address: PublicKey;
        amount: UInt64;
    }) => {
        address: string;
        amount: string;
    };
    fromJSON: (x: {
        address: string;
        amount: string;
    }) => {
        address: PublicKey;
        amount: UInt64;
    };
    empty: () => {
        address: PublicKey;
        amount: UInt64;
    };
};
export declare class Deposit extends Deposit_base {
}
export {};
//# sourceMappingURL=Deposit.d.ts.map