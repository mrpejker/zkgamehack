import { Field, PublicKey, SmartContract, State, UInt64 } from "o1js";
export declare const ACTIONS_EMPTY_HASH: import("o1js/dist/node/lib/field").Field;
export interface DispatchContractType {
    updateMessagesHash: (executedMessagesHash: Field, newPromisedMessagesHash: Field) => void;
    initialize: (settlementContract: PublicKey) => void;
    promisedMessagesHash: State<Field>;
}
export declare class DispatchContract extends SmartContract implements DispatchContractType {
    private readonly methodIdMappings;
    private readonly incomingMessagesPaths;
    promisedMessagesHash: State<import("o1js/dist/node/lib/field").Field>;
    honoredMessagesHash: State<import("o1js/dist/node/lib/field").Field>;
    settlementContract: State<PublicKey>;
    constructor(address: PublicKey, methodIdMappings: Record<string, bigint>, incomingMessagesPaths: Record<string, `${string}.${string}`>);
    updateMessagesHash(executedMessagesHash: Field, newPromisedMessagesHash: Field): void;
    initialize(settlementContract: PublicKey): void;
    private dispatchMessage;
    deposit(amount: UInt64): void;
}
//# sourceMappingURL=DispatchContract.d.ts.map