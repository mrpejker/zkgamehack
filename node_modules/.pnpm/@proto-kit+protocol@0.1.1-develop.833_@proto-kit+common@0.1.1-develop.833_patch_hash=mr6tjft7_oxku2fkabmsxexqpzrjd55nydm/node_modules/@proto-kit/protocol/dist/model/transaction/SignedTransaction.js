import { Field, Scalar, Signature, Struct } from "o1js";
import { RuntimeTransaction } from "./RuntimeTransaction";
export class SignedTransaction extends Struct({
    transaction: RuntimeTransaction,
    signature: Signature,
}) {
    static getSignatureData(args) {
        return [args.methodId, ...args.nonce.value.toFields(), args.argsHash];
    }
    static dummy() {
        return new SignedTransaction({
            transaction: RuntimeTransaction.dummyTransaction(),
            signature: Signature.fromObject({
                s: Scalar.from(0),
                r: Field(0),
            }),
        });
    }
    hash() {
        return this.transaction.hash();
    }
    getSignatureData() {
        const { methodId, argsHash, nonce } = this.transaction;
        return SignedTransaction.getSignatureData({
            nonce: nonce.value,
            methodId,
            argsHash,
        });
    }
    validateSignature() {
        return this.signature.verify(this.transaction.sender.value, this.getSignatureData());
    }
}
