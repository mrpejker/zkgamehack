import { Field, Poseidon } from "o1js";
import { stringToField } from "../utils/utils";
/**
 * Helps manage path (key) identifiers for key-values in trees.
 */
export class Path {
    /**
     * Encodes a JS string as a Field
     *
     * @param value
     * @returns Field representation of the provided value
     */
    static toField(value) {
        return stringToField(value);
    }
    /**
     * Encodes a class name and its property name into a Field
     *
     * @param className
     * @param propertyKey
     * @returns Field representation of class name + property name
     */
    static fromProperty(className, propertyKey) {
        return Poseidon.hash([
            Path.toField(className),
            Path.toField(propertyKey),
            Field(0),
        ]);
    }
    /**
     * Encodes an existing path with the provided key into a single Field.
     *
     * @param path
     * @param keyType
     * @param key
     * @returns Field representation of the leading path + the provided key.
     */
    static fromKey(path, keyType, key) {
        const keyHash = Poseidon.hash(keyType.toFields(key));
        return Poseidon.hash([path, keyHash]);
    }
}
