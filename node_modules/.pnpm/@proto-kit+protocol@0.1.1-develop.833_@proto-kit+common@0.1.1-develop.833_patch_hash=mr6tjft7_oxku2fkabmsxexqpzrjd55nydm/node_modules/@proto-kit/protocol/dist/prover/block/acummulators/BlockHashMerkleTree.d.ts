import { Field } from "o1js";
declare const BlockHashMerkleTree_base: import("@proto-kit/common").AbstractMerkleTreeClass;
export declare class BlockHashMerkleTree extends BlockHashMerkleTree_base {
}
export declare class BlockHashMerkleTreeWitness extends BlockHashMerkleTree.WITNESS {
}
declare const BlockHashTreeEntry_base: (new (value: {
    transactionsHash: import("o1js/dist/node/lib/field").Field;
    closed: import("o1js/dist/node/lib/bool").Bool;
}) => {
    transactionsHash: import("o1js/dist/node/lib/field").Field;
    closed: import("o1js/dist/node/lib/bool").Bool;
}) & {
    _isStruct: true;
} & import("o1js/dist/node/snarky").ProvablePure<{
    transactionsHash: import("o1js/dist/node/lib/field").Field;
    closed: import("o1js/dist/node/lib/bool").Bool;
}> & {
    toInput: (x: {
        transactionsHash: import("o1js/dist/node/lib/field").Field;
        closed: import("o1js/dist/node/lib/bool").Bool;
    }) => {
        fields?: import("o1js/dist/node/lib/field").Field[] | undefined;
        packed?: [import("o1js/dist/node/lib/field").Field, number][] | undefined;
    };
    toJSON: (x: {
        transactionsHash: import("o1js/dist/node/lib/field").Field;
        closed: import("o1js/dist/node/lib/bool").Bool;
    }) => {
        transactionsHash: string;
        closed: boolean;
    };
    fromJSON: (x: {
        transactionsHash: string;
        closed: boolean;
    }) => {
        transactionsHash: import("o1js/dist/node/lib/field").Field;
        closed: import("o1js/dist/node/lib/bool").Bool;
    };
};
export declare class BlockHashTreeEntry extends BlockHashTreeEntry_base {
    hash(): Field;
}
export {};
//# sourceMappingURL=BlockHashMerkleTree.d.ts.map