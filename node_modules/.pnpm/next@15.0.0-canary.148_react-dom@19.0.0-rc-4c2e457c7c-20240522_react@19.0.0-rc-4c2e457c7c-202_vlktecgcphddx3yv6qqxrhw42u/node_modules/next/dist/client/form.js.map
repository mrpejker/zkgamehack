{"version":3,"sources":["../../src/client/form.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, type HTMLProps, type FormEvent } from 'react'\nimport { useRouter } from './components/navigation'\nimport { addBasePath } from './add-base-path'\nimport { useIntersection } from './use-intersection'\nimport { useMergedRef } from './use-merged-ref'\nimport type { AppRouterInstance } from '../shared/lib/app-router-context.shared-runtime'\nimport { PrefetchKind } from './components/router-reducer/router-reducer-types'\n\nconst DISALLOWED_FORM_PROPS = ['method', 'encType', 'target'] as const\n\ntype HTMLFormProps = HTMLProps<HTMLFormElement>\ntype DisallowedFormProps = (typeof DISALLOWED_FORM_PROPS)[number]\n\ntype InternalFormProps = {\n  /**\n   * `action` can be either a `string` or a function.\n   * - If `action` is a string, it will be interpreted as a path or URL to navigate to when the form is submitted.\n   *   The path will be prefetched when the form becomes visible.\n   * - If `action` is a function, it will be called when the form is submitted. See the [React docs](https://react.dev/reference/react-dom/components/form#props) for more.\n   */\n  action: NonNullable<HTMLFormProps['action']>\n  /**\n   * Whether submitting the form should replace the current `history` state instead of adding a new url into the stack.\n   * Only valid if `action` is a string.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Override the default scroll behavior when navigating.\n   * Only valid if `action` is a string.\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n} & Omit<HTMLFormProps, 'action' | DisallowedFormProps>\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type FormProps<RouteInferType = any> = InternalFormProps\n\nexport default function Form({\n  replace,\n  scroll,\n  ref: externalRef,\n  ...props\n}: FormProps) {\n  const actionProp = props.action\n  const isNavigatingForm = typeof actionProp === 'string'\n\n  for (const key of DISALLOWED_FORM_PROPS) {\n    if (key in props) {\n      if (process.env.NODE_ENV === 'development') {\n        console.error(\n          `<Form> does not support changing \\`${key}\\`. ` +\n            (isNavigatingForm\n              ? `If you'd like to use it to perform a mutation, consider making \\`action\\` a function instead.\\n` +\n                `Learn more: https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations`\n              : '')\n        )\n      }\n      delete (props as Record<string, unknown>)[key]\n    }\n  }\n\n  const router = useRouter()\n\n  const [setIntersectionRef, isVisible] = useIntersection({\n    rootMargin: '200px',\n    disabled: !isNavigatingForm, // if we don't have an action path, we can't preload anything anyway.\n  })\n\n  const ownRef = useMergedRef<HTMLFormElement>(\n    setIntersectionRef,\n    externalRef ?? null\n  )\n\n  useEffect(() => {\n    if (!isNavigatingForm) {\n      return\n    }\n\n    if (!isVisible) {\n      return\n    }\n\n    try {\n      // TODO: do we need to take the current field values here?\n      // or are we assuming that queryparams can't affect this (but what about rewrites)?\n      router.prefetch(actionProp, { kind: PrefetchKind.AUTO })\n    } catch (err) {\n      console.error(err)\n    }\n  }, [isNavigatingForm, isVisible, actionProp, router])\n\n  if (!isNavigatingForm) {\n    if (process.env.NODE_ENV === 'development') {\n      if (replace !== undefined || scroll !== undefined) {\n        console.error(\n          'Passing `replace` or `scroll` to a <Form> whose `action` is a function has no effect.\\n' +\n            'See the relevant docs to learn how to control this behavior for navigations triggered from actions:\\n' +\n            '  `redirect()`       - https://nextjs.org/docs/app/api-reference/functions/redirect#parameters\\n' +\n            '  `router.replace()` - https://nextjs.org/docs/app/api-reference/functions/use-router#userouter\\n'\n        )\n      }\n    }\n    return <form {...props} ref={ownRef} />\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    checkActionUrl(actionProp, 'action')\n  }\n  const actionHref = addBasePath(actionProp)\n\n  return (\n    <form\n      {...props}\n      ref={ownRef}\n      action={actionHref}\n      onSubmit={(event) =>\n        onFormSubmit(event, {\n          router,\n          actionHref,\n          replace,\n          scroll,\n          onSubmit: props.onSubmit,\n        })\n      }\n    />\n  )\n}\n\nfunction onFormSubmit(\n  event: FormEvent<HTMLFormElement>,\n  {\n    actionHref,\n    onSubmit,\n    replace,\n    scroll,\n    router,\n  }: {\n    actionHref: string\n    onSubmit: FormProps['onSubmit']\n    replace: FormProps['replace']\n    scroll: FormProps['scroll']\n    router: AppRouterInstance\n  }\n) {\n  if (typeof onSubmit === 'function') {\n    onSubmit(event)\n\n    // if the user called event.preventDefault(), do nothing.\n    // (this matches what Link does for `onClick`)\n    if (event.defaultPrevented) {\n      return\n    }\n  }\n\n  const formElement = event.currentTarget\n  const submitter = (event.nativeEvent as SubmitEvent).submitter\n\n  let action = actionHref\n\n  if (submitter) {\n    if (process.env.NODE_ENV === 'development') {\n      // the way server actions are encoded (e.g. `formMethod=\"post\")\n      // causes some unnecessary dev-mode warnings from `hasUnsupportedSubmitterAttributes`.\n      // we'd bail out anyway, but we just do it silently.\n      if (hasReactServerActionAttributes(submitter)) {\n        return\n      }\n    }\n\n    if (hasUnsupportedSubmitterAttributes(submitter)) {\n      return\n    }\n\n    // client actions have `formAction=\"javascript:...\"`. We obviously can't prefetch/navigate to that.\n    if (hasReactClientActionAttributes(submitter)) {\n      return\n    }\n\n    // If the submitter specified an alternate formAction,\n    // use that URL instead -- this is what a native form would do.\n    // NOTE: `submitter.formAction` is unreliable, because it will give us `location.href` if it *wasn't* set\n    // NOTE: this should not have `basePath` added, because we can't add it before hydration\n    const submitterFormAction = submitter.getAttribute('formAction')\n    if (submitterFormAction !== null) {\n      if (process.env.NODE_ENV === 'development') {\n        checkActionUrl(submitterFormAction, 'formAction')\n      }\n      action = submitterFormAction\n    }\n  }\n\n  let targetUrl: URL\n  try {\n    // NOTE: It might be more correct to resolve URLs relative to `document.baseURI`,\n    // but we already do it relative to `location.href` elsewhere:\n    //  (see e.g. https://github.com/vercel/next.js/blob/bb0e6722f87ceb2d43015f5b8a413d0072f2badf/packages/next/src/client/components/app-router.tsx#L146)\n    // so it's better to stay consistent.\n    const base = window.location.href\n    targetUrl = new URL(action, base)\n  } catch (err) {\n    throw new Error(`Cannot parse form action \"${action}\" as a URL`, {\n      cause: err,\n    })\n  }\n  if (targetUrl.searchParams.size) {\n    // url-encoded HTML forms *overwrite* any search params in the `action` url:\n    //\n    //  \"Let `query` be the result of running the application/x-www-form-urlencoded serializer [...]\"\n    //  \"Set parsed action's query component to `query`.\"\n    //   https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#submit-mutate-action\n    //\n    // We need to match that.\n    // (note that all other parts of the URL, like `hash`, are preserved)\n    targetUrl.search = ''\n  }\n\n  const formData = new FormData(formElement)\n\n  for (let [name, value] of formData) {\n    if (typeof value !== 'string') {\n      // For file inputs, the native browser behavior is to use the filename as the value instead:\n      //\n      //   \"If entry's value is a File object, then let value be entry's value's name. Otherwise, let value be entry's value.\"\n      //   https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n      //\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\n          `<Form> only supports file inputs if \\`action\\` is a function. File inputs cannot be used if \\`action\\` is a string, ` +\n            `because files cannot be encoded as search params.`\n        )\n      }\n      value = value.name\n    }\n\n    targetUrl.searchParams.append(name, value)\n  }\n\n  // Finally, no more reasons for bailing out.\n  event.preventDefault()\n\n  const method = replace ? 'replace' : 'push'\n  router[method](targetUrl.href, { scroll })\n}\n\nfunction checkActionUrl(action: string, source: 'action' | 'formAction') {\n  const aPropName = source === 'action' ? `an \\`action\\`` : `a \\`formAction\\``\n\n  let testUrl: URL\n  try {\n    testUrl = new URL(action, 'http://n')\n  } catch (err) {\n    console.error(\n      `<Form> received ${aPropName} that cannot be parsed as a URL: \"${action}\".`\n    )\n    return\n  }\n\n  // url-encoded HTML forms ignore any queryparams in the `action` url. We need to match that.\n  if (testUrl.searchParams.size) {\n    console.warn(\n      `<Form> received ${aPropName} that contains search params: \"${action}\". This is not supported, and they will be ignored. ` +\n        `If you need to pass in additional search params, use an \\`<input type=\"hidden\" />\\` instead.`\n    )\n  }\n}\n\nconst isSupportedEncType = (value: string) =>\n  value === 'application/x-www-form-urlencoded'\nconst isSupportedMethod = (value: string) => value === 'get'\nconst isSupportedTarget = (value: string) => value === '_self'\n\nfunction hasUnsupportedSubmitterAttributes(submitter: HTMLElement): boolean {\n  // A submitter can override `encType` for the form.\n  const formEncType = submitter.getAttribute('formEncType')\n  if (formEncType !== null && !isSupportedEncType(formEncType)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(\n        `<Form>'s \\`encType\\` was set to an unsupported value via \\`formEncType=\"${formEncType}\"\\`. ` +\n          `This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.`\n      )\n    }\n    return true\n  }\n\n  // A submitter can override `method` for the form.\n  const formMethod = submitter.getAttribute('formMethod')\n  if (formMethod !== null && !isSupportedMethod(formMethod)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(\n        `<Form>'s \\`method\\` was set to an unsupported value via \\`formMethod=\"${formMethod}\"\\`. ` +\n          `This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.`\n      )\n    }\n    return true\n  }\n\n  // A submitter can override `target` for the form.\n  const formTarget = submitter.getAttribute('formTarget')\n  if (formTarget !== null && !isSupportedTarget(formTarget)) {\n    if (process.env.NODE_ENV === 'development') {\n      console.error(\n        `<Form>'s \\`target\\` was set to an unsupported value via \\`formTarget=\"${formTarget}\"\\`. ` +\n          `This will disable <Form>'s navigation functionality. If you need this, use a native <form> element instead.`\n      )\n    }\n    return true\n  }\n\n  return false\n}\n\nfunction hasReactServerActionAttributes(submitter: HTMLElement) {\n  // https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-client/src/ReactFlightReplyClient.js#L931-L934\n  const name = submitter.getAttribute('name')\n  return (\n    name && (name.startsWith('$ACTION_ID_') || name.startsWith('$ACTION_REF_'))\n  )\n}\n\nfunction hasReactClientActionAttributes(submitter: HTMLElement) {\n  // CSR: https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-dom-bindings/src/client/ReactDOMComponent.js#L482-L487\n  // SSR: https://github.com/facebook/react/blob/942eb80381b96f8410eab1bef1c539bed1ab0eb1/packages/react-dom-bindings/src/client/ReactDOMComponent.js#L2401\n  const action = submitter.getAttribute('formAction')\n  return action && /\\s*javascript:/i.test(action)\n}\n"],"names":["Form","DISALLOWED_FORM_PROPS","replace","scroll","ref","externalRef","props","actionProp","action","isNavigatingForm","key","process","env","NODE_ENV","console","error","router","useRouter","setIntersectionRef","isVisible","useIntersection","rootMargin","disabled","ownRef","useMergedRef","useEffect","prefetch","kind","PrefetchKind","AUTO","err","undefined","form","checkActionUrl","actionHref","addBasePath","onSubmit","event","onFormSubmit","defaultPrevented","formElement","currentTarget","submitter","nativeEvent","hasReactServerActionAttributes","hasUnsupportedSubmitterAttributes","hasReactClientActionAttributes","submitterFormAction","getAttribute","targetUrl","base","window","location","href","URL","Error","cause","searchParams","size","search","formData","FormData","name","value","warn","append","preventDefault","method","source","aPropName","testUrl","isSupportedEncType","isSupportedMethod","isSupportedTarget","formEncType","formMethod","formTarget","startsWith","test"],"mappings":"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"}