{"version":3,"sources":["../../../src/client/components/client-page.tsx"],"sourcesContent":["'use client'\n\nexport function ClientPageRoot({\n  Component,\n  props,\n}: {\n  Component: React.ComponentType<any>\n  props: { [props: string]: any }\n}) {\n  if (typeof window === 'undefined') {\n    const { createDynamicallyTrackedParams } =\n      require('./fallback-params') as typeof import('./fallback-params')\n    const { createDynamicallyTrackedSearchParams } =\n      require('./search-params') as typeof import('./search-params')\n\n    // We expect to be passed searchParams but even if we aren't we can construct one from\n    // an empty object. We only do this if we are in a static generation as a performance\n    // optimization. Ideally we'd unconditionally construct the tracked params but since\n    // this creates a proxy which is slow and this would happen even for client navigations\n    // that are done entirely dynamically and we know there the dynamic tracking is a noop\n    // in this dynamic case we can safely elide it.\n    props.searchParams = createDynamicallyTrackedSearchParams(\n      props.searchParams || {}\n    )\n    props.params = props.params\n      ? createDynamicallyTrackedParams(props.params)\n      : {}\n  }\n  return <Component {...props} />\n}\n"],"names":["ClientPageRoot","Component","props","window","createDynamicallyTrackedParams","require","createDynamicallyTrackedSearchParams","searchParams","params"],"mappings":"AAAA;;;;;+BAEgBA;;;eAAAA;;;;AAAT,SAASA,eAAe,KAM9B;IAN8B,IAAA,EAC7BC,SAAS,EACTC,KAAK,EAIN,GAN8B;IAO7B,IAAI,OAAOC,WAAW,aAAa;QACjC,MAAM,EAAEC,8BAA8B,EAAE,GACtCC,QAAQ;QACV,MAAM,EAAEC,oCAAoC,EAAE,GAC5CD,QAAQ;QAEV,sFAAsF;QACtF,qFAAqF;QACrF,oFAAoF;QACpF,uFAAuF;QACvF,sFAAsF;QACtF,+CAA+C;QAC/CH,MAAMK,YAAY,GAAGD,qCACnBJ,MAAMK,YAAY,IAAI,CAAC;QAEzBL,MAAMM,MAAM,GAAGN,MAAMM,MAAM,GACvBJ,+BAA+BF,MAAMM,MAAM,IAC3C,CAAC;IACP;IACA,qBAAO,qBAACP;QAAW,GAAGC,KAAK;;AAC7B"}