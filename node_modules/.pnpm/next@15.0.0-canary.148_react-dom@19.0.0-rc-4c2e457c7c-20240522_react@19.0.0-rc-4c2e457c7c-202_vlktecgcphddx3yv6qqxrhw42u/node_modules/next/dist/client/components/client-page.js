"use client";

"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ClientPageRoot", {
    enumerable: true,
    get: function() {
        return ClientPageRoot;
    }
});
const _jsxruntime = require("react/jsx-runtime");
function ClientPageRoot(param) {
    let { Component, props } = param;
    if (typeof window === 'undefined') {
        const { createDynamicallyTrackedParams } = require('./fallback-params');
        const { createDynamicallyTrackedSearchParams } = require('./search-params');
        // We expect to be passed searchParams but even if we aren't we can construct one from
        // an empty object. We only do this if we are in a static generation as a performance
        // optimization. Ideally we'd unconditionally construct the tracked params but since
        // this creates a proxy which is slow and this would happen even for client navigations
        // that are done entirely dynamically and we know there the dynamic tracking is a noop
        // in this dynamic case we can safely elide it.
        props.searchParams = createDynamicallyTrackedSearchParams(props.searchParams || {});
        props.params = props.params ? createDynamicallyTrackedParams(props.params) : {};
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(Component, {
        ...props
    });
}

if ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {
  Object.defineProperty(exports.default, '__esModule', { value: true });
  Object.assign(exports.default, exports);
  module.exports = exports.default;
}

//# sourceMappingURL=client-page.js.map