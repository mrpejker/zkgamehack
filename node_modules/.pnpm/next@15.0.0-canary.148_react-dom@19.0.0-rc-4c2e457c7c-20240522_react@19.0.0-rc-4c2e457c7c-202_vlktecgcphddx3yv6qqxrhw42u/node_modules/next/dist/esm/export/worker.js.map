{"version":3,"sources":["../../src/export/worker.ts"],"sourcesContent":["import type {\n  ExportPagesInput,\n  ExportPageInput,\n  ExportPageResult,\n  ExportRouteResult,\n  ExportedPageFile,\n  FileWriter,\n  WorkerRenderOpts,\n  ExportPagesResult,\n} from './types'\n\nimport '../server/node-environment'\n\nprocess.env.NEXT_IS_EXPORT_WORKER = 'true'\n\nimport { extname, join, dirname, sep } from 'path'\nimport fs from 'fs/promises'\nimport { loadComponents } from '../server/load-components'\nimport { isDynamicRoute } from '../shared/lib/router/utils/is-dynamic'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { normalizeLocalePath } from '../shared/lib/i18n/normalize-locale-path'\nimport { trace } from '../trace'\nimport { setHttpClientAndAgentOptions } from '../server/setup-http-agent-env'\nimport isError from '../lib/is-error'\nimport { addRequestMeta } from '../server/request-meta'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { createRequestResponseMocks } from '../server/lib/mock-request'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { hasNextSupport } from '../telemetry/ci-info'\nimport { exportAppRoute } from './routes/app-route'\nimport { exportAppPage } from './routes/app-page'\nimport { exportPagesPage } from './routes/pages'\nimport { getParams } from './helpers/get-params'\nimport { createIncrementalCache } from './helpers/create-incremental-cache'\nimport { isPostpone } from '../server/lib/router-utils/is-postpone'\nimport { isDynamicUsageError } from './helpers/is-dynamic-usage-error'\nimport { isBailoutToCSRError } from '../shared/lib/lazy-dynamic/bailout-to-csr'\nimport {\n  turborepoTraceAccess,\n  TurborepoAccessTraceResult,\n} from '../build/turborepo-access-trace'\nimport type { Params } from '../client/components/params'\nimport {\n  getFallbackRouteParams,\n  type FallbackRouteParams,\n} from '../client/components/fallback-params'\nimport { needsExperimentalReact } from '../lib/needs-experimental-react'\n\nconst envConfig = require('../shared/lib/runtime-config.external')\n\n;(globalThis as any).__NEXT_DATA__ = {\n  nextExport: true,\n}\n\nclass TimeoutError extends Error {\n  code = 'NEXT_EXPORT_TIMEOUT_ERROR'\n}\n\nclass ExportPageError extends Error {\n  code = 'NEXT_EXPORT_PAGE_ERROR'\n}\n\nasync function exportPageImpl(\n  input: ExportPageInput,\n  fileWriter: FileWriter\n): Promise<ExportRouteResult | undefined> {\n  const {\n    path,\n    pathMap,\n    distDir,\n    pagesDataDir,\n    buildExport = false,\n    serverRuntimeConfig,\n    subFolders = false,\n    optimizeCss,\n    disableOptimizedLoading,\n    debugOutput = false,\n    enableExperimentalReact,\n    ampValidatorPath,\n    trailingSlash,\n  } = input\n\n  if (enableExperimentalReact) {\n    process.env.__NEXT_EXPERIMENTAL_REACT = 'true'\n  }\n\n  const {\n    page,\n\n    // The parameters that are currently unknown.\n    _fallbackRouteParams = [],\n\n    // Check if this is an `app/` page.\n    _isAppDir: isAppDir = false,\n\n    // Check if this should error when dynamic usage is detected.\n    _isDynamicError: isDynamicError = false,\n\n    // If this page supports partial prerendering, then we need to pass that to\n    // the renderOpts.\n    _isRoutePPREnabled: isRoutePPREnabled,\n\n    // Pull the original query out.\n    query: originalQuery = {},\n  } = pathMap\n\n  try {\n    const fallbackRouteParams: FallbackRouteParams | null =\n      getFallbackRouteParams(_fallbackRouteParams)\n\n    let query = { ...originalQuery }\n    const pathname = normalizeAppPath(page)\n    const isDynamic = isDynamicRoute(page)\n    const outDir = isAppDir ? join(distDir, 'server/app') : input.outDir\n\n    const filePath = normalizePagePath(path)\n    const ampPath = `${filePath}.amp`\n    let renderAmpPath = ampPath\n\n    let updatedPath = query.__nextSsgPath || path\n    delete query.__nextSsgPath\n\n    let locale = query.__nextLocale || input.renderOpts.locale\n    delete query.__nextLocale\n\n    if (input.renderOpts.locale) {\n      const localePathResult = normalizeLocalePath(\n        path,\n        input.renderOpts.locales\n      )\n\n      if (localePathResult.detectedLocale) {\n        updatedPath = localePathResult.pathname\n        locale = localePathResult.detectedLocale\n\n        if (locale === input.renderOpts.defaultLocale) {\n          renderAmpPath = `${normalizePagePath(updatedPath)}.amp`\n        }\n      }\n    }\n\n    // We need to show a warning if they try to provide query values\n    // for an auto-exported page since they won't be available\n    const hasOrigQueryValues = Object.keys(originalQuery).length > 0\n\n    // Check if the page is a specified dynamic route\n    const { pathname: nonLocalizedPath } = normalizeLocalePath(\n      path,\n      input.renderOpts.locales\n    )\n\n    let params: Params | undefined\n\n    if (isDynamic && page !== nonLocalizedPath) {\n      const normalizedPage = isAppDir ? normalizeAppPath(page) : page\n\n      params = getParams(normalizedPage, updatedPath)\n      if (params) {\n        query = {\n          ...query,\n          ...params,\n        }\n      }\n    }\n\n    const { req, res } = createRequestResponseMocks({ url: updatedPath })\n\n    // If this is a status code page, then set the response code.\n    for (const statusCode of [404, 500]) {\n      if (\n        [\n          `/${statusCode}`,\n          `/${statusCode}.html`,\n          `/${statusCode}/index.html`,\n        ].some((p) => p === updatedPath || `/${locale}${p}` === updatedPath)\n      ) {\n        res.statusCode = statusCode\n      }\n    }\n\n    // Ensure that the URL has a trailing slash if it's configured.\n    if (trailingSlash && !req.url?.endsWith('/')) {\n      req.url += '/'\n    }\n\n    if (\n      locale &&\n      buildExport &&\n      input.renderOpts.domainLocales &&\n      input.renderOpts.domainLocales.some(\n        (dl) =>\n          dl.defaultLocale === locale || dl.locales?.includes(locale || '')\n      )\n    ) {\n      addRequestMeta(req, 'isLocaleDomain', true)\n    }\n\n    envConfig.setConfig({\n      serverRuntimeConfig,\n      publicRuntimeConfig: input.renderOpts.runtimeConfig,\n    })\n\n    const getHtmlFilename = (p: string) =>\n      subFolders ? `${p}${sep}index.html` : `${p}.html`\n\n    let htmlFilename = getHtmlFilename(filePath)\n\n    // dynamic routes can provide invalid extensions e.g. /blog/[...slug] returns an\n    // extension of `.slug]`\n    const pageExt = isDynamic || isAppDir ? '' : extname(page)\n    const pathExt = isDynamic || isAppDir ? '' : extname(path)\n\n    // force output 404.html for backwards compat\n    if (path === '/404.html') {\n      htmlFilename = path\n    }\n    // Make sure page isn't a folder with a dot in the name e.g. `v1.2`\n    else if (pageExt !== pathExt && pathExt !== '') {\n      const isBuiltinPaths = ['/500', '/404'].some(\n        (p) => p === path || p === path + '.html'\n      )\n      // If the ssg path has .html extension, and it's not builtin paths, use it directly\n      // Otherwise, use that as the filename instead\n      const isHtmlExtPath = !isBuiltinPaths && path.endsWith('.html')\n      htmlFilename = isHtmlExtPath ? getHtmlFilename(path) : path\n    } else if (path === '/') {\n      // If the path is the root, just use index.html\n      htmlFilename = 'index.html'\n    }\n\n    const baseDir = join(outDir, dirname(htmlFilename))\n    let htmlFilepath = join(outDir, htmlFilename)\n\n    await fs.mkdir(baseDir, { recursive: true })\n\n    // Handle App Routes.\n    if (isAppDir && isAppRouteRoute(page)) {\n      return await exportAppRoute(\n        req,\n        res,\n        params,\n        page,\n        input.renderOpts.incrementalCache,\n        distDir,\n        htmlFilepath,\n        fileWriter,\n        input.renderOpts.experimental\n      )\n    }\n\n    const components = await loadComponents({\n      distDir,\n      page,\n      isAppPath: isAppDir,\n    })\n\n    const renderOpts: WorkerRenderOpts = {\n      ...components,\n      ...input.renderOpts,\n      ampPath: renderAmpPath,\n      params,\n      optimizeCss,\n      disableOptimizedLoading,\n      locale,\n      supportsDynamicResponse: false,\n      experimental: {\n        ...input.renderOpts.experimental,\n        isRoutePPREnabled,\n      },\n      waitUntil: undefined,\n      onClose: undefined,\n    }\n\n    if (hasNextSupport) {\n      renderOpts.isRevalidate = true\n    }\n\n    // Handle App Pages\n    if (isAppDir) {\n      return await exportAppPage(\n        req,\n        res,\n        page,\n        path,\n        pathname,\n        query,\n        fallbackRouteParams,\n        renderOpts,\n        htmlFilepath,\n        debugOutput,\n        isDynamicError,\n        fileWriter\n      )\n    }\n\n    return await exportPagesPage(\n      req,\n      res,\n      path,\n      page,\n      query,\n      htmlFilepath,\n      htmlFilename,\n      ampPath,\n      subFolders,\n      outDir,\n      ampValidatorPath,\n      pagesDataDir,\n      buildExport,\n      isDynamic,\n      hasOrigQueryValues,\n      renderOpts,\n      components,\n      fileWriter\n    )\n  } catch (err) {\n    console.error(\n      `\\nError occurred prerendering page \"${path}\". Read more: https://nextjs.org/docs/messages/prerender-error\\n`\n    )\n    if (!isBailoutToCSRError(err)) {\n      console.error(isError(err) && err.stack ? err.stack : err)\n    }\n\n    return { error: true }\n  }\n}\n\nexport async function exportPages(\n  input: ExportPagesInput\n): Promise<ExportPagesResult> {\n  const {\n    exportPathMap,\n    paths,\n    dir,\n    distDir,\n    outDir,\n    cacheHandler,\n    cacheMaxMemorySize,\n    fetchCacheKeyPrefix,\n    pagesDataDir,\n    renderOpts,\n    nextConfig,\n    options,\n  } = input\n\n  // If the fetch cache was enabled, we need to create an incremental\n  // cache instance for this page.\n  const incrementalCache = await createIncrementalCache({\n    cacheHandler,\n    cacheMaxMemorySize,\n    fetchCacheKeyPrefix,\n    distDir,\n    dir,\n    // skip writing to disk in minimal mode for now, pending some\n    // changes to better support it\n    flushToDisk: !hasNextSupport,\n  })\n\n  renderOpts.incrementalCache = incrementalCache\n\n  const maxConcurrency =\n    nextConfig.experimental.staticGenerationMaxConcurrency ?? 8\n  const results: ExportPagesResult = []\n\n  const exportPageWithRetry = async (path: string, maxAttempts: number) => {\n    const pathMap = exportPathMap[path]\n    const { page } = exportPathMap[path]\n    const pageKey = page !== path ? `${page}: ${path}` : path\n    let attempt = 0\n    let result\n\n    while (attempt < maxAttempts) {\n      try {\n        result = await Promise.race<ExportPageResult | undefined>([\n          exportPage({\n            path,\n            pathMap,\n            distDir,\n            outDir,\n            pagesDataDir,\n            renderOpts,\n            ampValidatorPath:\n              nextConfig.experimental.amp?.validator || undefined,\n            trailingSlash: nextConfig.trailingSlash,\n            serverRuntimeConfig: nextConfig.serverRuntimeConfig,\n            subFolders: nextConfig.trailingSlash && !options.buildExport,\n            buildExport: options.buildExport,\n            optimizeCss: nextConfig.experimental.optimizeCss,\n            disableOptimizedLoading:\n              nextConfig.experimental.disableOptimizedLoading,\n            parentSpanId: input.parentSpanId,\n            httpAgentOptions: nextConfig.httpAgentOptions,\n            debugOutput: options.debugOutput,\n            enableExperimentalReact: needsExperimentalReact(nextConfig),\n          }),\n          // If exporting the page takes longer than the timeout, reject the promise.\n          new Promise((_, reject) => {\n            setTimeout(() => {\n              reject(new TimeoutError())\n            }, nextConfig.staticPageGenerationTimeout * 1000)\n          }),\n        ])\n\n        // If there was an error in the export, throw it immediately. In the catch block, we might retry the export,\n        // or immediately fail the build, depending on user configuration. We might also continue on and attempt other pages.\n        if (result && 'error' in result) {\n          throw new ExportPageError()\n        }\n\n        // If the export succeeds, break out of the retry loop\n        break\n      } catch (err) {\n        // The only error that should be caught here is an ExportError, as `exportPage` doesn't throw and instead returns an object with an `error` property.\n        // This is an overly cautious check to ensure that we don't accidentally catch an unexpected error.\n        if (!(err instanceof ExportPageError || err instanceof TimeoutError)) {\n          throw err\n        }\n\n        if (err instanceof TimeoutError) {\n          // If the export times out, we will restart the worker up to 3 times.\n          maxAttempts = 3\n        }\n\n        // We've reached the maximum number of attempts\n        if (attempt >= maxAttempts - 1) {\n          // Log a message if we've reached the maximum number of attempts.\n          // We only care to do this if maxAttempts was configured.\n          if (maxAttempts > 0) {\n            console.info(\n              `Failed to build ${pageKey} after ${maxAttempts} attempts.`\n            )\n          }\n          // If prerenderEarlyExit is enabled, we'll exit the build immediately.\n          if (nextConfig.experimental.prerenderEarlyExit) {\n            throw new ExportPageError(\n              `Export encountered an error on ${pageKey}, exiting the build.`\n            )\n          } else {\n            // Otherwise, this is a no-op. The build will continue, and a summary of failed pages will be displayed at the end.\n          }\n        } else {\n          // Otherwise, we have more attempts to make. Wait before retrying\n          if (err instanceof TimeoutError) {\n            console.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}) because it took more than ${nextConfig.staticPageGenerationTimeout} seconds. Retrying again shortly.`\n            )\n          } else {\n            console.info(\n              `Failed to build ${pageKey} (attempt ${attempt + 1} of ${maxAttempts}). Retrying again shortly.`\n            )\n          }\n          await new Promise((r) => setTimeout(r, Math.random() * 500))\n        }\n      }\n\n      attempt++\n    }\n\n    return { result, path, pageKey }\n  }\n\n  for (let i = 0; i < paths.length; i += maxConcurrency) {\n    const subset = paths.slice(i, i + maxConcurrency)\n\n    const subsetResults = await Promise.all(\n      subset.map((path) =>\n        exportPageWithRetry(\n          path,\n          nextConfig.experimental.staticGenerationRetryCount ?? 1\n        )\n      )\n    )\n\n    results.push(...subsetResults)\n  }\n\n  return results\n}\n\nasync function exportPage(\n  input: ExportPageInput\n): Promise<ExportPageResult | undefined> {\n  trace('export-page', input.parentSpanId).setAttribute('path', input.path)\n\n  // Configure the http agent.\n  setHttpClientAndAgentOptions({\n    httpAgentOptions: input.httpAgentOptions,\n  })\n\n  const files: ExportedPageFile[] = []\n  const baseFileWriter: FileWriter = async (\n    type,\n    path,\n    content,\n    encodingOptions = 'utf-8'\n  ) => {\n    await fs.mkdir(dirname(path), { recursive: true })\n    await fs.writeFile(path, content, encodingOptions)\n    files.push({ type, path })\n  }\n\n  const exportPageSpan = trace('export-page-worker', input.parentSpanId)\n\n  const start = Date.now()\n\n  const turborepoAccessTraceResult = new TurborepoAccessTraceResult()\n  // Export the page.\n  const result = await exportPageSpan.traceAsyncFn(() =>\n    turborepoTraceAccess(\n      () => exportPageImpl(input, baseFileWriter),\n      turborepoAccessTraceResult\n    )\n  )\n\n  // If there was no result, then we can exit early.\n  if (!result) return\n\n  // If there was an error, then we can exit early.\n  if ('error' in result) {\n    return { error: result.error, duration: Date.now() - start, files: [] }\n  }\n\n  // Notify the parent process that we processed a page (used by the progress activity indicator)\n  process.send?.([3, { type: 'activity' }])\n\n  // Otherwise we can return the result.\n  return {\n    duration: Date.now() - start,\n    files,\n    ampValidations: result.ampValidations,\n    revalidate: result.revalidate,\n    metadata: result.metadata,\n    ssgNotFound: result.ssgNotFound,\n    hasEmptyPrelude: result.hasEmptyPrelude,\n    hasPostponed: result.hasPostponed,\n    turborepoAccessTraceResult: turborepoAccessTraceResult.serialize(),\n    fetchMetrics: result.fetchMetrics,\n  }\n}\n\nprocess.on('unhandledRejection', (err: unknown) => {\n  // if it's a postpone error, it'll be handled later\n  // when the postponed promise is actually awaited.\n  if (isPostpone(err)) {\n    return\n  }\n\n  // we don't want to log these errors\n  if (isDynamicUsageError(err)) {\n    return\n  }\n\n  console.error(err)\n})\n\nprocess.on('rejectionHandled', () => {\n  // It is ok to await a Promise late in Next.js as it allows for better\n  // prefetching patterns to avoid waterfalls. We ignore logging these.\n  // We should've already errored in anyway unhandledRejection.\n})\n\nconst FATAL_UNHANDLED_NEXT_API_EXIT_CODE = 78\n\nprocess.on('uncaughtException', (err) => {\n  if (isDynamicUsageError(err)) {\n    console.error(\n      'A Next.js API that uses exceptions to signal framework behavior was uncaught. This suggests improper usage of a Next.js API. The original error is printed below and the build will now exit.'\n    )\n    console.error(err)\n    process.exit(FATAL_UNHANDLED_NEXT_API_EXIT_CODE)\n  } else {\n    console.error(err)\n  }\n})\n"],"names":["process","env","NEXT_IS_EXPORT_WORKER","extname","join","dirname","sep","fs","loadComponents","isDynamicRoute","normalizePagePath","normalizeLocalePath","trace","setHttpClientAndAgentOptions","isError","addRequestMeta","normalizeAppPath","createRequestResponseMocks","isAppRouteRoute","hasNextSupport","exportAppRoute","exportAppPage","exportPagesPage","getParams","createIncrementalCache","isPostpone","isDynamicUsageError","isBailoutToCSRError","turborepoTraceAccess","TurborepoAccessTraceResult","getFallbackRouteParams","needsExperimentalReact","envConfig","require","globalThis","__NEXT_DATA__","nextExport","TimeoutError","Error","code","ExportPageError","exportPageImpl","input","fileWriter","path","pathMap","distDir","pagesDataDir","buildExport","serverRuntimeConfig","subFolders","optimizeCss","disableOptimizedLoading","debugOutput","enableExperimentalReact","ampValidatorPath","trailingSlash","__NEXT_EXPERIMENTAL_REACT","page","_fallbackRouteParams","_isAppDir","isAppDir","_isDynamicError","isDynamicError","_isRoutePPREnabled","isRoutePPREnabled","query","originalQuery","req","fallbackRouteParams","pathname","isDynamic","outDir","filePath","ampPath","renderAmpPath","updatedPath","__nextSsgPath","locale","__nextLocale","renderOpts","localePathResult","locales","detectedLocale","defaultLocale","hasOrigQueryValues","Object","keys","length","nonLocalizedPath","params","normalizedPage","res","url","statusCode","some","p","endsWith","domainLocales","dl","includes","setConfig","publicRuntimeConfig","runtimeConfig","getHtmlFilename","htmlFilename","pageExt","pathExt","isBuiltinPaths","isHtmlExtPath","baseDir","htmlFilepath","mkdir","recursive","incrementalCache","experimental","components","isAppPath","supportsDynamicResponse","waitUntil","undefined","onClose","isRevalidate","err","console","error","stack","exportPages","exportPathMap","paths","dir","cacheHandler","cacheMaxMemorySize","fetchCacheKeyPrefix","nextConfig","options","flushToDisk","maxConcurrency","staticGenerationMaxConcurrency","results","exportPageWithRetry","maxAttempts","pageKey","attempt","result","Promise","race","exportPage","amp","validator","parentSpanId","httpAgentOptions","_","reject","setTimeout","staticPageGenerationTimeout","info","prerenderEarlyExit","r","Math","random","i","subset","slice","subsetResults","all","map","staticGenerationRetryCount","push","setAttribute","files","baseFileWriter","type","content","encodingOptions","writeFile","exportPageSpan","start","Date","now","turborepoAccessTraceResult","traceAsyncFn","duration","send","ampValidations","revalidate","metadata","ssgNotFound","hasEmptyPrelude","hasPostponed","serialize","fetchMetrics","on","FATAL_UNHANDLED_NEXT_API_EXIT_CODE","exit"],"mappings":"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"}