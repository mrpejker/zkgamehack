{"version":3,"sources":["../../src/export/index.ts"],"sourcesContent":["import type {\n  ExportAppResult,\n  ExportAppOptions,\n  WorkerRenderOptsPartial,\n} from './types'\nimport { createStaticWorker, type PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\n\nimport { bold, yellow } from '../lib/picocolors'\nimport findUp from 'next/dist/compiled/find-up'\nimport { existsSync, promises as fs } from 'fs'\n\nimport '../server/require-hook'\n\nimport { dirname, join, resolve, sep } from 'path'\nimport { formatAmpMessages } from '../build/output/index'\nimport type { AmpPageStatus } from '../build/output/index'\nimport * as Log from '../build/output/log'\nimport { RSC_SUFFIX, SSG_FALLBACK_EXPORT_ERROR } from '../lib/constants'\nimport { recursiveCopy } from '../lib/recursive-copy'\nimport {\n  BUILD_ID_FILE,\n  CLIENT_PUBLIC_FILES_PATH,\n  CLIENT_STATIC_FILES_PATH,\n  EXPORT_DETAIL,\n  EXPORT_MARKER,\n  NEXT_FONT_MANIFEST,\n  MIDDLEWARE_MANIFEST,\n  PAGES_MANIFEST,\n  PHASE_EXPORT,\n  PRERENDER_MANIFEST,\n  SERVER_DIRECTORY,\n  SERVER_REFERENCE_MANIFEST,\n  APP_PATH_ROUTES_MANIFEST,\n} from '../shared/lib/constants'\nimport loadConfig from '../server/config'\nimport type { ExportPathMap } from '../server/config-shared'\nimport { eventCliSession } from '../telemetry/events'\nimport { hasNextSupport } from '../telemetry/ci-info'\nimport { Telemetry } from '../telemetry/storage'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { loadEnvConfig } from '@next/env'\nimport { isAPIRoute } from '../lib/is-api-route'\nimport { getPagePath } from '../server/require'\nimport type { Span } from '../trace'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport { isAppRouteRoute } from '../lib/is-app-route-route'\nimport { isAppPageRoute } from '../lib/is-app-page-route'\nimport isError from '../lib/is-error'\nimport { formatManifest } from '../build/manifests/formatter/format-manifest'\nimport { validateRevalidate } from '../server/lib/patch-fetch'\nimport { TurborepoAccessTraceResult } from '../build/turborepo-access-trace'\nimport { createProgress } from '../build/progress'\nimport type { DeepReadonly } from '../shared/lib/deep-readonly'\n\nexport class ExportError extends Error {\n  code = 'NEXT_EXPORT_ERROR'\n}\n\nasync function exportAppImpl(\n  dir: string,\n  options: Readonly<ExportAppOptions>,\n  span: Span\n): Promise<ExportAppResult | null> {\n  dir = resolve(dir)\n\n  // attempt to load global env values so they are available in next.config.js\n  span.traceChild('load-dotenv').traceFn(() => loadEnvConfig(dir, false, Log))\n\n  const { enabledDirectories } = options\n\n  const nextConfig =\n    options.nextConfig ||\n    (await span\n      .traceChild('load-next-config')\n      .traceAsyncFn(() => loadConfig(PHASE_EXPORT, dir)))\n\n  const distDir = join(dir, nextConfig.distDir)\n  const telemetry = options.buildExport ? null : new Telemetry({ distDir })\n\n  if (telemetry) {\n    telemetry.record(\n      eventCliSession(distDir, nextConfig, {\n        webpackVersion: null,\n        cliCommand: 'export',\n        isSrcDir: null,\n        hasNowJson: !!(await findUp('now.json', { cwd: dir })),\n        isCustomServer: null,\n        turboFlag: false,\n        pagesDir: null,\n        appDir: null,\n      })\n    )\n  }\n\n  const subFolders = nextConfig.trailingSlash && !options.buildExport\n\n  if (!options.silent && !options.buildExport) {\n    Log.info(`using build directory: ${distDir}`)\n  }\n\n  const buildIdFile = join(distDir, BUILD_ID_FILE)\n\n  if (!existsSync(buildIdFile)) {\n    throw new ExportError(\n      `Could not find a production build in the '${distDir}' directory. Try building your app with 'next build' before starting the static export. https://nextjs.org/docs/messages/next-export-no-build-id`\n    )\n  }\n\n  const customRoutes = ['rewrites', 'redirects', 'headers'].filter(\n    (config) => typeof nextConfig[config] === 'function'\n  )\n\n  if (!hasNextSupport && !options.buildExport && customRoutes.length > 0) {\n    Log.warn(\n      `rewrites, redirects, and headers are not applied when exporting your application, detected (${customRoutes.join(\n        ', '\n      )}). See more info here: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  const buildId = await fs.readFile(buildIdFile, 'utf8')\n\n  const pagesManifest =\n    !options.pages &&\n    (require(join(distDir, SERVER_DIRECTORY, PAGES_MANIFEST)) as PagesManifest)\n\n  let prerenderManifest: DeepReadonly<PrerenderManifest> | undefined\n  try {\n    prerenderManifest = require(join(distDir, PRERENDER_MANIFEST))\n  } catch {}\n\n  let appRoutePathManifest: Record<string, string> | undefined\n  try {\n    appRoutePathManifest = require(join(distDir, APP_PATH_ROUTES_MANIFEST))\n  } catch (err) {\n    if (\n      isError(err) &&\n      (err.code === 'ENOENT' || err.code === 'MODULE_NOT_FOUND')\n    ) {\n      // the manifest doesn't exist which will happen when using\n      // \"pages\" dir instead of \"app\" dir.\n      appRoutePathManifest = undefined\n    } else {\n      // the manifest is malformed (invalid json)\n      throw err\n    }\n  }\n\n  const excludedPrerenderRoutes = new Set<string>()\n  const pages = options.pages || Object.keys(pagesManifest)\n  const defaultPathMap: ExportPathMap = {}\n\n  let hasApiRoutes = false\n  for (const page of pages) {\n    // _document and _app are not real pages\n    // _error is exported as 404.html later on\n    // API Routes are Node.js functions\n\n    if (isAPIRoute(page)) {\n      hasApiRoutes = true\n      continue\n    }\n\n    if (page === '/_document' || page === '/_app' || page === '/_error') {\n      continue\n    }\n\n    // iSSG pages that are dynamic should not export templated version by\n    // default. In most cases, this would never work. There is no server that\n    // could run `getStaticProps`. If users make their page work lazily, they\n    // can manually add it to the `exportPathMap`.\n    if (prerenderManifest?.dynamicRoutes[page]) {\n      excludedPrerenderRoutes.add(page)\n      continue\n    }\n\n    defaultPathMap[page] = { page }\n  }\n\n  const mapAppRouteToPage = new Map<string, string>()\n  if (!options.buildExport && appRoutePathManifest) {\n    for (const [pageName, routePath] of Object.entries(appRoutePathManifest)) {\n      mapAppRouteToPage.set(routePath, pageName)\n      if (\n        isAppPageRoute(pageName) &&\n        !prerenderManifest?.routes[routePath] &&\n        !prerenderManifest?.dynamicRoutes[routePath]\n      ) {\n        defaultPathMap[routePath] = {\n          page: pageName,\n          _isAppDir: true,\n        }\n      }\n    }\n  }\n\n  // Initialize the output directory\n  const outDir = options.outdir\n\n  if (outDir === join(dir, 'public')) {\n    throw new ExportError(\n      `The 'public' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-public`\n    )\n  }\n\n  if (outDir === join(dir, 'static')) {\n    throw new ExportError(\n      `The 'static' directory is reserved in Next.js and can not be used as the export out directory. https://nextjs.org/docs/messages/can-not-output-to-static`\n    )\n  }\n\n  await fs.rm(outDir, { recursive: true, force: true })\n  await fs.mkdir(join(outDir, '_next', buildId), { recursive: true })\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: false,\n    }),\n    'utf8'\n  )\n\n  // Copy static directory\n  if (!options.buildExport && existsSync(join(dir, 'static'))) {\n    if (!options.silent) {\n      Log.info('Copying \"static\" directory')\n    }\n    await span\n      .traceChild('copy-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(join(dir, 'static'), join(outDir, 'static'))\n      )\n  }\n\n  // Copy .next/static directory\n  if (\n    !options.buildExport &&\n    existsSync(join(distDir, CLIENT_STATIC_FILES_PATH))\n  ) {\n    if (!options.silent) {\n      Log.info('Copying \"static build\" directory')\n    }\n    await span\n      .traceChild('copy-next-static-directory')\n      .traceAsyncFn(() =>\n        recursiveCopy(\n          join(distDir, CLIENT_STATIC_FILES_PATH),\n          join(outDir, '_next', CLIENT_STATIC_FILES_PATH)\n        )\n      )\n  }\n\n  // Get the exportPathMap from the config file\n  if (typeof nextConfig.exportPathMap !== 'function') {\n    nextConfig.exportPathMap = async (defaultMap) => {\n      return defaultMap\n    }\n  }\n\n  const {\n    i18n,\n    images: { loader = 'default', unoptimized },\n  } = nextConfig\n\n  if (i18n && !options.buildExport) {\n    throw new ExportError(\n      `i18n support is not compatible with next export. See here for more info on deploying: https://nextjs.org/docs/messages/export-no-custom-routes`\n    )\n  }\n\n  if (!options.buildExport) {\n    const { isNextImageImported } = await span\n      .traceChild('is-next-image-imported')\n      .traceAsyncFn(() =>\n        fs\n          .readFile(join(distDir, EXPORT_MARKER), 'utf8')\n          .then((text) => JSON.parse(text))\n          .catch(() => ({}))\n      )\n\n    if (\n      isNextImageImported &&\n      loader === 'default' &&\n      !unoptimized &&\n      !hasNextSupport\n    ) {\n      throw new ExportError(\n        `Image Optimization using the default loader is not compatible with export.\n  Possible solutions:\n    - Use \\`next start\\` to run a server, which includes the Image Optimization API.\n    - Configure \\`images.unoptimized = true\\` in \\`next.config.js\\` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api`\n      )\n    }\n  }\n\n  let serverActionsManifest\n  if (enabledDirectories.app) {\n    serverActionsManifest = require(\n      join(distDir, SERVER_DIRECTORY, SERVER_REFERENCE_MANIFEST + '.json')\n    )\n    if (nextConfig.output === 'export') {\n      if (\n        Object.keys(serverActionsManifest.node).length > 0 ||\n        Object.keys(serverActionsManifest.edge).length > 0\n      ) {\n        throw new ExportError(\n          `Server Actions are not supported with static export.`\n        )\n      }\n    }\n  }\n\n  // Start the rendering process\n  const renderOpts: WorkerRenderOptsPartial = {\n    previewProps: prerenderManifest?.preview,\n    buildId,\n    nextExport: true,\n    assetPrefix: nextConfig.assetPrefix.replace(/\\/$/, ''),\n    distDir,\n    dev: false,\n    basePath: nextConfig.basePath,\n    trailingSlash: nextConfig.trailingSlash,\n    canonicalBase: nextConfig.amp?.canonicalBase || '',\n    ampSkipValidation: nextConfig.experimental.amp?.skipValidation || false,\n    ampOptimizerConfig: nextConfig.experimental.amp?.optimizer || undefined,\n    locales: i18n?.locales,\n    locale: i18n?.defaultLocale,\n    defaultLocale: i18n?.defaultLocale,\n    domainLocales: i18n?.domains,\n    disableOptimizedLoading: nextConfig.experimental.disableOptimizedLoading,\n    // Exported pages do not currently support dynamic HTML.\n    supportsDynamicResponse: false,\n    crossOrigin: nextConfig.crossOrigin,\n    optimizeCss: nextConfig.experimental.optimizeCss,\n    nextConfigOutput: nextConfig.output,\n    nextScriptWorkers: nextConfig.experimental.nextScriptWorkers,\n    largePageDataBytes: nextConfig.experimental.largePageDataBytes,\n    serverActions: nextConfig.experimental.serverActions,\n    serverComponents: enabledDirectories.app,\n    nextFontManifest: require(\n      join(distDir, 'server', `${NEXT_FONT_MANIFEST}.json`)\n    ),\n    images: nextConfig.images,\n    ...(enabledDirectories.app\n      ? {\n          serverActionsManifest,\n        }\n      : {}),\n    strictNextHead: nextConfig.experimental.strictNextHead ?? true,\n    deploymentId: nextConfig.deploymentId,\n    experimental: {\n      clientTraceMetadata: nextConfig.experimental.clientTraceMetadata,\n      swrDelta: nextConfig.swrDelta,\n      after: nextConfig.experimental.after ?? false,\n      dynamicIO: nextConfig.experimental.dynamicIO ?? false,\n    },\n    reactMaxHeadersLength: nextConfig.reactMaxHeadersLength,\n  }\n\n  const { publicRuntimeConfig } = nextConfig\n\n  if (Object.keys(publicRuntimeConfig).length > 0) {\n    renderOpts.runtimeConfig = publicRuntimeConfig\n  }\n\n  // We need this for server rendering the Link component.\n  ;(globalThis as any).__NEXT_DATA__ = {\n    nextExport: true,\n  }\n\n  const exportPathMap = await span\n    .traceChild('run-export-path-map')\n    .traceAsyncFn(async () => {\n      const exportMap = await nextConfig.exportPathMap(defaultPathMap, {\n        dev: false,\n        dir,\n        outDir,\n        distDir,\n        buildId,\n      })\n      return exportMap\n    })\n\n  // only add missing 404 page when `buildExport` is false\n  if (!options.buildExport) {\n    // only add missing /404 if not specified in `exportPathMap`\n    if (!exportPathMap['/404']) {\n      exportPathMap['/404'] = { page: '/_error' }\n    }\n\n    /**\n     * exports 404.html for backwards compat\n     * E.g. GitHub Pages, GitLab Pages, Cloudflare Pages, Netlify\n     */\n    if (!exportPathMap['/404.html']) {\n      // alias /404.html to /404 to be compatible with custom 404 / _error page\n      exportPathMap['/404.html'] = exportPathMap['/404']\n    }\n  }\n\n  // make sure to prevent duplicates\n  const exportPaths = [\n    ...new Set(\n      Object.keys(exportPathMap).map((path) =>\n        denormalizePagePath(normalizePagePath(path))\n      )\n    ),\n  ]\n\n  const filteredPaths = exportPaths.filter(\n    (route) =>\n      exportPathMap[route]._isAppDir ||\n      // Remove API routes\n      !isAPIRoute(exportPathMap[route].page)\n  )\n\n  if (filteredPaths.length !== exportPaths.length) {\n    hasApiRoutes = true\n  }\n\n  if (filteredPaths.length === 0) {\n    return null\n  }\n\n  if (prerenderManifest && !options.buildExport) {\n    const fallbackEnabledPages = new Set()\n\n    for (const path of Object.keys(exportPathMap)) {\n      const page = exportPathMap[path].page\n      const prerenderInfo = prerenderManifest.dynamicRoutes[page]\n\n      if (prerenderInfo && prerenderInfo.fallback !== false) {\n        fallbackEnabledPages.add(page)\n      }\n    }\n\n    if (fallbackEnabledPages.size > 0) {\n      throw new ExportError(\n        `Found pages with \\`fallback\\` enabled:\\n${[\n          ...fallbackEnabledPages,\n        ].join('\\n')}\\n${SSG_FALLBACK_EXPORT_ERROR}\\n`\n      )\n    }\n  }\n  let hasMiddleware = false\n\n  if (!options.buildExport) {\n    try {\n      const middlewareManifest = require(\n        join(distDir, SERVER_DIRECTORY, MIDDLEWARE_MANIFEST)\n      ) as MiddlewareManifest\n\n      hasMiddleware = Object.keys(middlewareManifest.middleware).length > 0\n    } catch {}\n\n    // Warn if the user defines a path for an API page\n    if (hasApiRoutes || hasMiddleware) {\n      if (nextConfig.output === 'export') {\n        Log.warn(\n          yellow(\n            `Statically exporting a Next.js application via \\`next export\\` disables API routes and middleware.`\n          ) +\n            `\\n` +\n            yellow(\n              `This command is meant for static-only hosts, and is` +\n                ' ' +\n                bold(`not necessary to make your application static.`)\n            ) +\n            `\\n` +\n            yellow(\n              `Pages in your application without server-side data dependencies will be automatically statically exported by \\`next build\\`, including pages powered by \\`getStaticProps\\`.`\n            ) +\n            `\\n` +\n            yellow(\n              `Learn more: https://nextjs.org/docs/messages/api-routes-static-export`\n            )\n        )\n      }\n    }\n  }\n\n  const pagesDataDir = options.buildExport\n    ? outDir\n    : join(outDir, '_next/data', buildId)\n\n  const ampValidations: AmpPageStatus = {}\n\n  const publicDir = join(dir, CLIENT_PUBLIC_FILES_PATH)\n  // Copy public directory\n  if (!options.buildExport && existsSync(publicDir)) {\n    if (!options.silent) {\n      Log.info('Copying \"public\" directory')\n    }\n    await span.traceChild('copy-public-directory').traceAsyncFn(() =>\n      recursiveCopy(publicDir, outDir, {\n        filter(path) {\n          // Exclude paths used by pages\n          return !exportPathMap[path]\n        },\n      })\n    )\n  }\n\n  const failedExportAttemptsByPage: Map<string, boolean> = new Map()\n\n  // Chunk filtered pages into smaller groups, and call the export worker on each group.\n  // We've set a default minimum of 25 pages per chunk to ensure that even setups\n  // with only a few static pages can leverage a shared incremental cache, however this\n  // value can be configured.\n  const minChunkSize =\n    nextConfig.experimental.staticGenerationMinPagesPerWorker ?? 25\n  // Calculate the number of workers needed to ensure each chunk has at least minChunkSize pages\n  const numWorkers = Math.min(\n    options.numWorkers,\n    Math.ceil(filteredPaths.length / minChunkSize)\n  )\n  // Calculate the chunk size based on the number of workers\n  const chunkSize = Math.ceil(filteredPaths.length / numWorkers)\n  const chunks = Array.from({ length: numWorkers }, (_, i) =>\n    filteredPaths.slice(i * chunkSize, (i + 1) * chunkSize)\n  )\n  // Distribute remaining pages\n  const remainingPages = filteredPaths.slice(numWorkers * chunkSize)\n  remainingPages.forEach((page, index) => {\n    chunks[index % chunks.length].push(page)\n  })\n\n  const progress = createProgress(\n    filteredPaths.length,\n    options.statusMessage || 'Exporting'\n  )\n\n  const worker = createStaticWorker(nextConfig, progress)\n\n  const results = (\n    await Promise.all(\n      chunks.map((paths) =>\n        worker.exportPages({\n          paths,\n          exportPathMap,\n          parentSpanId: span.getId(),\n          pagesDataDir,\n          renderOpts,\n          options,\n          dir,\n          distDir,\n          outDir,\n          nextConfig,\n          cacheHandler: nextConfig.cacheHandler,\n          cacheMaxMemorySize: nextConfig.cacheMaxMemorySize,\n          fetchCache: true,\n          fetchCacheKeyPrefix: nextConfig.experimental.fetchCacheKeyPrefix,\n        })\n      )\n    )\n  ).flat()\n\n  let hadValidationError = false\n\n  const collector: ExportAppResult = {\n    byPath: new Map(),\n    byPage: new Map(),\n    ssgNotFoundPaths: new Set(),\n    turborepoAccessTraceResults: new Map(),\n  }\n\n  for (const { result, path, pageKey } of results) {\n    if (!result) continue\n    if ('error' in result) {\n      failedExportAttemptsByPage.set(pageKey, true)\n      continue\n    }\n\n    const { page } = exportPathMap[path]\n\n    if (result.turborepoAccessTraceResult) {\n      collector.turborepoAccessTraceResults?.set(\n        path,\n        TurborepoAccessTraceResult.fromSerialized(\n          result.turborepoAccessTraceResult\n        )\n      )\n    }\n\n    // Capture any amp validations.\n    if (result.ampValidations) {\n      for (const validation of result.ampValidations) {\n        ampValidations[validation.page] = validation.result\n        hadValidationError ||= validation.result.errors.length > 0\n      }\n    }\n\n    if (options.buildExport) {\n      // Update path info by path.\n      const info = collector.byPath.get(path) ?? {}\n      if (typeof result.revalidate !== 'undefined') {\n        info.revalidate = validateRevalidate(result.revalidate, path)\n      }\n      if (typeof result.metadata !== 'undefined') {\n        info.metadata = result.metadata\n      }\n\n      if (typeof result.hasEmptyPrelude !== 'undefined') {\n        info.hasEmptyPrelude = result.hasEmptyPrelude\n      }\n\n      if (typeof result.hasPostponed !== 'undefined') {\n        info.hasPostponed = result.hasPostponed\n      }\n\n      if (typeof result.fetchMetrics !== 'undefined') {\n        info.fetchMetrics = result.fetchMetrics\n      }\n\n      collector.byPath.set(path, info)\n\n      // Update not found.\n      if (result.ssgNotFound === true) {\n        collector.ssgNotFoundPaths.add(path)\n      }\n\n      // Update durations.\n      const durations = collector.byPage.get(page) ?? {\n        durationsByPath: new Map<string, number>(),\n      }\n      durations.durationsByPath.set(path, result.duration)\n      collector.byPage.set(page, durations)\n    }\n  }\n\n  // Export mode provide static outputs that are not compatible with PPR mode.\n  if (!options.buildExport && nextConfig.experimental.ppr) {\n    // TODO: add message\n    throw new Error('Invariant: PPR cannot be enabled in export mode')\n  }\n\n  // copy prerendered routes to outDir\n  if (!options.buildExport && prerenderManifest) {\n    await Promise.all(\n      Object.keys(prerenderManifest.routes).map(async (route) => {\n        const { srcRoute } = prerenderManifest!.routes[route]\n        const appPageName = mapAppRouteToPage.get(srcRoute || '')\n        const pageName = appPageName || srcRoute || route\n        const isAppPath = Boolean(appPageName)\n        const isAppRouteHandler = appPageName && isAppRouteRoute(appPageName)\n\n        // returning notFound: true from getStaticProps will not\n        // output html/json files during the build\n        if (prerenderManifest!.notFoundRoutes.includes(route)) {\n          return\n        }\n        route = normalizePagePath(route)\n\n        const pagePath = getPagePath(pageName, distDir, undefined, isAppPath)\n        const distPagesDir = join(\n          pagePath,\n          // strip leading / and then recurse number of nested dirs\n          // to place from base folder\n          pageName\n            .slice(1)\n            .split('/')\n            .map(() => '..')\n            .join('/')\n        )\n\n        const orig = join(distPagesDir, route)\n        const handlerSrc = `${orig}.body`\n        const handlerDest = join(outDir, route)\n\n        if (isAppRouteHandler && existsSync(handlerSrc)) {\n          await fs.mkdir(dirname(handlerDest), { recursive: true })\n          await fs.copyFile(handlerSrc, handlerDest)\n          return\n        }\n\n        const htmlDest = join(\n          outDir,\n          `${route}${\n            subFolders && route !== '/index' ? `${sep}index` : ''\n          }.html`\n        )\n        const ampHtmlDest = join(\n          outDir,\n          `${route}.amp${subFolders ? `${sep}index` : ''}.html`\n        )\n        const jsonDest = isAppPath\n          ? join(\n              outDir,\n              `${route}${\n                subFolders && route !== '/index' ? `${sep}index` : ''\n              }.txt`\n            )\n          : join(pagesDataDir, `${route}.json`)\n\n        await fs.mkdir(dirname(htmlDest), { recursive: true })\n        await fs.mkdir(dirname(jsonDest), { recursive: true })\n\n        const htmlSrc = `${orig}.html`\n        const jsonSrc = `${orig}${isAppPath ? RSC_SUFFIX : '.json'}`\n\n        await fs.copyFile(htmlSrc, htmlDest)\n        await fs.copyFile(jsonSrc, jsonDest)\n\n        if (existsSync(`${orig}.amp.html`)) {\n          await fs.mkdir(dirname(ampHtmlDest), { recursive: true })\n          await fs.copyFile(`${orig}.amp.html`, ampHtmlDest)\n        }\n      })\n    )\n  }\n\n  if (Object.keys(ampValidations).length) {\n    console.log(formatAmpMessages(ampValidations))\n  }\n  if (hadValidationError) {\n    throw new ExportError(\n      `AMP Validation caused the export to fail. https://nextjs.org/docs/messages/amp-export-validation`\n    )\n  }\n\n  if (failedExportAttemptsByPage.size > 0) {\n    const failedPages = Array.from(failedExportAttemptsByPage.keys())\n    throw new ExportError(\n      `Export encountered errors on following paths:\\n\\t${failedPages\n        .sort()\n        .join('\\n\\t')}`\n    )\n  }\n\n  await fs.writeFile(\n    join(distDir, EXPORT_DETAIL),\n    formatManifest({\n      version: 1,\n      outDirectory: outDir,\n      success: true,\n    }),\n    'utf8'\n  )\n\n  if (telemetry) {\n    await telemetry.flush()\n  }\n\n  await worker.end()\n\n  return collector\n}\n\nexport default async function exportApp(\n  dir: string,\n  options: ExportAppOptions,\n  span: Span\n): Promise<ExportAppResult | null> {\n  const nextExportSpan = span.traceChild('next-export')\n\n  return nextExportSpan.traceAsyncFn(async () => {\n    return await exportAppImpl(dir, options, nextExportSpan)\n  })\n}\n"],"names":["createStaticWorker","bold","yellow","findUp","existsSync","promises","fs","dirname","join","resolve","sep","formatAmpMessages","Log","RSC_SUFFIX","SSG_FALLBACK_EXPORT_ERROR","recursiveCopy","BUILD_ID_FILE","CLIENT_PUBLIC_FILES_PATH","CLIENT_STATIC_FILES_PATH","EXPORT_DETAIL","EXPORT_MARKER","NEXT_FONT_MANIFEST","MIDDLEWARE_MANIFEST","PAGES_MANIFEST","PHASE_EXPORT","PRERENDER_MANIFEST","SERVER_DIRECTORY","SERVER_REFERENCE_MANIFEST","APP_PATH_ROUTES_MANIFEST","loadConfig","eventCliSession","hasNextSupport","Telemetry","normalizePagePath","denormalizePagePath","loadEnvConfig","isAPIRoute","getPagePath","isAppRouteRoute","isAppPageRoute","isError","formatManifest","validateRevalidate","TurborepoAccessTraceResult","createProgress","ExportError","Error","code","exportAppImpl","dir","options","span","nextConfig","traceChild","traceFn","enabledDirectories","traceAsyncFn","distDir","telemetry","buildExport","record","webpackVersion","cliCommand","isSrcDir","hasNowJson","cwd","isCustomServer","turboFlag","pagesDir","appDir","subFolders","trailingSlash","silent","info","buildIdFile","customRoutes","filter","config","length","warn","buildId","readFile","pagesManifest","pages","require","prerenderManifest","appRoutePathManifest","err","undefined","excludedPrerenderRoutes","Set","Object","keys","defaultPathMap","hasApiRoutes","page","dynamicRoutes","add","mapAppRouteToPage","Map","pageName","routePath","entries","set","routes","_isAppDir","outDir","outdir","rm","recursive","force","mkdir","writeFile","version","outDirectory","success","exportPathMap","defaultMap","i18n","images","loader","unoptimized","isNextImageImported","then","text","JSON","parse","catch","serverActionsManifest","app","output","node","edge","renderOpts","previewProps","preview","nextExport","assetPrefix","replace","dev","basePath","canonicalBase","amp","ampSkipValidation","experimental","skipValidation","ampOptimizerConfig","optimizer","locales","locale","defaultLocale","domainLocales","domains","disableOptimizedLoading","supportsDynamicResponse","crossOrigin","optimizeCss","nextConfigOutput","nextScriptWorkers","largePageDataBytes","serverActions","serverComponents","nextFontManifest","strictNextHead","deploymentId","clientTraceMetadata","swrDelta","after","dynamicIO","reactMaxHeadersLength","publicRuntimeConfig","runtimeConfig","globalThis","__NEXT_DATA__","exportMap","exportPaths","map","path","filteredPaths","route","fallbackEnabledPages","prerenderInfo","fallback","size","hasMiddleware","middlewareManifest","middleware","pagesDataDir","ampValidations","publicDir","failedExportAttemptsByPage","minChunkSize","staticGenerationMinPagesPerWorker","numWorkers","Math","min","ceil","chunkSize","chunks","Array","from","_","i","slice","remainingPages","forEach","index","push","progress","statusMessage","worker","results","Promise","all","paths","exportPages","parentSpanId","getId","cacheHandler","cacheMaxMemorySize","fetchCache","fetchCacheKeyPrefix","flat","hadValidationError","collector","byPath","byPage","ssgNotFoundPaths","turborepoAccessTraceResults","result","pageKey","turborepoAccessTraceResult","fromSerialized","validation","errors","get","revalidate","metadata","hasEmptyPrelude","hasPostponed","fetchMetrics","ssgNotFound","durations","durationsByPath","duration","ppr","srcRoute","appPageName","isAppPath","Boolean","isAppRouteHandler","notFoundRoutes","includes","pagePath","distPagesDir","split","orig","handlerSrc","handlerDest","copyFile","htmlDest","ampHtmlDest","jsonDest","htmlSrc","jsonSrc","console","log","failedPages","sort","flush","end","exportApp","nextExportSpan"],"mappings":"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"}