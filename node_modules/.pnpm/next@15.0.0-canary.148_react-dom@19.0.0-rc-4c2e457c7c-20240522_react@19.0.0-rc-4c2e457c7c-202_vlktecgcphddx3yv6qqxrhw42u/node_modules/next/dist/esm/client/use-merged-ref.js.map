{"version":3,"sources":["../../src/client/use-merged-ref.ts"],"sourcesContent":["import { useMemo, type Ref } from 'react'\n\nexport function useMergedRef<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  return useMemo(() => mergeRefs(refA, refB), [refA, refB])\n}\n\nexport function mergeRefs<TElement>(\n  refA: Ref<TElement>,\n  refB: Ref<TElement>\n): Ref<TElement> {\n  if (!refA || !refB) {\n    return refA || refB\n  }\n\n  return (current: TElement) => {\n    const cleanupA = applyRef(refA, current)\n    const cleanupB = applyRef(refB, current)\n\n    return () => {\n      cleanupA()\n      cleanupB()\n    }\n  }\n}\n\nfunction applyRef<TElement>(\n  refA: NonNullable<Ref<TElement>>,\n  current: TElement\n) {\n  if (typeof refA === 'function') {\n    const cleanup = refA(current)\n    if (typeof cleanup === 'function') {\n      return cleanup\n    } else {\n      return () => refA(null)\n    }\n  } else {\n    refA.current = current\n    return () => {\n      refA.current = null\n    }\n  }\n}\n"],"names":["useMemo","useMergedRef","refA","refB","mergeRefs","current","cleanupA","applyRef","cleanupB","cleanup"],"mappings":"AAAA,SAASA,OAAO,QAAkB,QAAO;AAEzC,OAAO,SAASC,aACdC,IAAmB,EACnBC,IAAmB;IAEnB,OAAOH,QAAQ,IAAMI,UAAUF,MAAMC,OAAO;QAACD;QAAMC;KAAK;AAC1D;AAEA,OAAO,SAASC,UACdF,IAAmB,EACnBC,IAAmB;IAEnB,IAAI,CAACD,QAAQ,CAACC,MAAM;QAClB,OAAOD,QAAQC;IACjB;IAEA,OAAO,CAACE;QACN,MAAMC,WAAWC,SAASL,MAAMG;QAChC,MAAMG,WAAWD,SAASJ,MAAME;QAEhC,OAAO;YACLC;YACAE;QACF;IACF;AACF;AAEA,SAASD,SACPL,IAAgC,EAChCG,OAAiB;IAEjB,IAAI,OAAOH,SAAS,YAAY;QAC9B,MAAMO,UAAUP,KAAKG;QACrB,IAAI,OAAOI,YAAY,YAAY;YACjC,OAAOA;QACT,OAAO;YACL,OAAO,IAAMP,KAAK;QACpB;IACF,OAAO;QACLA,KAAKG,OAAO,GAAGA;QACf,OAAO;YACLH,KAAKG,OAAO,GAAG;QACjB;IACF;AACF"}