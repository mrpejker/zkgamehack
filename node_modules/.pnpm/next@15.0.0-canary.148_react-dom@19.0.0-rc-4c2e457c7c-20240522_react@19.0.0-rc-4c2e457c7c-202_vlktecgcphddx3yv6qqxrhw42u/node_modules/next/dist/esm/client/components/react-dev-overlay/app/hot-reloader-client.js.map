{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/app/hot-reloader-client.tsx"],"sourcesContent":["import type { ReactNode } from 'react'\nimport { useCallback, useEffect, startTransition, useMemo, useRef } from 'react'\nimport stripAnsi from 'next/dist/compiled/strip-ansi'\nimport formatWebpackMessages from '../internal/helpers/format-webpack-messages'\nimport { usePathname, useRouter } from '../../navigation'\nimport {\n  ACTION_BEFORE_REFRESH,\n  ACTION_BUILD_ERROR,\n  ACTION_BUILD_OK,\n  ACTION_DEBUG_INFO,\n  ACTION_REFRESH,\n  ACTION_STATIC_INDICATOR,\n  ACTION_UNHANDLED_ERROR,\n  ACTION_UNHANDLED_REJECTION,\n  ACTION_VERSION_INFO,\n  useErrorOverlayReducer,\n} from '../shared'\nimport { parseStack } from '../internal/helpers/parseStack'\nimport ReactDevOverlay from './ReactDevOverlay'\nimport { useErrorHandler } from '../internal/helpers/use-error-handler'\nimport { RuntimeErrorHandler } from '../internal/helpers/runtime-error-handler'\nimport {\n  useSendMessage,\n  useTurbopack,\n  useWebsocket,\n  useWebsocketPing,\n} from '../internal/helpers/use-websocket'\nimport { parseComponentStack } from '../internal/helpers/parse-component-stack'\nimport type { VersionInfo } from '../../../../server/dev/parse-version-info'\nimport { HMR_ACTIONS_SENT_TO_BROWSER } from '../../../../server/dev/hot-reloader-types'\nimport type {\n  HMR_ACTION_TYPES,\n  TurbopackMsgToBrowser,\n} from '../../../../server/dev/hot-reloader-types'\nimport { extractModulesFromTurbopackMessage } from '../../../../server/dev/extract-modules-from-turbopack-message'\nimport { REACT_REFRESH_FULL_RELOAD_FROM_ERROR } from '../shared'\nimport type { HydrationErrorState } from '../internal/helpers/hydration-error-info'\nimport type { DebugInfo } from '../types'\n\nexport interface Dispatcher {\n  onBuildOk(): void\n  onBuildError(message: string): void\n  onVersionInfo(versionInfo: VersionInfo): void\n  onDebugInfo(debugInfo: DebugInfo): void\n  onBeforeRefresh(): void\n  onRefresh(): void\n  onStaticIndicator(status: boolean): void\n}\n\nlet mostRecentCompilationHash: any = null\nlet __nextDevClientId = Math.round(Math.random() * 100 + Date.now())\nlet reloading = false\nlet startLatency: number | null = null\n\nlet pendingHotUpdateWebpack = Promise.resolve()\nlet resolvePendingHotUpdateWebpack: () => void = () => {}\nfunction setPendingHotUpdateWebpack() {\n  pendingHotUpdateWebpack = new Promise((resolve) => {\n    resolvePendingHotUpdateWebpack = () => {\n      resolve()\n    }\n  })\n}\n\nexport function waitForWebpackRuntimeHotUpdate() {\n  return pendingHotUpdateWebpack\n}\n\nfunction handleBeforeHotUpdateWebpack(\n  dispatcher: Dispatcher,\n  hasUpdates: boolean\n) {\n  if (hasUpdates) {\n    dispatcher.onBeforeRefresh()\n  }\n}\n\nfunction handleSuccessfulHotUpdateWebpack(\n  dispatcher: Dispatcher,\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  resolvePendingHotUpdateWebpack()\n  dispatcher.onBuildOk()\n  reportHmrLatency(sendMessage, updatedModules)\n\n  dispatcher.onRefresh()\n}\n\nfunction reportHmrLatency(\n  sendMessage: (message: string) => void,\n  updatedModules: ReadonlyArray<string>\n) {\n  if (!startLatency) return\n  let endLatency = Date.now()\n  const latency = endLatency - startLatency\n  console.log(`[Fast Refresh] done in ${latency}ms`)\n  sendMessage(\n    JSON.stringify({\n      event: 'client-hmr-latency',\n      id: window.__nextDevClientId,\n      startTime: startLatency,\n      endTime: endLatency,\n      page: window.location.pathname,\n      updatedModules,\n      // Whether the page (tab) was hidden at the time the event occurred.\n      // This can impact the accuracy of the event's timing.\n      isPageHidden: document.visibilityState === 'hidden',\n    })\n  )\n}\n\n// There is a newer version of the code available.\nfunction handleAvailableHash(hash: string) {\n  // Update last known compilation hash.\n  mostRecentCompilationHash = hash\n}\n\n/**\n * Is there a newer version of this code available?\n * For webpack: Check if the hash changed compared to __webpack_hash__\n * For Turbopack: Always true because it doesn't have __webpack_hash__\n */\nfunction isUpdateAvailable() {\n  if (process.env.TURBOPACK) {\n    return true\n  }\n\n  /* globals __webpack_hash__ */\n  // __webpack_hash__ is the hash of the current compilation.\n  // It's a global variable injected by Webpack.\n  return mostRecentCompilationHash !== __webpack_hash__\n}\n\n// Webpack disallows updates in other states.\nfunction canApplyUpdates() {\n  // @ts-expect-error module.hot exists\n  return module.hot.status() === 'idle'\n}\nfunction afterApplyUpdates(fn: any) {\n  if (canApplyUpdates()) {\n    fn()\n  } else {\n    function handler(status: any) {\n      if (status === 'idle') {\n        // @ts-expect-error module.hot exists\n        module.hot.removeStatusHandler(handler)\n        fn()\n      }\n    }\n    // @ts-expect-error module.hot exists\n    module.hot.addStatusHandler(handler)\n  }\n}\n\nfunction performFullReload(err: any, sendMessage: any) {\n  const stackTrace =\n    err &&\n    ((err.stack && err.stack.split('\\n').slice(0, 5).join('\\n')) ||\n      err.message ||\n      err + '')\n\n  sendMessage(\n    JSON.stringify({\n      event: 'client-full-reload',\n      stackTrace,\n      hadRuntimeError: !!RuntimeErrorHandler.hadRuntimeError,\n      dependencyChain: err ? err.dependencyChain : undefined,\n    })\n  )\n\n  if (reloading) return\n  reloading = true\n  window.location.reload()\n}\n\n// Attempt to update code on the fly, fall back to a hard reload.\nfunction tryApplyUpdates(\n  onBeforeUpdate: (hasUpdates: boolean) => void,\n  onHotUpdateSuccess: (updatedModules: string[]) => void,\n  sendMessage: any,\n  dispatcher: Dispatcher\n) {\n  if (!isUpdateAvailable() || !canApplyUpdates()) {\n    resolvePendingHotUpdateWebpack()\n    dispatcher.onBuildOk()\n    reportHmrLatency(sendMessage, [])\n    return\n  }\n\n  function handleApplyUpdates(err: any, updatedModules: string[] | null) {\n    if (err || RuntimeErrorHandler.hadRuntimeError || !updatedModules) {\n      if (err) {\n        console.warn(\n          '[Fast Refresh] performing full reload\\n\\n' +\n            \"Fast Refresh will perform a full reload when you edit a file that's imported by modules outside of the React rendering tree.\\n\" +\n            'You might have a file which exports a React component but also exports a value that is imported by a non-React component file.\\n' +\n            'Consider migrating the non-React component export to a separate file and importing it into both files.\\n\\n' +\n            'It is also possible the parent component of the component you edited is a class component, which disables Fast Refresh.\\n' +\n            'Fast Refresh requires at least one parent function component in your React tree.'\n        )\n      } else if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n      }\n      performFullReload(err, sendMessage)\n      return\n    }\n\n    const hasUpdates = Boolean(updatedModules.length)\n    if (typeof onHotUpdateSuccess === 'function') {\n      // Maybe we want to do something.\n      onHotUpdateSuccess(updatedModules)\n    }\n\n    if (isUpdateAvailable()) {\n      // While we were updating, there was a new update! Do it again.\n      tryApplyUpdates(\n        hasUpdates ? () => {} : onBeforeUpdate,\n        hasUpdates ? () => dispatcher.onBuildOk() : onHotUpdateSuccess,\n        sendMessage,\n        dispatcher\n      )\n    } else {\n      dispatcher.onBuildOk()\n      if (process.env.__NEXT_TEST_MODE) {\n        afterApplyUpdates(() => {\n          if (self.__NEXT_HMR_CB) {\n            self.__NEXT_HMR_CB()\n            self.__NEXT_HMR_CB = null\n          }\n        })\n      }\n    }\n  }\n\n  // https://webpack.js.org/api/hot-module-replacement/#check\n  // @ts-expect-error module.hot exists\n  module.hot\n    .check(/* autoApply */ false)\n    .then((updatedModules: any[] | null) => {\n      if (!updatedModules) {\n        return null\n      }\n\n      if (typeof onBeforeUpdate === 'function') {\n        const hasUpdates = Boolean(updatedModules.length)\n        onBeforeUpdate(hasUpdates)\n      }\n      // https://webpack.js.org/api/hot-module-replacement/#apply\n      // @ts-expect-error module.hot exists\n      return module.hot.apply()\n    })\n    .then(\n      (updatedModules: any[] | null) => {\n        handleApplyUpdates(null, updatedModules)\n      },\n      (err: any) => {\n        handleApplyUpdates(err, null)\n      }\n    )\n}\n\n/** Handles messages from the sevrer for the App Router. */\nfunction processMessage(\n  obj: HMR_ACTION_TYPES,\n  sendMessage: (message: string) => void,\n  processTurbopackMessage: (msg: TurbopackMsgToBrowser) => void,\n  router: ReturnType<typeof useRouter>,\n  dispatcher: Dispatcher,\n  appIsrManifestRef: ReturnType<typeof useRef>,\n  pathnameRef: ReturnType<typeof useRef>\n) {\n  if (!('action' in obj)) {\n    return\n  }\n\n  function handleErrors(errors: ReadonlyArray<unknown>) {\n    // \"Massage\" webpack messages.\n    const formatted = formatWebpackMessages({\n      errors: errors,\n      warnings: [],\n    })\n\n    // Only show the first error.\n    dispatcher.onBuildError(formatted.errors[0])\n\n    // Also log them to the console.\n    for (let i = 0; i < formatted.errors.length; i++) {\n      console.error(stripAnsi(formatted.errors[i]))\n    }\n\n    // Do not attempt to reload now.\n    // We will reload on next success instead.\n    if (process.env.__NEXT_TEST_MODE) {\n      if (self.__NEXT_HMR_CB) {\n        self.__NEXT_HMR_CB(formatted.errors[0])\n        self.__NEXT_HMR_CB = null\n      }\n    }\n  }\n\n  function handleHotUpdate() {\n    if (process.env.TURBOPACK) {\n      dispatcher.onBuildOk()\n    } else {\n      tryApplyUpdates(\n        function onBeforeHotUpdate(hasUpdates: boolean) {\n          handleBeforeHotUpdateWebpack(dispatcher, hasUpdates)\n        },\n        function onSuccessfulHotUpdate(webpackUpdatedModules: string[]) {\n          // Only dismiss it when we're sure it's a hot update.\n          // Otherwise it would flicker right before the reload.\n          handleSuccessfulHotUpdateWebpack(\n            dispatcher,\n            sendMessage,\n            webpackUpdatedModules\n          )\n        },\n        sendMessage,\n        dispatcher\n      )\n    }\n  }\n\n  switch (obj.action) {\n    case HMR_ACTIONS_SENT_TO_BROWSER.APP_ISR_MANIFEST: {\n      if (process.env.__NEXT_APP_ISR_INDICATOR) {\n        if (appIsrManifestRef) {\n          appIsrManifestRef.current = obj.data\n\n          // handle initial status on receiving manifest\n          // navigation is handled in useEffect for pathname changes\n          // as we'll receive the updated manifest before usePathname\n          // triggers for new value\n          if ((pathnameRef.current as string) in obj.data) {\n            dispatcher.onStaticIndicator(true)\n          } else {\n            dispatcher.onStaticIndicator(false)\n          }\n        }\n      }\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILDING: {\n      startLatency = Date.now()\n      if (!process.env.TURBOPACK) {\n        setPendingHotUpdateWebpack()\n      }\n      console.log('[Fast Refresh] rebuilding')\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.BUILT:\n    case HMR_ACTIONS_SENT_TO_BROWSER.SYNC: {\n      if (obj.hash) {\n        handleAvailableHash(obj.hash)\n      }\n\n      const { errors, warnings } = obj\n\n      // Is undefined when it's a 'built' event\n      if ('versionInfo' in obj) dispatcher.onVersionInfo(obj.versionInfo)\n      if ('debug' in obj && obj.debug) dispatcher.onDebugInfo(obj.debug)\n\n      const hasErrors = Boolean(errors && errors.length)\n      // Compilation with errors (e.g. syntax error or missing modules).\n      if (hasErrors) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-error',\n            errorCount: errors.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        handleErrors(errors)\n        return\n      }\n\n      const hasWarnings = Boolean(warnings && warnings.length)\n      if (hasWarnings) {\n        sendMessage(\n          JSON.stringify({\n            event: 'client-warning',\n            warningCount: warnings.length,\n            clientId: __nextDevClientId,\n          })\n        )\n\n        // Print warnings to the console.\n        const formattedMessages = formatWebpackMessages({\n          warnings: warnings,\n          errors: [],\n        })\n\n        for (let i = 0; i < formattedMessages.warnings.length; i++) {\n          if (i === 5) {\n            console.warn(\n              'There were more warnings in other files.\\n' +\n                'You can find a complete log in the terminal.'\n            )\n            break\n          }\n          console.warn(stripAnsi(formattedMessages.warnings[i]))\n        }\n\n        // No early return here as we need to apply modules in the same way between warnings only and compiles without warnings\n      }\n\n      sendMessage(\n        JSON.stringify({\n          event: 'client-success',\n          clientId: __nextDevClientId,\n        })\n      )\n\n      if (obj.action === HMR_ACTIONS_SENT_TO_BROWSER.BUILT) {\n        // Handle hot updates\n        handleHotUpdate()\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED: {\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED,\n        data: {\n          sessionId: obj.data.sessionId,\n        },\n      })\n      break\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE: {\n      const updatedModules = extractModulesFromTurbopackMessage(obj.data)\n      dispatcher.onBeforeRefresh()\n      processTurbopackMessage({\n        type: HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n        data: obj.data,\n      })\n      dispatcher.onRefresh()\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        console.warn(REACT_REFRESH_FULL_RELOAD_FROM_ERROR)\n        performFullReload(null, sendMessage)\n      }\n      reportHmrLatency(sendMessage, updatedModules)\n      break\n    }\n    // TODO-APP: make server component change more granular\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES: {\n      sendMessage(\n        JSON.stringify({\n          event: 'server-component-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (RuntimeErrorHandler.hadRuntimeError) {\n        if (reloading) return\n        reloading = true\n        return window.location.reload()\n      }\n      resolvePendingHotUpdateWebpack()\n      startTransition(() => {\n        router.hmrRefresh()\n        dispatcher.onRefresh()\n      })\n\n      if (process.env.__NEXT_TEST_MODE) {\n        if (self.__NEXT_HMR_CB) {\n          self.__NEXT_HMR_CB()\n          self.__NEXT_HMR_CB = null\n        }\n      }\n\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE: {\n      sendMessage(\n        JSON.stringify({\n          event: 'client-reload-page',\n          clientId: __nextDevClientId,\n        })\n      )\n      if (reloading) return\n      reloading = true\n      return window.location.reload()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE:\n    case HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE: {\n      // TODO-APP: potentially only refresh if the currently viewed page was added/removed.\n      return router.hmrRefresh()\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ERROR: {\n      const { errorJSON } = obj\n      if (errorJSON) {\n        const { message, stack } = JSON.parse(errorJSON)\n        const error = new Error(message)\n        error.stack = stack\n        handleErrors([error])\n      }\n      return\n    }\n    case HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE: {\n      return\n    }\n    default: {\n    }\n  }\n}\n\nexport default function HotReload({\n  assetPrefix,\n  children,\n}: {\n  assetPrefix: string\n  children?: ReactNode\n}) {\n  const [state, dispatch] = useErrorOverlayReducer()\n\n  const dispatcher = useMemo<Dispatcher>(() => {\n    return {\n      onBuildOk() {\n        dispatch({ type: ACTION_BUILD_OK })\n      },\n      onBuildError(message) {\n        dispatch({ type: ACTION_BUILD_ERROR, message })\n      },\n      onBeforeRefresh() {\n        dispatch({ type: ACTION_BEFORE_REFRESH })\n      },\n      onRefresh() {\n        dispatch({ type: ACTION_REFRESH })\n      },\n      onVersionInfo(versionInfo) {\n        dispatch({ type: ACTION_VERSION_INFO, versionInfo })\n      },\n      onStaticIndicator(status: boolean) {\n        dispatch({ type: ACTION_STATIC_INDICATOR, staticIndicator: status })\n      },\n      onDebugInfo(debugInfo) {\n        dispatch({ type: ACTION_DEBUG_INFO, debugInfo })\n      },\n    }\n  }, [dispatch])\n\n  const handleOnUnhandledError = useCallback(\n    (error: Error): void => {\n      const errorDetails = (error as any).details as\n        | HydrationErrorState\n        | undefined\n      // Component stack is added to the error in use-error-handler in case there was a hydration error\n      const componentStackTrace =\n        (error as any)._componentStack || errorDetails?.componentStack\n      const warning = errorDetails?.warning\n      dispatch({\n        type: ACTION_UNHANDLED_ERROR,\n        reason: error,\n        frames: parseStack(error.stack!),\n        componentStackFrames:\n          typeof componentStackTrace === 'string'\n            ? parseComponentStack(componentStackTrace)\n            : undefined,\n        warning,\n      })\n    },\n    [dispatch]\n  )\n  const handleOnUnhandledRejection = useCallback(\n    (reason: Error): void => {\n      dispatch({\n        type: ACTION_UNHANDLED_REJECTION,\n        reason: reason,\n        frames: parseStack(reason.stack!),\n      })\n    },\n    [dispatch]\n  )\n  const handleOnReactError = useCallback(() => {\n    RuntimeErrorHandler.hadRuntimeError = true\n  }, [])\n  useErrorHandler(handleOnUnhandledError, handleOnUnhandledRejection)\n\n  const webSocketRef = useWebsocket(assetPrefix)\n  useWebsocketPing(webSocketRef)\n  const sendMessage = useSendMessage(webSocketRef)\n  const processTurbopackMessage = useTurbopack(sendMessage, (err) =>\n    performFullReload(err, sendMessage)\n  )\n\n  const router = useRouter()\n  const pathname = usePathname()\n  const appIsrManifestRef = useRef<Record<string, false | number>>({})\n  const pathnameRef = useRef(pathname)\n\n  if (process.env.__NEXT_APP_ISR_INDICATOR) {\n    // this conditional is only for dead-code elimination which\n    // isn't a runtime conditional only build-time so ignore hooks rule\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      pathnameRef.current = pathname\n\n      const appIsrManifest = appIsrManifestRef.current\n\n      if (appIsrManifest) {\n        if (pathname in appIsrManifest) {\n          dispatcher.onStaticIndicator(true)\n        } else {\n          dispatcher.onStaticIndicator(false)\n        }\n      }\n    }, [pathname, dispatcher])\n  }\n\n  useEffect(() => {\n    const websocket = webSocketRef.current\n    if (!websocket) return\n\n    const handler = (event: MessageEvent<any>) => {\n      try {\n        const obj = JSON.parse(event.data)\n        processMessage(\n          obj,\n          sendMessage,\n          processTurbopackMessage,\n          router,\n          dispatcher,\n          appIsrManifestRef,\n          pathnameRef\n        )\n      } catch (err: any) {\n        console.warn(\n          '[HMR] Invalid message: ' + event.data + '\\n' + (err?.stack ?? '')\n        )\n      }\n    }\n\n    websocket.addEventListener('message', handler)\n    return () => websocket.removeEventListener('message', handler)\n  }, [\n    sendMessage,\n    router,\n    webSocketRef,\n    dispatcher,\n    processTurbopackMessage,\n    appIsrManifestRef,\n  ])\n\n  return (\n    <ReactDevOverlay\n      onReactError={handleOnReactError}\n      state={state}\n      dispatcher={dispatcher}\n    >\n      {children}\n    </ReactDevOverlay>\n  )\n}\n"],"names":["useCallback","useEffect","startTransition","useMemo","useRef","stripAnsi","formatWebpackMessages","usePathname","useRouter","ACTION_BEFORE_REFRESH","ACTION_BUILD_ERROR","ACTION_BUILD_OK","ACTION_DEBUG_INFO","ACTION_REFRESH","ACTION_STATIC_INDICATOR","ACTION_UNHANDLED_ERROR","ACTION_UNHANDLED_REJECTION","ACTION_VERSION_INFO","useErrorOverlayReducer","parseStack","ReactDevOverlay","useErrorHandler","RuntimeErrorHandler","useSendMessage","useTurbopack","useWebsocket","useWebsocketPing","parseComponentStack","HMR_ACTIONS_SENT_TO_BROWSER","extractModulesFromTurbopackMessage","REACT_REFRESH_FULL_RELOAD_FROM_ERROR","mostRecentCompilationHash","__nextDevClientId","Math","round","random","Date","now","reloading","startLatency","pendingHotUpdateWebpack","Promise","resolve","resolvePendingHotUpdateWebpack","setPendingHotUpdateWebpack","waitForWebpackRuntimeHotUpdate","handleBeforeHotUpdateWebpack","dispatcher","hasUpdates","onBeforeRefresh","handleSuccessfulHotUpdateWebpack","sendMessage","updatedModules","onBuildOk","reportHmrLatency","onRefresh","endLatency","latency","console","log","JSON","stringify","event","id","window","startTime","endTime","page","location","pathname","isPageHidden","document","visibilityState","handleAvailableHash","hash","isUpdateAvailable","process","env","TURBOPACK","__webpack_hash__","canApplyUpdates","module","hot","status","afterApplyUpdates","fn","handler","removeStatusHandler","addStatusHandler","performFullReload","err","stackTrace","stack","split","slice","join","message","hadRuntimeError","dependencyChain","undefined","reload","tryApplyUpdates","onBeforeUpdate","onHotUpdateSuccess","handleApplyUpdates","warn","Boolean","length","__NEXT_TEST_MODE","self","__NEXT_HMR_CB","check","then","apply","processMessage","obj","processTurbopackMessage","router","appIsrManifestRef","pathnameRef","handleErrors","errors","formatted","warnings","onBuildError","i","error","handleHotUpdate","onBeforeHotUpdate","onSuccessfulHotUpdate","webpackUpdatedModules","action","APP_ISR_MANIFEST","__NEXT_APP_ISR_INDICATOR","current","data","onStaticIndicator","BUILDING","BUILT","SYNC","onVersionInfo","versionInfo","debug","onDebugInfo","hasErrors","errorCount","clientId","hasWarnings","warningCount","formattedMessages","TURBOPACK_CONNECTED","type","sessionId","TURBOPACK_MESSAGE","SERVER_COMPONENT_CHANGES","hmrRefresh","RELOAD_PAGE","ADDED_PAGE","REMOVED_PAGE","SERVER_ERROR","errorJSON","parse","Error","DEV_PAGES_MANIFEST_UPDATE","HotReload","assetPrefix","children","state","dispatch","staticIndicator","debugInfo","handleOnUnhandledError","errorDetails","details","componentStackTrace","_componentStack","componentStack","warning","reason","frames","componentStackFrames","handleOnUnhandledRejection","handleOnReactError","webSocketRef","appIsrManifest","websocket","addEventListener","removeEventListener","onReactError"],"mappings":"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"}