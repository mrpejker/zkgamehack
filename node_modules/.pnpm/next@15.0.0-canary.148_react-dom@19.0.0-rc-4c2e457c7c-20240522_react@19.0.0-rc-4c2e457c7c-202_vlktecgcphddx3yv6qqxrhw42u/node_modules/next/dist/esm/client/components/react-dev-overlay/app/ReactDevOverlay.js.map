{"version":3,"sources":["../../../../../src/client/components/react-dev-overlay/app/ReactDevOverlay.tsx"],"sourcesContent":["import * as React from 'react'\nimport { ACTION_UNHANDLED_ERROR, type OverlayState } from '../shared'\n\nimport { ShadowPortal } from '../internal/components/ShadowPortal'\nimport { BuildError } from '../internal/container/BuildError'\nimport { Errors } from '../internal/container/Errors'\nimport { StaticIndicator } from '../internal/container/StaticIndicator'\nimport type { SupportedErrorEvent } from '../internal/container/Errors'\nimport { parseStack } from '../internal/helpers/parseStack'\nimport { Base } from '../internal/styles/Base'\nimport { ComponentStyles } from '../internal/styles/ComponentStyles'\nimport { CssReset } from '../internal/styles/CssReset'\nimport { RootLayoutMissingTagsError } from '../internal/container/root-layout-missing-tags-error'\nimport type { Dispatcher } from './hot-reloader-client'\n\ninterface ReactDevOverlayState {\n  reactError: SupportedErrorEvent | null\n}\nexport default class ReactDevOverlay extends React.PureComponent<\n  {\n    state: OverlayState\n    dispatcher?: Dispatcher\n    children: React.ReactNode\n    onReactError: (error: Error) => void\n  },\n  ReactDevOverlayState\n> {\n  state = { reactError: null }\n\n  static getDerivedStateFromError(error: Error): ReactDevOverlayState {\n    if (!error.stack) return { reactError: null }\n    return {\n      reactError: {\n        id: 0,\n        event: {\n          type: ACTION_UNHANDLED_ERROR,\n          reason: error,\n          frames: parseStack(error.stack),\n        },\n      },\n    }\n  }\n\n  componentDidCatch(componentErr: Error) {\n    this.props.onReactError(componentErr)\n  }\n\n  render() {\n    const { state, children, dispatcher } = this.props\n    const { reactError } = this.state\n\n    const hasBuildError = state.buildError != null\n    const hasRuntimeErrors = Boolean(state.errors.length)\n    const hasStaticIndicator = state.staticIndicator\n    const debugInfo = state.debugInfo\n\n    return (\n      <>\n        {reactError ? (\n          <html>\n            <head></head>\n            <body></body>\n          </html>\n        ) : (\n          children\n        )}\n        <ShadowPortal>\n          <CssReset />\n          <Base />\n          <ComponentStyles />\n          {state.rootLayoutMissingTags?.length ? (\n            <RootLayoutMissingTagsError\n              missingTags={state.rootLayoutMissingTags}\n            />\n          ) : hasBuildError ? (\n            <BuildError\n              message={state.buildError!}\n              versionInfo={state.versionInfo}\n            />\n          ) : (\n            <>\n              {reactError ? (\n                <Errors\n                  isAppDir={true}\n                  versionInfo={state.versionInfo}\n                  initialDisplayState=\"fullscreen\"\n                  errors={[reactError]}\n                  hasStaticIndicator={hasStaticIndicator}\n                  debugInfo={debugInfo}\n                />\n              ) : hasRuntimeErrors ? (\n                <Errors\n                  isAppDir={true}\n                  initialDisplayState=\"minimized\"\n                  errors={state.errors}\n                  versionInfo={state.versionInfo}\n                  hasStaticIndicator={hasStaticIndicator}\n                  debugInfo={debugInfo}\n                />\n              ) : null}\n\n              {hasStaticIndicator && (\n                <StaticIndicator dispatcher={dispatcher} />\n              )}\n            </>\n          )}\n        </ShadowPortal>\n      </>\n    )\n  }\n}\n"],"names":["React","ACTION_UNHANDLED_ERROR","ShadowPortal","BuildError","Errors","StaticIndicator","parseStack","Base","ComponentStyles","CssReset","RootLayoutMissingTagsError","ReactDevOverlay","PureComponent","getDerivedStateFromError","error","stack","reactError","id","event","type","reason","frames","componentDidCatch","componentErr","props","onReactError","render","state","children","dispatcher","hasBuildError","buildError","hasRuntimeErrors","Boolean","errors","length","hasStaticIndicator","staticIndicator","debugInfo","html","head","body","rootLayoutMissingTags","missingTags","message","versionInfo","isAppDir","initialDisplayState"],"mappings":";AAAA,YAAYA,WAAW,QAAO;AAC9B,SAASC,sBAAsB,QAA2B,YAAW;AAErE,SAASC,YAAY,QAAQ,sCAAqC;AAClE,SAASC,UAAU,QAAQ,mCAAkC;AAC7D,SAASC,MAAM,QAAQ,+BAA8B;AACrD,SAASC,eAAe,QAAQ,wCAAuC;AAEvE,SAASC,UAAU,QAAQ,iCAAgC;AAC3D,SAASC,IAAI,QAAQ,0BAAyB;AAC9C,SAASC,eAAe,QAAQ,qCAAoC;AACpE,SAASC,QAAQ,QAAQ,8BAA6B;AACtD,SAASC,0BAA0B,QAAQ,uDAAsD;AAMlF,MAAMC,wBAAwBX,MAAMY,aAAa;IAW9D,OAAOC,yBAAyBC,KAAY,EAAwB;QAClE,IAAI,CAACA,MAAMC,KAAK,EAAE,OAAO;YAAEC,YAAY;QAAK;QAC5C,OAAO;YACLA,YAAY;gBACVC,IAAI;gBACJC,OAAO;oBACLC,MAAMlB;oBACNmB,QAAQN;oBACRO,QAAQf,WAAWQ,MAAMC,KAAK;gBAChC;YACF;QACF;IACF;IAEAO,kBAAkBC,YAAmB,EAAE;QACrC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACF;IAC1B;IAEAG,SAAS;YAuBAC;QAtBP,MAAM,EAAEA,KAAK,EAAEC,QAAQ,EAAEC,UAAU,EAAE,GAAG,IAAI,CAACL,KAAK;QAClD,MAAM,EAAER,UAAU,EAAE,GAAG,IAAI,CAACW,KAAK;QAEjC,MAAMG,gBAAgBH,MAAMI,UAAU,IAAI;QAC1C,MAAMC,mBAAmBC,QAAQN,MAAMO,MAAM,CAACC,MAAM;QACpD,MAAMC,qBAAqBT,MAAMU,eAAe;QAChD,MAAMC,YAAYX,MAAMW,SAAS;QAEjC,qBACE;;gBACGtB,2BACC,MAACuB;;sCACC,KAACC;sCACD,KAACC;;qBAGHb;8BAEF,MAAC1B;;sCACC,KAACO;sCACD,KAACF;sCACD,KAACC;wBACAmB,EAAAA,+BAAAA,MAAMe,qBAAqB,qBAA3Bf,6BAA6BQ,MAAM,kBAClC,KAACzB;4BACCiC,aAAahB,MAAMe,qBAAqB;6BAExCZ,8BACF,KAAC3B;4BACCyC,SAASjB,MAAMI,UAAU;4BACzBc,aAAalB,MAAMkB,WAAW;2CAGhC;;gCACG7B,2BACC,KAACZ;oCACC0C,UAAU;oCACVD,aAAalB,MAAMkB,WAAW;oCAC9BE,qBAAoB;oCACpBb,QAAQ;wCAAClB;qCAAW;oCACpBoB,oBAAoBA;oCACpBE,WAAWA;qCAEXN,iCACF,KAAC5B;oCACC0C,UAAU;oCACVC,qBAAoB;oCACpBb,QAAQP,MAAMO,MAAM;oCACpBW,aAAalB,MAAMkB,WAAW;oCAC9BT,oBAAoBA;oCACpBE,WAAWA;qCAEX;gCAEHF,oCACC,KAAC/B;oCAAgBwB,YAAYA;;;;;;;;IAO3C;;;aAlFAF,QAAQ;YAAEX,YAAY;QAAK;;AAmF7B;AA5FA,SAAqBL,6BA4FpB"}