{"version":3,"sources":["../../src/server/image-optimizer.ts"],"sourcesContent":["import { createHash } from 'crypto'\nimport { promises } from 'fs'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport { mediaType } from 'next/dist/compiled/@hapi/accept'\nimport contentDisposition from 'next/dist/compiled/content-disposition'\nimport imageSizeOf from 'next/dist/compiled/image-size'\nimport isAnimated from 'next/dist/compiled/is-animated'\nimport { join } from 'path'\nimport nodeUrl, { type UrlWithParsedQuery } from 'url'\n\nimport { getImageBlurSvg } from '../shared/lib/image-blur-svg'\nimport type { ImageConfigComplete } from '../shared/lib/image-config'\nimport { hasMatch } from '../shared/lib/match-remote-pattern'\nimport type { NextConfigComplete } from './config-shared'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport type { NextUrlWithParsedQuery } from './request-meta'\nimport {\n  CachedRouteKind,\n  type IncrementalCacheEntry,\n  type IncrementalCacheValue,\n} from './response-cache'\nimport { sendEtagResponse } from './send-payload'\nimport { getContentType, getExtension } from './serve-static'\nimport * as Log from '../build/output/log'\nimport isError from '../lib/is-error'\nimport { parseUrl } from '../lib/url'\n\ntype XCacheHeader = 'MISS' | 'HIT' | 'STALE'\n\nconst AVIF = 'image/avif'\nconst WEBP = 'image/webp'\nconst PNG = 'image/png'\nconst JPEG = 'image/jpeg'\nconst GIF = 'image/gif'\nconst SVG = 'image/svg+xml'\nconst ICO = 'image/x-icon'\nconst TIFF = 'image/tiff'\nconst BMP = 'image/bmp'\nconst CACHE_VERSION = 3\nconst ANIMATABLE_TYPES = [WEBP, PNG, GIF]\nconst VECTOR_TYPES = [SVG]\nconst BLUR_IMG_SIZE = 8 // should match `next-image-loader`\nconst BLUR_QUALITY = 70 // should match `next-image-loader`\n\nlet _sharp: typeof import('sharp')\n\nfunction getSharp() {\n  if (_sharp) {\n    return _sharp\n  }\n  try {\n    _sharp = require('sharp')\n    if (_sharp && _sharp.concurrency() > 1) {\n      // Reducing concurrency should reduce the memory usage too.\n      // We more aggressively reduce in dev but also reduce in prod.\n      // https://sharp.pixelplumbing.com/api-utility#concurrency\n      const divisor = process.env.NODE_ENV === 'development' ? 4 : 2\n      _sharp.concurrency(\n        Math.floor(Math.max(_sharp.concurrency() / divisor, 1))\n      )\n    }\n  } catch (e: unknown) {\n    if (isError(e) && e.code === 'MODULE_NOT_FOUND') {\n      throw new Error(\n        'Module `sharp` not found. Please run `npm install --cpu=wasm32 sharp` to install it.'\n      )\n    }\n    throw e\n  }\n  return _sharp\n}\n\nexport interface ImageParamsResult {\n  href: string\n  isAbsolute: boolean\n  isStatic: boolean\n  width: number\n  quality: number\n  mimeType: string\n  sizes: number[]\n  minimumCacheTTL: number\n}\n\ninterface ImageUpstream {\n  buffer: Buffer\n  contentType: string | null | undefined\n  cacheControl: string | null | undefined\n}\n\nfunction getSupportedMimeType(options: string[], accept = ''): string {\n  const mimeType = mediaType(accept, options)\n  return accept.includes(mimeType) ? mimeType : ''\n}\n\nexport function getHash(items: (string | number | Buffer)[]) {\n  const hash = createHash('sha256')\n  for (let item of items) {\n    if (typeof item === 'number') hash.update(String(item))\n    else {\n      hash.update(item)\n    }\n  }\n  // See https://en.wikipedia.org/wiki/Base64#Filenames\n  return hash.digest('base64').replace(/\\//g, '-')\n}\n\nasync function writeToCacheDir(\n  dir: string,\n  extension: string,\n  maxAge: number,\n  expireAt: number,\n  buffer: Buffer,\n  etag: string\n) {\n  const filename = join(dir, `${maxAge}.${expireAt}.${etag}.${extension}`)\n\n  await promises.rm(dir, { recursive: true, force: true }).catch(() => {})\n\n  await promises.mkdir(dir, { recursive: true })\n  await promises.writeFile(filename, buffer)\n}\n\n/**\n * Inspects the first few bytes of a buffer to determine if\n * it matches the \"magic number\" of known file signatures.\n * https://en.wikipedia.org/wiki/List_of_file_signatures\n */\nexport function detectContentType(buffer: Buffer) {\n  if ([0xff, 0xd8, 0xff].every((b, i) => buffer[i] === b)) {\n    return JPEG\n  }\n  if (\n    [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a].every(\n      (b, i) => buffer[i] === b\n    )\n  ) {\n    return PNG\n  }\n  if ([0x47, 0x49, 0x46, 0x38].every((b, i) => buffer[i] === b)) {\n    return GIF\n  }\n  if (\n    [0x52, 0x49, 0x46, 0x46, 0, 0, 0, 0, 0x57, 0x45, 0x42, 0x50].every(\n      (b, i) => !b || buffer[i] === b\n    )\n  ) {\n    return WEBP\n  }\n  if ([0x3c, 0x3f, 0x78, 0x6d, 0x6c].every((b, i) => buffer[i] === b)) {\n    return SVG\n  }\n  if ([0x3c, 0x73, 0x76, 0x67].every((b, i) => buffer[i] === b)) {\n    return SVG\n  }\n  if (\n    [0, 0, 0, 0, 0x66, 0x74, 0x79, 0x70, 0x61, 0x76, 0x69, 0x66].every(\n      (b, i) => !b || buffer[i] === b\n    )\n  ) {\n    return AVIF\n  }\n  if ([0x00, 0x00, 0x01, 0x00].every((b, i) => buffer[i] === b)) {\n    return ICO\n  }\n  if ([0x49, 0x49, 0x2a, 0x00].every((b, i) => buffer[i] === b)) {\n    return TIFF\n  }\n  if ([0x42, 0x4d].every((b, i) => buffer[i] === b)) {\n    return BMP\n  }\n  return null\n}\n\nexport class ImageOptimizerCache {\n  private cacheDir: string\n  private nextConfig: NextConfigComplete\n\n  static validateParams(\n    req: IncomingMessage,\n    query: UrlWithParsedQuery['query'],\n    nextConfig: NextConfigComplete,\n    isDev: boolean\n  ): ImageParamsResult | { errorMessage: string } {\n    const imageData = nextConfig.images\n    const {\n      deviceSizes = [],\n      imageSizes = [],\n      domains = [],\n      minimumCacheTTL = 60,\n      formats = ['image/webp'],\n    } = imageData\n    const remotePatterns = nextConfig.images?.remotePatterns || []\n    const { url, w, q } = query\n    let href: string\n\n    if (domains.length > 0) {\n      Log.warnOnce(\n        'The \"images.domains\" configuration is deprecated. Please use \"images.remotePatterns\" configuration instead.'\n      )\n    }\n\n    if (!url) {\n      return { errorMessage: '\"url\" parameter is required' }\n    } else if (Array.isArray(url)) {\n      return { errorMessage: '\"url\" parameter cannot be an array' }\n    }\n\n    if (url.length > 3072) {\n      return { errorMessage: '\"url\" parameter is too long' }\n    }\n\n    if (url.startsWith('//')) {\n      return {\n        errorMessage: '\"url\" parameter cannot be a protocol-relative URL (//)',\n      }\n    }\n\n    let isAbsolute: boolean\n\n    if (url.startsWith('/')) {\n      href = url\n      isAbsolute = false\n      if (\n        /\\/_next\\/image($|\\/)/.test(\n          decodeURIComponent(parseUrl(url)?.pathname ?? '')\n        )\n      ) {\n        return {\n          errorMessage: '\"url\" parameter cannot be recursive',\n        }\n      }\n    } else {\n      let hrefParsed: URL\n\n      try {\n        hrefParsed = new URL(url)\n        href = hrefParsed.toString()\n        isAbsolute = true\n      } catch (_error) {\n        return { errorMessage: '\"url\" parameter is invalid' }\n      }\n\n      if (!['http:', 'https:'].includes(hrefParsed.protocol)) {\n        return { errorMessage: '\"url\" parameter is invalid' }\n      }\n\n      if (!hasMatch(domains, remotePatterns, hrefParsed)) {\n        return { errorMessage: '\"url\" parameter is not allowed' }\n      }\n    }\n\n    if (!w) {\n      return { errorMessage: '\"w\" parameter (width) is required' }\n    } else if (Array.isArray(w)) {\n      return { errorMessage: '\"w\" parameter (width) cannot be an array' }\n    } else if (!/^[0-9]+$/.test(w)) {\n      return {\n        errorMessage: '\"w\" parameter (width) must be an integer greater than 0',\n      }\n    }\n\n    if (!q) {\n      return { errorMessage: '\"q\" parameter (quality) is required' }\n    } else if (Array.isArray(q)) {\n      return { errorMessage: '\"q\" parameter (quality) cannot be an array' }\n    } else if (!/^[0-9]+$/.test(q)) {\n      return {\n        errorMessage:\n          '\"q\" parameter (quality) must be an integer between 1 and 100',\n      }\n    }\n\n    const width = parseInt(w, 10)\n\n    if (width <= 0 || isNaN(width)) {\n      return {\n        errorMessage: '\"w\" parameter (width) must be an integer greater than 0',\n      }\n    }\n\n    const sizes = [...(deviceSizes || []), ...(imageSizes || [])]\n\n    if (isDev) {\n      sizes.push(BLUR_IMG_SIZE)\n    }\n\n    const isValidSize =\n      sizes.includes(width) || (isDev && width <= BLUR_IMG_SIZE)\n\n    if (!isValidSize) {\n      return {\n        errorMessage: `\"w\" parameter (width) of ${width} is not allowed`,\n      }\n    }\n\n    const quality = parseInt(q, 10)\n\n    if (isNaN(quality) || quality < 1 || quality > 100) {\n      return {\n        errorMessage:\n          '\"q\" parameter (quality) must be an integer between 1 and 100',\n      }\n    }\n\n    const mimeType = getSupportedMimeType(formats || [], req.headers['accept'])\n\n    const isStatic = url.startsWith(\n      `${nextConfig.basePath || ''}/_next/static/media`\n    )\n\n    return {\n      href,\n      sizes,\n      isAbsolute,\n      isStatic,\n      width,\n      quality,\n      mimeType,\n      minimumCacheTTL,\n    }\n  }\n\n  static getCacheKey({\n    href,\n    width,\n    quality,\n    mimeType,\n  }: {\n    href: string\n    width: number\n    quality: number\n    mimeType: string\n  }): string {\n    return getHash([CACHE_VERSION, href, width, quality, mimeType])\n  }\n\n  constructor({\n    distDir,\n    nextConfig,\n  }: {\n    distDir: string\n    nextConfig: NextConfigComplete\n  }) {\n    this.cacheDir = join(distDir, 'cache', 'images')\n    this.nextConfig = nextConfig\n  }\n\n  async get(cacheKey: string): Promise<IncrementalCacheEntry | null> {\n    try {\n      const cacheDir = join(this.cacheDir, cacheKey)\n      const files = await promises.readdir(cacheDir)\n      const now = Date.now()\n\n      for (const file of files) {\n        const [maxAgeSt, expireAtSt, etag, extension] = file.split('.', 4)\n        const buffer = await promises.readFile(join(cacheDir, file))\n        const expireAt = Number(expireAtSt)\n        const maxAge = Number(maxAgeSt)\n\n        return {\n          value: {\n            kind: CachedRouteKind.IMAGE,\n            etag,\n            buffer,\n            extension,\n          },\n          revalidateAfter:\n            Math.max(maxAge, this.nextConfig.images.minimumCacheTTL) * 1000 +\n            Date.now(),\n          curRevalidate: maxAge,\n          isStale: now > expireAt,\n          isFallback: false,\n        }\n      }\n    } catch (_) {\n      // failed to read from cache dir, treat as cache miss\n    }\n    return null\n  }\n  async set(\n    cacheKey: string,\n    value: IncrementalCacheValue | null,\n    {\n      revalidate,\n    }: {\n      revalidate?: number | false\n    }\n  ) {\n    if (value?.kind !== CachedRouteKind.IMAGE) {\n      throw new Error('invariant attempted to set non-image to image-cache')\n    }\n\n    if (typeof revalidate !== 'number') {\n      throw new Error('invariant revalidate must be a number for image-cache')\n    }\n    const expireAt =\n      Math.max(revalidate, this.nextConfig.images.minimumCacheTTL) * 1000 +\n      Date.now()\n\n    try {\n      await writeToCacheDir(\n        join(this.cacheDir, cacheKey),\n        value.extension,\n        revalidate,\n        expireAt,\n        value.buffer,\n        value.etag\n      )\n    } catch (err) {\n      Log.error(`Failed to write image to cache ${cacheKey}`, err)\n    }\n  }\n}\nexport class ImageError extends Error {\n  statusCode: number\n\n  constructor(statusCode: number, message: string) {\n    super(message)\n\n    // ensure an error status is used > 400\n    if (statusCode >= 400) {\n      this.statusCode = statusCode\n    } else {\n      this.statusCode = 500\n    }\n  }\n}\n\nfunction parseCacheControl(\n  str: string | null | undefined\n): Map<string, string> {\n  const map = new Map<string, string>()\n  if (!str) {\n    return map\n  }\n  for (let directive of str.split(',')) {\n    let [key, value] = directive.trim().split('=', 2)\n    key = key.toLowerCase()\n    if (value) {\n      value = value.toLowerCase()\n    }\n    map.set(key, value)\n  }\n  return map\n}\n\nexport function getMaxAge(str: string | null | undefined): number {\n  const map = parseCacheControl(str)\n  if (map) {\n    let age = map.get('s-maxage') || map.get('max-age') || ''\n    if (age.startsWith('\"') && age.endsWith('\"')) {\n      age = age.slice(1, -1)\n    }\n    const n = parseInt(age, 10)\n    if (!isNaN(n)) {\n      return n\n    }\n  }\n  return 0\n}\n\nexport async function optimizeImage({\n  buffer,\n  contentType,\n  quality,\n  width,\n  height,\n}: {\n  buffer: Buffer\n  contentType: string\n  quality: number\n  width: number\n  height?: number\n}): Promise<Buffer> {\n  const sharp = getSharp()\n  const transformer = sharp(buffer).timeout({ seconds: 7 }).rotate()\n\n  if (height) {\n    transformer.resize(width, height)\n  } else {\n    transformer.resize(width, undefined, {\n      withoutEnlargement: true,\n    })\n  }\n\n  if (contentType === AVIF) {\n    const avifQuality = quality - 20\n    transformer.avif({\n      quality: Math.max(avifQuality, 1),\n    })\n  } else if (contentType === WEBP) {\n    transformer.webp({ quality })\n  } else if (contentType === PNG) {\n    transformer.png({ quality })\n  } else if (contentType === JPEG) {\n    transformer.jpeg({ quality, mozjpeg: true })\n  }\n\n  const optimizedBuffer = await transformer.toBuffer()\n\n  return optimizedBuffer\n}\n\nexport async function fetchExternalImage(href: string): Promise<ImageUpstream> {\n  const res = await fetch(href, {\n    signal: AbortSignal.timeout(7_000),\n  }).catch((err) => err as Error)\n\n  if (res instanceof Error) {\n    const err = res as Error\n    if (err.name === 'TimeoutError') {\n      Log.error('upstream image response timed out for', href)\n      throw new ImageError(\n        504,\n        '\"url\" parameter is valid but upstream response timed out'\n      )\n    }\n    throw err\n  }\n\n  if (!res.ok) {\n    Log.error('upstream image response failed for', href, res.status)\n    throw new ImageError(\n      res.status,\n      '\"url\" parameter is valid but upstream response is invalid'\n    )\n  }\n\n  const buffer = Buffer.from(await res.arrayBuffer())\n  const contentType = res.headers.get('Content-Type')\n  const cacheControl = res.headers.get('Cache-Control')\n\n  return { buffer, contentType, cacheControl }\n}\n\nexport async function fetchInternalImage(\n  href: string,\n  _req: IncomingMessage,\n  _res: ServerResponse,\n  handleRequest: (\n    newReq: IncomingMessage,\n    newRes: ServerResponse,\n    newParsedUrl?: NextUrlWithParsedQuery\n  ) => Promise<void>\n): Promise<ImageUpstream> {\n  try {\n    const mocked = createRequestResponseMocks({\n      url: href,\n      method: _req.method || 'GET',\n      headers: _req.headers,\n      socket: _req.socket,\n    })\n\n    await handleRequest(mocked.req, mocked.res, nodeUrl.parse(href, true))\n    await mocked.res.hasStreamed\n\n    if (!mocked.res.statusCode) {\n      Log.error('image response failed for', href, mocked.res.statusCode)\n      throw new ImageError(\n        mocked.res.statusCode,\n        '\"url\" parameter is valid but internal response is invalid'\n      )\n    }\n\n    const buffer = Buffer.concat(mocked.res.buffers)\n    const contentType = mocked.res.getHeader('Content-Type')\n    const cacheControl = mocked.res.getHeader('Cache-Control')\n    return { buffer, contentType, cacheControl }\n  } catch (err) {\n    Log.error('upstream image response failed for', href, err)\n    throw new ImageError(\n      500,\n      '\"url\" parameter is valid but upstream response is invalid'\n    )\n  }\n}\n\nexport async function imageOptimizer(\n  imageUpstream: ImageUpstream,\n  paramsResult: Pick<\n    ImageParamsResult,\n    'href' | 'width' | 'quality' | 'mimeType'\n  >,\n  nextConfig: {\n    images: Pick<\n      NextConfigComplete['images'],\n      'dangerouslyAllowSVG' | 'minimumCacheTTL'\n    >\n  },\n  isDev: boolean | undefined\n): Promise<{ buffer: Buffer; contentType: string; maxAge: number }> {\n  const { href, quality, width, mimeType } = paramsResult\n  const upstreamBuffer = imageUpstream.buffer\n  const maxAge = getMaxAge(imageUpstream.cacheControl)\n  const upstreamType =\n    detectContentType(upstreamBuffer) ||\n    imageUpstream.contentType?.toLowerCase().trim()\n\n  if (upstreamType) {\n    if (\n      upstreamType.startsWith('image/svg') &&\n      !nextConfig.images.dangerouslyAllowSVG\n    ) {\n      Log.error(\n        `The requested resource \"${href}\" has type \"${upstreamType}\" but dangerouslyAllowSVG is disabled`\n      )\n      throw new ImageError(\n        400,\n        '\"url\" parameter is valid but image type is not allowed'\n      )\n    }\n\n    if (ANIMATABLE_TYPES.includes(upstreamType) && isAnimated(upstreamBuffer)) {\n      Log.warnOnce(\n        `The requested resource \"${href}\" is an animated image so it will not be optimized. Consider adding the \"unoptimized\" property to the <Image>.`\n      )\n      return { buffer: upstreamBuffer, contentType: upstreamType, maxAge }\n    }\n    if (VECTOR_TYPES.includes(upstreamType)) {\n      // We don't warn here because we already know that \"dangerouslyAllowSVG\"\n      // was enabled above, therefore the user explicitly opted in.\n      // If we add more VECTOR_TYPES besides SVG, perhaps we could warn for those.\n      return { buffer: upstreamBuffer, contentType: upstreamType, maxAge }\n    }\n    if (!upstreamType.startsWith('image/') || upstreamType.includes(',')) {\n      Log.error(\n        \"The requested resource isn't a valid image for\",\n        href,\n        'received',\n        upstreamType\n      )\n      throw new ImageError(400, \"The requested resource isn't a valid image.\")\n    }\n  }\n\n  let contentType: string\n\n  if (mimeType) {\n    contentType = mimeType\n  } else if (\n    upstreamType?.startsWith('image/') &&\n    getExtension(upstreamType) &&\n    upstreamType !== WEBP &&\n    upstreamType !== AVIF\n  ) {\n    contentType = upstreamType\n  } else {\n    contentType = JPEG\n  }\n  try {\n    let optimizedBuffer = await optimizeImage({\n      buffer: upstreamBuffer,\n      contentType,\n      quality,\n      width,\n    })\n    if (optimizedBuffer) {\n      if (isDev && width <= BLUR_IMG_SIZE && quality === BLUR_QUALITY) {\n        // During `next dev`, we don't want to generate blur placeholders with webpack\n        // because it can delay starting the dev server. Instead, `next-image-loader.js`\n        // will inline a special url to lazily generate the blur placeholder at request time.\n        const meta = await getImageSize(optimizedBuffer)\n        const opts = {\n          blurWidth: meta.width,\n          blurHeight: meta.height,\n          blurDataURL: `data:${contentType};base64,${optimizedBuffer.toString(\n            'base64'\n          )}`,\n        }\n        optimizedBuffer = Buffer.from(unescape(getImageBlurSvg(opts)))\n        contentType = 'image/svg+xml'\n      }\n      return {\n        buffer: optimizedBuffer,\n        contentType,\n        maxAge: Math.max(maxAge, nextConfig.images.minimumCacheTTL),\n      }\n    } else {\n      throw new ImageError(500, 'Unable to optimize buffer')\n    }\n  } catch (error) {\n    if (upstreamBuffer && upstreamType) {\n      // If we fail to optimize, fallback to the original image\n      return {\n        buffer: upstreamBuffer,\n        contentType: upstreamType,\n        maxAge: nextConfig.images.minimumCacheTTL,\n      }\n    } else {\n      throw new ImageError(\n        400,\n        'Unable to optimize image and unable to fallback to upstream image'\n      )\n    }\n  }\n}\n\nfunction getFileNameWithExtension(\n  url: string,\n  contentType: string | null\n): string {\n  const [urlWithoutQueryParams] = url.split('?', 1)\n  const fileNameWithExtension = urlWithoutQueryParams.split('/').pop()\n  if (!contentType || !fileNameWithExtension) {\n    return 'image.bin'\n  }\n\n  const [fileName] = fileNameWithExtension.split('.', 1)\n  const extension = getExtension(contentType)\n  return `${fileName}.${extension}`\n}\n\nfunction setResponseHeaders(\n  req: IncomingMessage,\n  res: ServerResponse,\n  url: string,\n  etag: string,\n  contentType: string | null,\n  isStatic: boolean,\n  xCache: XCacheHeader,\n  imagesConfig: ImageConfigComplete,\n  maxAge: number,\n  isDev: boolean\n) {\n  res.setHeader('Vary', 'Accept')\n  res.setHeader(\n    'Cache-Control',\n    isStatic\n      ? 'public, max-age=315360000, immutable'\n      : `public, max-age=${isDev ? 0 : maxAge}, must-revalidate`\n  )\n  if (sendEtagResponse(req, res, etag)) {\n    // already called res.end() so we're finished\n    return { finished: true }\n  }\n  if (contentType) {\n    res.setHeader('Content-Type', contentType)\n  }\n\n  const fileName = getFileNameWithExtension(url, contentType)\n  res.setHeader(\n    'Content-Disposition',\n    contentDisposition(fileName, { type: imagesConfig.contentDispositionType })\n  )\n\n  res.setHeader('Content-Security-Policy', imagesConfig.contentSecurityPolicy)\n  res.setHeader('X-Nextjs-Cache', xCache)\n\n  return { finished: false }\n}\n\nexport function sendResponse(\n  req: IncomingMessage,\n  res: ServerResponse,\n  url: string,\n  extension: string,\n  buffer: Buffer,\n  isStatic: boolean,\n  xCache: XCacheHeader,\n  imagesConfig: ImageConfigComplete,\n  maxAge: number,\n  isDev: boolean\n) {\n  const contentType = getContentType(extension)\n  const etag = getHash([buffer])\n  const result = setResponseHeaders(\n    req,\n    res,\n    url,\n    etag,\n    contentType,\n    isStatic,\n    xCache,\n    imagesConfig,\n    maxAge,\n    isDev\n  )\n  if (!result.finished) {\n    res.setHeader('Content-Length', Buffer.byteLength(buffer))\n    res.end(buffer)\n  }\n}\n\nexport async function getImageSize(buffer: Buffer): Promise<{\n  width?: number\n  height?: number\n}> {\n  const { width, height } = imageSizeOf(buffer)\n  return { width, height }\n}\n"],"names":["createHash","promises","mediaType","contentDisposition","imageSizeOf","isAnimated","join","nodeUrl","getImageBlurSvg","hasMatch","createRequestResponseMocks","CachedRouteKind","sendEtagResponse","getContentType","getExtension","Log","isError","parseUrl","AVIF","WEBP","PNG","JPEG","GIF","SVG","ICO","TIFF","BMP","CACHE_VERSION","ANIMATABLE_TYPES","VECTOR_TYPES","BLUR_IMG_SIZE","BLUR_QUALITY","_sharp","getSharp","require","concurrency","divisor","process","env","NODE_ENV","Math","floor","max","e","code","Error","getSupportedMimeType","options","accept","mimeType","includes","getHash","items","hash","item","update","String","digest","replace","writeToCacheDir","dir","extension","maxAge","expireAt","buffer","etag","filename","rm","recursive","force","catch","mkdir","writeFile","detectContentType","every","b","i","ImageOptimizerCache","validateParams","req","query","nextConfig","isDev","imageData","images","deviceSizes","imageSizes","domains","minimumCacheTTL","formats","remotePatterns","url","w","q","href","length","warnOnce","errorMessage","Array","isArray","startsWith","isAbsolute","test","decodeURIComponent","pathname","hrefParsed","URL","toString","_error","protocol","width","parseInt","isNaN","sizes","push","isValidSize","quality","headers","isStatic","basePath","getCacheKey","constructor","distDir","cacheDir","get","cacheKey","files","readdir","now","Date","file","maxAgeSt","expireAtSt","split","readFile","Number","value","kind","IMAGE","revalidateAfter","curRevalidate","isStale","isFallback","_","set","revalidate","err","error","ImageError","statusCode","message","parseCacheControl","str","map","Map","directive","key","trim","toLowerCase","getMaxAge","age","endsWith","slice","n","optimizeImage","contentType","height","sharp","transformer","timeout","seconds","rotate","resize","undefined","withoutEnlargement","avifQuality","avif","webp","png","jpeg","mozjpeg","optimizedBuffer","toBuffer","fetchExternalImage","res","fetch","signal","AbortSignal","name","ok","status","Buffer","from","arrayBuffer","cacheControl","fetchInternalImage","_req","_res","handleRequest","mocked","method","socket","parse","hasStreamed","concat","buffers","getHeader","imageOptimizer","imageUpstream","paramsResult","upstreamBuffer","upstreamType","dangerouslyAllowSVG","meta","getImageSize","opts","blurWidth","blurHeight","blurDataURL","unescape","getFileNameWithExtension","urlWithoutQueryParams","fileNameWithExtension","pop","fileName","setResponseHeaders","xCache","imagesConfig","setHeader","finished","type","contentDispositionType","contentSecurityPolicy","sendResponse","result","byteLength","end"],"mappings":"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"}