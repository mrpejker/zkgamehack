{"version":3,"sources":["../../../src/server/dev/hot-reloader-webpack.ts"],"sourcesContent":["import type { NextConfigComplete } from '../config-shared'\nimport type { CustomRoutes } from '../../lib/load-custom-routes'\nimport type { Duplex } from 'stream'\nimport type { Telemetry } from '../../telemetry/storage'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { UrlObject } from 'url'\nimport type { RouteDefinition } from '../route-definitions/route-definition'\n\nimport { webpack, StringXor } from 'next/dist/compiled/webpack/webpack'\nimport { getOverlayMiddleware } from '../../client/components/react-dev-overlay/server/middleware'\nimport { WebpackHotMiddleware } from './hot-middleware'\nimport { join, relative, isAbsolute, posix } from 'path'\nimport {\n  createEntrypoints,\n  createPagesMapping,\n  finalizeEntrypoint,\n  getClientEntry,\n  getEdgeServerEntry,\n  getAppEntry,\n  runDependingOnPageType,\n  getStaticInfoIncludingLayouts,\n  getInstrumentationEntry,\n} from '../../build/entries'\nimport { watchCompilers } from '../../build/output'\nimport * as Log from '../../build/output/log'\nimport getBaseWebpackConfig, {\n  loadProjectInfo,\n} from '../../build/webpack-config'\nimport { APP_DIR_ALIAS, WEBPACK_LAYERS } from '../../lib/constants'\nimport { recursiveDelete } from '../../lib/recursive-delete'\nimport {\n  BLOCKED_PAGES,\n  CLIENT_STATIC_FILES_RUNTIME_AMP,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN,\n  CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n  CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH,\n  COMPILER_NAMES,\n  RSC_MODULE_TYPES,\n} from '../../shared/lib/constants'\nimport type { __ApiPreviewProps } from '../api-utils'\nimport { getPathMatch } from '../../shared/lib/router/utils/path-match'\nimport { findPageFile } from '../lib/find-page-file'\nimport {\n  BUILDING,\n  getEntries,\n  EntryTypes,\n  getInvalidator,\n  onDemandEntryHandler,\n} from './on-demand-entry-handler'\nimport { denormalizePagePath } from '../../shared/lib/page-path/denormalize-page-path'\nimport { normalizePathSep } from '../../shared/lib/page-path/normalize-path-sep'\nimport getRouteFromEntrypoint from '../get-route-from-entrypoint'\nimport {\n  difference,\n  isInstrumentationHookFile,\n  isMiddlewareFile,\n  isMiddlewareFilename,\n} from '../../build/utils'\nimport { DecodeError } from '../../shared/lib/utils'\nimport { type Span, trace } from '../../trace'\nimport { getProperError } from '../../lib/is-error'\nimport ws from 'next/dist/compiled/ws'\nimport { existsSync, promises as fs } from 'fs'\nimport type { UnwrapPromise } from '../../lib/coalesced-function'\nimport { parseVersionInfo } from './parse-version-info'\nimport type { VersionInfo } from './parse-version-info'\nimport { isAPIRoute } from '../../lib/is-api-route'\nimport { getRouteLoaderEntry } from '../../build/webpack/loaders/next-route-loader'\nimport {\n  isInternalComponent,\n  isNonRoutePagesPage,\n} from '../../lib/is-internal-component'\nimport { RouteKind } from '../route-kind'\nimport {\n  HMR_ACTIONS_SENT_TO_BROWSER,\n  type NextJsHotReloaderInterface,\n} from './hot-reloader-types'\nimport type { HMR_ACTION_TYPES } from './hot-reloader-types'\nimport type { WebpackError } from 'webpack'\nimport { PAGE_TYPES } from '../../lib/page-types'\nimport { FAST_REFRESH_RUNTIME_RELOAD } from './messages'\nimport { getNodeDebugType } from '../lib/utils'\n\nconst MILLISECONDS_IN_NANOSECOND = BigInt(1_000_000)\nconst isTestMode = !!(\n  process.env.NEXT_TEST_MODE ||\n  process.env.__NEXT_TEST_MODE ||\n  process.env.DEBUG\n)\n\nfunction diff(a: Set<any>, b: Set<any>) {\n  return new Set([...a].filter((v) => !b.has(v)))\n}\n\nconst wsServer = new ws.Server({ noServer: true })\n\nexport async function renderScriptError(\n  res: ServerResponse,\n  error: Error,\n  { verbose = true } = {}\n): Promise<{ finished: true | undefined }> {\n  // Asks CDNs and others to not to cache the errored page\n  res.setHeader(\n    'Cache-Control',\n    'no-cache, no-store, max-age=0, must-revalidate'\n  )\n\n  if ((error as any).code === 'ENOENT') {\n    return { finished: undefined }\n  }\n\n  if (verbose) {\n    console.error(error.stack)\n  }\n  res.statusCode = 500\n  res.end('500 - Internal Error')\n  return { finished: true }\n}\n\nfunction addCorsSupport(req: IncomingMessage, res: ServerResponse) {\n  // Only rewrite CORS handling when URL matches a hot-reloader middleware\n  if (!req.url!.startsWith('/__next')) {\n    return { preflight: false }\n  }\n\n  if (!req.headers.origin) {\n    return { preflight: false }\n  }\n\n  res.setHeader('Access-Control-Allow-Origin', req.headers.origin)\n  res.setHeader('Access-Control-Allow-Methods', 'OPTIONS, GET')\n  // Based on https://github.com/primus/access-control/blob/4cf1bc0e54b086c91e6aa44fb14966fa5ef7549c/index.js#L158\n  if (req.headers['access-control-request-headers']) {\n    res.setHeader(\n      'Access-Control-Allow-Headers',\n      req.headers['access-control-request-headers'] as string\n    )\n  }\n\n  if (req.method === 'OPTIONS') {\n    res.writeHead(200)\n    res.end()\n    return { preflight: true }\n  }\n\n  return { preflight: false }\n}\n\nexport const matchNextPageBundleRequest = getPathMatch(\n  '/_next/static/chunks/pages/:path*.js(\\\\.map|)'\n)\n\n// Iteratively look up the issuer till it ends up at the root\nfunction findEntryModule(\n  module: webpack.Module,\n  compilation: webpack.Compilation\n): any {\n  for (;;) {\n    const issuer = compilation.moduleGraph.getIssuer(module)\n    if (!issuer) return module\n    module = issuer\n  }\n}\n\nfunction erroredPages(compilation: webpack.Compilation) {\n  const failedPages: { [page: string]: WebpackError[] } = {}\n  for (const error of compilation.errors) {\n    if (!error.module) {\n      continue\n    }\n\n    const entryModule = findEntryModule(error.module, compilation)\n    const { name } = entryModule\n    if (!name) {\n      continue\n    }\n\n    // Only pages have to be reloaded\n    const enhancedName = getRouteFromEntrypoint(name)\n\n    if (!enhancedName) {\n      continue\n    }\n\n    if (!failedPages[enhancedName]) {\n      failedPages[enhancedName] = []\n    }\n\n    failedPages[enhancedName].push(error)\n  }\n\n  return failedPages\n}\n\nexport async function getVersionInfo(enabled: boolean): Promise<VersionInfo> {\n  let installed = '0.0.0'\n\n  if (!enabled) {\n    return { installed, staleness: 'unknown' }\n  }\n\n  try {\n    installed = require('next/package.json').version\n\n    let res\n\n    try {\n      // use NPM registry regardless user using Yarn\n      res = await fetch('https://registry.npmjs.org/-/package/next/dist-tags')\n    } catch {\n      // ignore fetch errors\n    }\n\n    if (!res || !res.ok) return { installed, staleness: 'unknown' }\n\n    const { latest, canary } = await res.json()\n\n    return parseVersionInfo({ installed, latest, canary })\n  } catch (e: any) {\n    console.error(e)\n    return { installed, staleness: 'unknown' }\n  }\n}\n\nexport default class HotReloaderWebpack implements NextJsHotReloaderInterface {\n  private hasAmpEntrypoints: boolean\n  private hasAppRouterEntrypoints: boolean\n  private hasPagesRouterEntrypoints: boolean\n  private dir: string\n  private buildId: string\n  private encryptionKey: string\n  private interceptors: any[]\n  private pagesDir?: string\n  private distDir: string\n  private webpackHotMiddleware?: WebpackHotMiddleware\n  private config: NextConfigComplete\n  private clientStats: webpack.Stats | null\n  private clientError: Error | null = null\n  private serverError: Error | null = null\n  private hmrServerError: Error | null = null\n  private serverPrevDocumentHash: string | null\n  private serverChunkNames?: Set<string>\n  private prevChunkNames?: Set<any>\n  private onDemandEntries?: ReturnType<typeof onDemandEntryHandler>\n  private previewProps: __ApiPreviewProps\n  private watcher: any\n  private rewrites: CustomRoutes['rewrites']\n  private fallbackWatcher: any\n  private hotReloaderSpan: Span\n  private pagesMapping: { [key: string]: string } = {}\n  private appDir?: string\n  private telemetry: Telemetry\n  private resetFetch: () => void\n  private versionInfo: VersionInfo = {\n    staleness: 'unknown',\n    installed: '0.0.0',\n  }\n  private devtoolsFrontendUrl: string | undefined\n  private reloadAfterInvalidation: boolean = false\n\n  public serverStats: webpack.Stats | null\n  public edgeServerStats: webpack.Stats | null\n  public multiCompiler?: webpack.MultiCompiler\n  public activeWebpackConfigs?: Array<\n    UnwrapPromise<ReturnType<typeof getBaseWebpackConfig>>\n  >\n\n  constructor(\n    dir: string,\n    {\n      config,\n      pagesDir,\n      distDir,\n      buildId,\n      encryptionKey,\n      previewProps,\n      rewrites,\n      appDir,\n      telemetry,\n      resetFetch,\n    }: {\n      config: NextConfigComplete\n      pagesDir?: string\n      distDir: string\n      buildId: string\n      encryptionKey: string\n      previewProps: __ApiPreviewProps\n      rewrites: CustomRoutes['rewrites']\n      appDir?: string\n      telemetry: Telemetry\n      resetFetch: () => void\n    }\n  ) {\n    this.hasAmpEntrypoints = false\n    this.hasAppRouterEntrypoints = false\n    this.hasPagesRouterEntrypoints = false\n    this.buildId = buildId\n    this.encryptionKey = encryptionKey\n    this.dir = dir\n    this.interceptors = []\n    this.pagesDir = pagesDir\n    this.appDir = appDir\n    this.distDir = distDir\n    this.clientStats = null\n    this.serverStats = null\n    this.edgeServerStats = null\n    this.serverPrevDocumentHash = null\n    this.telemetry = telemetry\n    this.resetFetch = resetFetch\n\n    this.config = config\n    this.previewProps = previewProps\n    this.rewrites = rewrites\n    this.hotReloaderSpan = trace('hot-reloader', undefined, {\n      version: process.env.__NEXT_VERSION as string,\n    })\n    // Ensure the hotReloaderSpan is flushed immediately as it's the parentSpan for all processing\n    // of the current `next dev` invocation.\n    this.hotReloaderSpan.stop()\n  }\n\n  public async run(\n    req: IncomingMessage,\n    res: ServerResponse,\n    parsedUrl: UrlObject\n  ): Promise<{ finished?: true }> {\n    // Usually CORS support is not needed for the hot-reloader (this is dev only feature)\n    // With when the app runs for multi-zones support behind a proxy,\n    // the current page is trying to access this URL via assetPrefix.\n    // That's when the CORS support is needed.\n    const { preflight } = addCorsSupport(req, res)\n    if (preflight) {\n      return {}\n    }\n\n    // When a request comes in that is a page bundle, e.g. /_next/static/<buildid>/pages/index.js\n    // we have to compile the page using on-demand-entries, this middleware will handle doing that\n    // by adding the page to on-demand-entries, waiting till it's done\n    // and then the bundle will be served like usual by the actual route in server/index.js\n    const handlePageBundleRequest = async (\n      pageBundleRes: ServerResponse,\n      parsedPageBundleUrl: UrlObject\n    ): Promise<{ finished?: true }> => {\n      const { pathname } = parsedPageBundleUrl\n      const params = matchNextPageBundleRequest(pathname)\n      if (!params) {\n        return {}\n      }\n\n      let decodedPagePath: string\n\n      try {\n        decodedPagePath = `/${params.path\n          .map((param: string) => decodeURIComponent(param))\n          .join('/')}`\n      } catch (_) {\n        throw new DecodeError('failed to decode param')\n      }\n\n      const page = denormalizePagePath(decodedPagePath)\n\n      if (page === '/_error' || BLOCKED_PAGES.indexOf(page) === -1) {\n        try {\n          await this.ensurePage({ page, clientOnly: true, url: req.url })\n        } catch (error) {\n          return await renderScriptError(pageBundleRes, getProperError(error))\n        }\n\n        const errors = await this.getCompilationErrors(page)\n        if (errors.length > 0) {\n          return await renderScriptError(pageBundleRes, errors[0], {\n            verbose: false,\n          })\n        }\n      }\n\n      return {}\n    }\n\n    const { finished } = await handlePageBundleRequest(res, parsedUrl)\n\n    for (const fn of this.interceptors) {\n      await new Promise<void>((resolve, reject) => {\n        fn(req, res, (err: Error) => {\n          if (err) return reject(err)\n          resolve()\n        })\n      })\n    }\n\n    return { finished }\n  }\n\n  public setHmrServerError(error: Error | null): void {\n    this.hmrServerError = error\n  }\n\n  public clearHmrServerError(): void {\n    if (this.hmrServerError) {\n      this.setHmrServerError(null)\n      this.send({ action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE })\n    }\n  }\n\n  protected async refreshServerComponents(): Promise<void> {\n    this.send({\n      action: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES,\n      // TODO: granular reloading of changes\n      // entrypoints: serverComponentChanges,\n    })\n  }\n\n  public onHMR(\n    req: IncomingMessage,\n    _socket: Duplex,\n    head: Buffer,\n    callback: (client: ws.WebSocket) => void\n  ) {\n    wsServer.handleUpgrade(req, req.socket, head, (client) => {\n      this.webpackHotMiddleware?.onHMR(client)\n      this.onDemandEntries?.onHMR(client, () => this.hmrServerError)\n      callback(client)\n\n      client.addEventListener('message', ({ data }) => {\n        data = typeof data !== 'string' ? data.toString() : data\n\n        try {\n          const payload = JSON.parse(data)\n\n          let traceChild:\n            | {\n                name: string\n                startTime?: bigint\n                endTime?: bigint\n                attrs?: Record<string, number | string | undefined | string[]>\n              }\n            | undefined\n\n          switch (payload.event) {\n            case 'span-end': {\n              traceChild = {\n                name: payload.spanName,\n                startTime:\n                  BigInt(Math.floor(payload.startTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n                attrs: payload.attributes,\n                endTime:\n                  BigInt(Math.floor(payload.endTime)) *\n                  MILLISECONDS_IN_NANOSECOND,\n              }\n              break\n            }\n            case 'client-hmr-latency': {\n              traceChild = {\n                name: payload.event,\n                startTime:\n                  BigInt(payload.startTime) * MILLISECONDS_IN_NANOSECOND,\n                endTime: BigInt(payload.endTime) * MILLISECONDS_IN_NANOSECOND,\n                attrs: {\n                  updatedModules: payload.updatedModules.map((m: string) =>\n                    m\n                      .replace(`(${WEBPACK_LAYERS.appPagesBrowser})/`, '')\n                      .replace(/^\\.\\//, '[project]/')\n                  ),\n                  page: payload.page,\n                  isPageHidden: payload.isPageHidden,\n                },\n              }\n              break\n            }\n            case 'client-reload-page':\n            case 'client-success': {\n              traceChild = {\n                name: payload.event,\n              }\n              break\n            }\n            case 'client-error': {\n              traceChild = {\n                name: payload.event,\n                attrs: { errorCount: payload.errorCount },\n              }\n              break\n            }\n            case 'client-warning': {\n              traceChild = {\n                name: payload.event,\n                attrs: { warningCount: payload.warningCount },\n              }\n              break\n            }\n            case 'client-removed-page':\n            case 'client-added-page': {\n              traceChild = {\n                name: payload.event,\n                attrs: { page: payload.page || '' },\n              }\n              break\n            }\n            case 'client-full-reload': {\n              const { event, stackTrace, hadRuntimeError } = payload\n\n              traceChild = {\n                name: event,\n                attrs: { stackTrace: stackTrace ?? '' },\n              }\n\n              if (hadRuntimeError) {\n                Log.warn(FAST_REFRESH_RUNTIME_RELOAD)\n                break\n              }\n\n              let fileMessage = ''\n              if (stackTrace) {\n                const file = /Aborted because (.+) is not accepted/.exec(\n                  stackTrace\n                )?.[1]\n                if (file) {\n                  // `file` is filepath in `pages/` but it can be weird long webpack url in `app/`.\n                  // If it's a webpack loader URL, it will start with '(app-pages)/./'\n                  if (\n                    file.startsWith(`(${WEBPACK_LAYERS.appPagesBrowser})/./`)\n                  ) {\n                    const fileUrl = new URL(file, 'file://')\n                    const cwd = process.cwd()\n                    const modules = fileUrl.searchParams\n                      .getAll('modules')\n                      .map((filepath) => filepath.slice(cwd.length + 1))\n                      .filter(\n                        (filepath) => !filepath.startsWith('node_modules')\n                      )\n\n                    if (modules.length > 0) {\n                      fileMessage = ` when ${modules.join(', ')} changed`\n                    }\n                  } else {\n                    fileMessage = ` when ${file} changed`\n                  }\n                }\n              }\n\n              Log.warn(\n                `Fast Refresh had to perform a full reload${fileMessage}. Read more: https://nextjs.org/docs/messages/fast-refresh-reload`\n              )\n              break\n            }\n            default: {\n              break\n            }\n          }\n\n          if (traceChild) {\n            this.hotReloaderSpan.manualTraceChild(\n              traceChild.name,\n              traceChild.startTime,\n              traceChild.endTime,\n              { ...traceChild.attrs, clientId: payload.id }\n            )\n          }\n        } catch (_) {\n          // invalid WebSocket message\n        }\n      })\n    })\n  }\n\n  private async clean(span: Span): Promise<void> {\n    return span\n      .traceChild('clean')\n      .traceAsyncFn(() =>\n        recursiveDelete(join(this.dir, this.config.distDir), /^cache/)\n      )\n  }\n\n  private async getWebpackConfig(span: Span) {\n    const webpackConfigSpan = span.traceChild('get-webpack-config')\n\n    const pageExtensions = this.config.pageExtensions\n\n    return webpackConfigSpan.traceAsyncFn(async () => {\n      const pagePaths = !this.pagesDir\n        ? ([] as (string | null)[])\n        : await webpackConfigSpan\n            .traceChild('get-page-paths')\n            .traceAsyncFn(() =>\n              Promise.all([\n                findPageFile(this.pagesDir!, '/_app', pageExtensions, false),\n                findPageFile(\n                  this.pagesDir!,\n                  '/_document',\n                  pageExtensions,\n                  false\n                ),\n              ])\n            )\n\n      this.pagesMapping = await webpackConfigSpan\n        .traceChild('create-pages-mapping')\n        .traceAsyncFn(() =>\n          createPagesMapping({\n            isDev: true,\n            pageExtensions: this.config.pageExtensions,\n            pagesType: PAGE_TYPES.PAGES,\n            pagePaths: pagePaths.filter(\n              (i: string | null): i is string => typeof i === 'string'\n            ),\n            pagesDir: this.pagesDir,\n            appDir: this.appDir,\n          })\n        )\n\n      const entrypoints = await webpackConfigSpan\n        .traceChild('create-entrypoints')\n        .traceAsyncFn(() =>\n          createEntrypoints({\n            appDir: this.appDir,\n            buildId: this.buildId,\n            config: this.config,\n            envFiles: [],\n            isDev: true,\n            pages: this.pagesMapping,\n            pagesDir: this.pagesDir,\n            previewMode: this.previewProps,\n            rootDir: this.dir,\n            pageExtensions: this.config.pageExtensions,\n          })\n        )\n\n      const commonWebpackOptions = {\n        dev: true,\n        buildId: this.buildId,\n        encryptionKey: this.encryptionKey,\n        config: this.config,\n        pagesDir: this.pagesDir,\n        rewrites: this.rewrites,\n        originalRewrites: this.config._originalRewrites,\n        originalRedirects: this.config._originalRedirects,\n        runWebpackSpan: this.hotReloaderSpan,\n        appDir: this.appDir,\n      }\n\n      return webpackConfigSpan\n        .traceChild('generate-webpack-config')\n        .traceAsyncFn(async () => {\n          const info = await loadProjectInfo({\n            dir: this.dir,\n            config: commonWebpackOptions.config,\n            dev: true,\n          })\n          return Promise.all([\n            // order is important here\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.client,\n              entrypoints: entrypoints.client,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.server,\n              entrypoints: entrypoints.server,\n              ...info,\n            }),\n            getBaseWebpackConfig(this.dir, {\n              ...commonWebpackOptions,\n              compilerType: COMPILER_NAMES.edgeServer,\n              entrypoints: entrypoints.edgeServer,\n              ...info,\n            }),\n          ])\n        })\n    })\n  }\n\n  public async buildFallbackError(): Promise<void> {\n    if (this.fallbackWatcher) return\n\n    const info = await loadProjectInfo({\n      dir: this.dir,\n      config: this.config,\n      dev: true,\n    })\n    const fallbackConfig = await getBaseWebpackConfig(this.dir, {\n      runWebpackSpan: this.hotReloaderSpan,\n      dev: true,\n      compilerType: COMPILER_NAMES.client,\n      config: this.config,\n      buildId: this.buildId,\n      encryptionKey: this.encryptionKey,\n      pagesDir: this.pagesDir,\n      rewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRewrites: {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      },\n      originalRedirects: [],\n      isDevFallback: true,\n      entrypoints: (\n        await createEntrypoints({\n          appDir: this.appDir,\n          buildId: this.buildId,\n          config: this.config,\n          envFiles: [],\n          isDev: true,\n          pages: {\n            '/_app': 'next/dist/pages/_app',\n            '/_error': 'next/dist/pages/_error',\n          },\n          pagesDir: this.pagesDir,\n          previewMode: this.previewProps,\n          rootDir: this.dir,\n          pageExtensions: this.config.pageExtensions,\n        })\n      ).client,\n      ...info,\n    })\n    const fallbackCompiler = webpack(fallbackConfig)\n\n    this.fallbackWatcher = await new Promise((resolve) => {\n      let bootedFallbackCompiler = false\n      fallbackCompiler.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        fallbackConfig.watchOptions,\n        // Errors are handled separately\n        (_err: any) => {\n          if (!bootedFallbackCompiler) {\n            bootedFallbackCompiler = true\n            resolve(true)\n          }\n        }\n      )\n    })\n  }\n\n  private async tracedGetVersionInfo(span: Span, enabled: boolean) {\n    const versionInfoSpan = span.traceChild('get-version-info')\n    return versionInfoSpan.traceAsyncFn<VersionInfo>(async () =>\n      getVersionInfo(enabled)\n    )\n  }\n\n  public async start(): Promise<void> {\n    const startSpan = this.hotReloaderSpan.traceChild('start')\n    startSpan.stop() // Stop immediately to create an artificial parent span\n\n    this.versionInfo = await this.tracedGetVersionInfo(\n      startSpan,\n      isTestMode || this.telemetry.isEnabled\n    )\n\n    const nodeDebugType = getNodeDebugType()\n    if (nodeDebugType && !this.devtoolsFrontendUrl) {\n      const debugPort = process.debugPort\n      let debugInfo\n      try {\n        // It requires to use 127.0.0.1 instead of localhost for server-side fetching.\n        const debugInfoList = await fetch(\n          `http://127.0.0.1:${debugPort}/json/list`\n        ).then((res) => res.json())\n        // There will be only one item for current process, so always get the first item.\n        debugInfo = debugInfoList[0]\n      } catch {}\n      if (debugInfo) {\n        this.devtoolsFrontendUrl = debugInfo.devtoolsFrontendUrl\n      }\n    }\n\n    await this.clean(startSpan)\n    // Ensure distDir exists before writing package.json\n    await fs.mkdir(this.distDir, { recursive: true })\n\n    const distPackageJsonPath = join(this.distDir, 'package.json')\n    // Ensure commonjs handling is used for files in the distDir (generally .next)\n    // Files outside of the distDir can be \"type\": \"module\"\n    await fs.writeFile(distPackageJsonPath, '{\"type\": \"commonjs\"}')\n\n    this.activeWebpackConfigs = await this.getWebpackConfig(startSpan)\n\n    for (const config of this.activeWebpackConfigs) {\n      const defaultEntry = config.entry\n      config.entry = async (...args) => {\n        const outputPath = this.multiCompiler?.outputPath || ''\n        const entries = getEntries(outputPath)\n        // @ts-ignore entry is always a function\n        const entrypoints = await defaultEntry(...args)\n        const isClientCompilation = config.name === COMPILER_NAMES.client\n        const isNodeServerCompilation = config.name === COMPILER_NAMES.server\n        const isEdgeServerCompilation =\n          config.name === COMPILER_NAMES.edgeServer\n\n        await Promise.all(\n          Object.keys(entries).map(async (entryKey) => {\n            const entryData = entries[entryKey]\n            const { bundlePath, dispose } = entryData\n\n            const result =\n              /^(client|server|edge-server)@(app|pages|root)@(.*)/g.exec(\n                entryKey\n              )\n            const [, key /* pageType */, , page] = result! // this match should always happen\n\n            if (key === COMPILER_NAMES.client && !isClientCompilation) return\n            if (key === COMPILER_NAMES.server && !isNodeServerCompilation)\n              return\n            if (key === COMPILER_NAMES.edgeServer && !isEdgeServerCompilation)\n              return\n\n            const isEntry = entryData.type === EntryTypes.ENTRY\n            const isChildEntry = entryData.type === EntryTypes.CHILD_ENTRY\n\n            // Check if the page was removed or disposed and remove it\n            if (isEntry) {\n              const pageExists =\n                !dispose && existsSync(entryData.absolutePagePath)\n              if (!pageExists) {\n                delete entries[entryKey]\n                return\n              }\n            }\n\n            // For child entries, if it has an entry file and it's gone, remove it\n            if (isChildEntry) {\n              if (entryData.absoluteEntryFilePath) {\n                const pageExists =\n                  !dispose && existsSync(entryData.absoluteEntryFilePath)\n                if (!pageExists) {\n                  delete entries[entryKey]\n                  return\n                }\n              }\n            }\n\n            // Ensure _error is considered a `pages` page.\n            if (page === '/_error') {\n              this.hasPagesRouterEntrypoints = true\n            }\n\n            const hasAppDir = !!this.appDir\n            const isAppPath = hasAppDir && bundlePath.startsWith('app/')\n            const staticInfo = isEntry\n              ? await getStaticInfoIncludingLayouts({\n                  isInsideAppDir: isAppPath,\n                  pageExtensions: this.config.pageExtensions,\n                  pageFilePath: entryData.absolutePagePath,\n                  appDir: this.appDir,\n                  config: this.config,\n                  isDev: true,\n                  page,\n                })\n              : {}\n\n            if (staticInfo.amp === true || staticInfo.amp === 'hybrid') {\n              this.hasAmpEntrypoints = true\n            }\n            const isServerComponent =\n              isAppPath && staticInfo.rsc !== RSC_MODULE_TYPES.client\n\n            const pageType: PAGE_TYPES = entryData.bundlePath.startsWith(\n              'pages/'\n            )\n              ? PAGE_TYPES.PAGES\n              : entryData.bundlePath.startsWith('app/')\n                ? PAGE_TYPES.APP\n                : PAGE_TYPES.ROOT\n\n            if (pageType === 'pages') {\n              this.hasPagesRouterEntrypoints = true\n            }\n            if (pageType === 'app') {\n              this.hasAppRouterEntrypoints = true\n            }\n\n            const isInstrumentation =\n              isInstrumentationHookFile(page) && pageType === PAGE_TYPES.ROOT\n\n            runDependingOnPageType({\n              page,\n              pageRuntime: staticInfo.runtime,\n              pageType,\n              onEdgeServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isEdgeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n\n                if (isInstrumentation) {\n                  const normalizedBundlePath = bundlePath.replace('src/', '')\n                  entrypoints[normalizedBundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.edgeServer,\n                    name: normalizedBundlePath,\n                    value: getInstrumentationEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      isEdgeServer: true,\n                      isDev: true,\n                    }),\n                    isServerComponent: true,\n                    hasAppDir,\n                  })\n                  return\n                }\n                const appDirLoader = isAppPath\n                  ? getAppEntry({\n                      name: bundlePath,\n                      page,\n                      appPaths: entryData.appPaths,\n                      pagePath: posix.join(\n                        APP_DIR_ALIAS,\n                        relative(\n                          this.appDir!,\n                          entryData.absolutePagePath\n                        ).replace(/\\\\/g, '/')\n                      ),\n                      appDir: this.appDir!,\n                      pageExtensions: this.config.pageExtensions,\n                      rootDir: this.dir,\n                      isDev: true,\n                      tsconfigPath: this.config.typescript.tsconfigPath,\n                      basePath: this.config.basePath,\n                      assetPrefix: this.config.assetPrefix,\n                      nextConfigOutput: this.config.output,\n                      preferredRegion: staticInfo.preferredRegion,\n                      middlewareConfig: Buffer.from(\n                        JSON.stringify(staticInfo.middleware || {})\n                      ).toString('base64'),\n                    }).import\n                  : undefined\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.edgeServer,\n                  name: bundlePath,\n                  value: getEdgeServerEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    rootDir: this.dir,\n                    buildId: this.buildId,\n                    bundlePath,\n                    config: this.config,\n                    isDev: true,\n                    page,\n                    pages: this.pagesMapping,\n                    isServerComponent,\n                    appDirLoader,\n                    pagesType: isAppPath ? PAGE_TYPES.APP : PAGE_TYPES.PAGES,\n                    preferredRegion: staticInfo.preferredRegion,\n                  }),\n                  hasAppDir,\n                })\n              },\n              onClient: () => {\n                if (!isClientCompilation) return\n                if (isChildEntry) {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: entryData.request,\n                    hasAppDir,\n                  })\n                } else {\n                  entries[entryKey].status = BUILDING\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    name: bundlePath,\n                    compilerType: COMPILER_NAMES.client,\n                    value: getClientEntry({\n                      absolutePagePath: entryData.absolutePagePath,\n                      page,\n                    }),\n                    hasAppDir,\n                  })\n                }\n              },\n              onServer: () => {\n                // TODO-APP: verify if child entry should support.\n                if (!isNodeServerCompilation || !isEntry) return\n                entries[entryKey].status = BUILDING\n                let relativeRequest = relative(\n                  config.context!,\n                  entryData.absolutePagePath\n                )\n                if (\n                  !isAbsolute(relativeRequest) &&\n                  !relativeRequest.startsWith('../')\n                ) {\n                  relativeRequest = `./${relativeRequest}`\n                }\n\n                let value: { import: string; layer?: string } | string\n                if (isInstrumentation) {\n                  value = getInstrumentationEntry({\n                    absolutePagePath: entryData.absolutePagePath,\n                    isEdgeServer: false,\n                    isDev: true,\n                  })\n                  entrypoints[bundlePath] = finalizeEntrypoint({\n                    compilerType: COMPILER_NAMES.server,\n                    name: bundlePath,\n                    isServerComponent: true,\n                    value,\n                    hasAppDir,\n                  })\n                } else if (isAppPath) {\n                  value = getAppEntry({\n                    name: bundlePath,\n                    page,\n                    appPaths: entryData.appPaths,\n                    pagePath: posix.join(\n                      APP_DIR_ALIAS,\n                      relative(\n                        this.appDir!,\n                        entryData.absolutePagePath\n                      ).replace(/\\\\/g, '/')\n                    ),\n                    appDir: this.appDir!,\n                    pageExtensions: this.config.pageExtensions,\n                    rootDir: this.dir,\n                    isDev: true,\n                    tsconfigPath: this.config.typescript.tsconfigPath,\n                    basePath: this.config.basePath,\n                    assetPrefix: this.config.assetPrefix,\n                    nextConfigOutput: this.config.output,\n                    preferredRegion: staticInfo.preferredRegion,\n                    middlewareConfig: Buffer.from(\n                      JSON.stringify(staticInfo.middleware || {})\n                    ).toString('base64'),\n                  })\n                } else if (isAPIRoute(page)) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES_API,\n                    page,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo.preferredRegion,\n                    middlewareConfig: staticInfo.middleware || {},\n                  })\n                } else if (\n                  !isMiddlewareFile(page) &&\n                  !isInternalComponent(relativeRequest) &&\n                  !isNonRoutePagesPage(page) &&\n                  !isInstrumentation\n                ) {\n                  value = getRouteLoaderEntry({\n                    kind: RouteKind.PAGES,\n                    page,\n                    pages: this.pagesMapping,\n                    absolutePagePath: relativeRequest,\n                    preferredRegion: staticInfo.preferredRegion,\n                    middlewareConfig: staticInfo.middleware ?? {},\n                  })\n                } else {\n                  value = relativeRequest\n                }\n\n                entrypoints[bundlePath] = finalizeEntrypoint({\n                  compilerType: COMPILER_NAMES.server,\n                  name: bundlePath,\n                  isServerComponent,\n                  value,\n                  hasAppDir,\n                })\n              },\n            })\n          })\n        )\n\n        if (!this.hasAmpEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_AMP]\n        }\n        if (!this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN]\n          delete entrypoints['pages/_app']\n          delete entrypoints['pages/_error']\n          delete entrypoints['/_error']\n          delete entrypoints['pages/_document']\n        }\n        // Remove React Refresh entrypoint chunk as `app` doesn't require it.\n        if (!this.hasAmpEntrypoints && !this.hasPagesRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH]\n        }\n        if (!this.hasAppRouterEntrypoints) {\n          delete entrypoints[CLIENT_STATIC_FILES_RUNTIME_MAIN_APP]\n        }\n\n        return entrypoints\n      }\n    }\n\n    // Enable building of client compilation before server compilation in development\n    // @ts-ignore webpack 5\n    this.activeWebpackConfigs.parallelism = 1\n\n    this.multiCompiler = webpack(\n      this.activeWebpackConfigs\n    ) as unknown as webpack.MultiCompiler\n\n    // Copy over the filesystem so that it is shared between all compilers.\n    const inputFileSystem = this.multiCompiler.compilers[0].inputFileSystem\n    for (const compiler of this.multiCompiler.compilers) {\n      compiler.inputFileSystem = inputFileSystem\n      // This is set for the initial compile. After that Watching class in webpack adds it.\n      compiler.fsStartTime = Date.now()\n      // Ensure NodeEnvironmentPlugin doesn't purge the inputFileSystem. Purging is handled in `done` below.\n      compiler.hooks.beforeRun.intercept({\n        register(tapInfo: any) {\n          if (tapInfo.name === 'NodeEnvironmentPlugin') {\n            return null\n          }\n          return tapInfo\n        },\n      })\n    }\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloader', () => {\n      inputFileSystem.purge!()\n    })\n    watchCompilers(\n      this.multiCompiler.compilers[0],\n      this.multiCompiler.compilers[1],\n      this.multiCompiler.compilers[2]\n    )\n\n    // Watch for changes to client/server page files so we can tell when just\n    // the server file changes and trigger a reload for GS(S)P pages\n    const changedClientPages = new Set<string>()\n    const changedServerPages = new Set<string>()\n    const changedEdgeServerPages = new Set<string>()\n\n    const changedServerComponentPages = new Set<string>()\n    const changedCSSImportPages = new Set<string>()\n\n    const prevClientPageHashes = new Map<string, string>()\n    const prevServerPageHashes = new Map<string, string>()\n    const prevEdgeServerPageHashes = new Map<string, string>()\n    const prevCSSImportModuleHashes = new Map<string, string>()\n\n    const pageExtensionRegex = new RegExp(\n      `\\\\.(?:${this.config.pageExtensions.join('|')})$`\n    )\n\n    const trackPageChanges =\n      (\n        pageHashMap: Map<string, string>,\n        changedItems: Set<string>,\n        serverComponentChangedItems?: Set<string>\n      ) =>\n      (stats: webpack.Compilation) => {\n        try {\n          stats.entrypoints.forEach((entry, key) => {\n            if (\n              key.startsWith('pages/') ||\n              key.startsWith('app/') ||\n              isMiddlewareFilename(key)\n            ) {\n              // TODO this doesn't handle on demand loaded chunks\n              entry.chunks.forEach((chunk) => {\n                if (chunk.id === key) {\n                  const modsIterable: any =\n                    stats.chunkGraph.getChunkModulesIterable(chunk)\n\n                  let hasCSSModuleChanges = false\n                  let chunksHash = new StringXor()\n                  let chunksHashServerLayer = new StringXor()\n\n                  modsIterable.forEach((mod: any) => {\n                    if (\n                      mod.resource &&\n                      mod.resource.replace(/\\\\/g, '/').includes(key) &&\n                      // Shouldn't match CSS modules, etc.\n                      pageExtensionRegex.test(mod.resource)\n                    ) {\n                      // use original source to calculate hash since mod.hash\n                      // includes the source map in development which changes\n                      // every time for both server and client so we calculate\n                      // the hash without the source map for the page module\n                      const hash = require('crypto')\n                        .createHash('sha1')\n                        .update(mod.originalSource().buffer())\n                        .digest()\n                        .toString('hex')\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n                    } else {\n                      // for non-pages we can use the module hash directly\n                      const hash = stats.chunkGraph.getModuleHash(\n                        mod,\n                        chunk.runtime\n                      )\n\n                      if (\n                        mod.layer === WEBPACK_LAYERS.reactServerComponents &&\n                        mod?.buildInfo?.rsc?.type !== 'client'\n                      ) {\n                        chunksHashServerLayer.add(hash)\n                      }\n\n                      chunksHash.add(hash)\n\n                      // Both CSS import changes from server and client\n                      // components are tracked.\n                      if (\n                        key.startsWith('app/') &&\n                        /\\.(css|scss|sass)$/.test(mod.resource || '')\n                      ) {\n                        const resourceKey = mod.layer + ':' + mod.resource\n                        const prevHash =\n                          prevCSSImportModuleHashes.get(resourceKey)\n                        if (prevHash && prevHash !== hash) {\n                          hasCSSModuleChanges = true\n                        }\n                        prevCSSImportModuleHashes.set(resourceKey, hash)\n                      }\n                    }\n                  })\n\n                  const prevHash = pageHashMap.get(key)\n                  const curHash = chunksHash.toString()\n                  if (prevHash && prevHash !== curHash) {\n                    changedItems.add(key)\n                  }\n                  pageHashMap.set(key, curHash)\n\n                  if (serverComponentChangedItems) {\n                    const serverKey =\n                      WEBPACK_LAYERS.reactServerComponents + ':' + key\n                    const prevServerHash = pageHashMap.get(serverKey)\n                    const curServerHash = chunksHashServerLayer.toString()\n                    if (prevServerHash && prevServerHash !== curServerHash) {\n                      serverComponentChangedItems.add(key)\n                    }\n                    pageHashMap.set(serverKey, curServerHash)\n                  }\n\n                  if (hasCSSModuleChanges) {\n                    changedCSSImportPages.add(key)\n                  }\n                }\n              })\n            }\n          })\n        } catch (err) {\n          console.error(err)\n        }\n      }\n\n    this.multiCompiler.compilers[0].hooks.emit.tap(\n      'NextjsHotReloaderForClient',\n      trackPageChanges(prevClientPageHashes, changedClientPages)\n    )\n    this.multiCompiler.compilers[1].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevServerPageHashes,\n        changedServerPages,\n        changedServerComponentPages\n      )\n    )\n    this.multiCompiler.compilers[2].hooks.emit.tap(\n      'NextjsHotReloaderForServer',\n      trackPageChanges(\n        prevEdgeServerPageHashes,\n        changedEdgeServerPages,\n        changedServerComponentPages\n      )\n    )\n\n    // This plugin watches for changes to _document.js and notifies the client side that it should reload the page\n    this.multiCompiler.compilers[1].hooks.failed.tap(\n      'NextjsHotReloaderForServer',\n      (err: Error) => {\n        this.serverError = err\n        this.serverStats = null\n        this.serverChunkNames = undefined\n      }\n    )\n\n    this.multiCompiler.compilers[2].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.edgeServerStats = stats\n      }\n    )\n\n    this.multiCompiler.compilers[1].hooks.done.tap(\n      'NextjsHotReloaderForServer',\n      (stats) => {\n        this.serverError = null\n        this.serverStats = stats\n\n        if (!this.pagesDir) {\n          return\n        }\n\n        const { compilation } = stats\n\n        // We only watch `_document` for changes on the server compilation\n        // the rest of the files will be triggered by the client compilation\n        const documentChunk = compilation.namedChunks.get('pages/_document')\n        // If the document chunk can't be found we do nothing\n        if (!documentChunk) {\n          return\n        }\n\n        // Initial value\n        if (this.serverPrevDocumentHash === null) {\n          this.serverPrevDocumentHash = documentChunk.hash || null\n          return\n        }\n\n        // If _document.js didn't change we don't trigger a reload.\n        if (documentChunk.hash === this.serverPrevDocumentHash) {\n          return\n        }\n\n        // As document chunk will change if new app pages are joined,\n        // since react bundle is different it will effect the chunk hash.\n        // So we diff the chunk changes, if there's only new app page chunk joins,\n        // then we don't trigger a reload by checking pages/_document chunk change.\n        if (this.appDir) {\n          const chunkNames = new Set(compilation.namedChunks.keys())\n          const diffChunkNames = difference<string>(\n            this.serverChunkNames || new Set(),\n            chunkNames\n          )\n\n          if (\n            diffChunkNames.length === 0 ||\n            diffChunkNames.every((chunkName) => chunkName.startsWith('app/'))\n          ) {\n            return\n          }\n          this.serverChunkNames = chunkNames\n        }\n\n        this.serverPrevDocumentHash = documentChunk.hash || null\n\n        // Notify reload to reload the page, as _document.js was changed (different hash)\n        this.send({ action: HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE })\n      }\n    )\n\n    this.multiCompiler.hooks.done.tap('NextjsHotReloaderForServer', () => {\n      const reloadAfterInvalidation = this.reloadAfterInvalidation\n      this.reloadAfterInvalidation = false\n\n      const serverOnlyChanges = difference<string>(\n        changedServerPages,\n        changedClientPages\n      )\n\n      const edgeServerOnlyChanges = difference<string>(\n        changedEdgeServerPages,\n        changedClientPages\n      )\n\n      const pageChanges = serverOnlyChanges\n        .concat(edgeServerOnlyChanges)\n        .filter((key) => key.startsWith('pages/'))\n      const middlewareChanges = Array.from(changedEdgeServerPages).filter(\n        (name) => isMiddlewareFilename(name)\n      )\n\n      if (middlewareChanges.length > 0) {\n        this.send({\n          event: HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES,\n        })\n      }\n\n      if (pageChanges.length > 0) {\n        this.send({\n          event: HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n          pages: serverOnlyChanges.map((pg) =>\n            denormalizePagePath(pg.slice('pages'.length))\n          ),\n        })\n      }\n\n      if (\n        changedServerComponentPages.size ||\n        changedCSSImportPages.size ||\n        reloadAfterInvalidation\n      ) {\n        this.resetFetch()\n        this.refreshServerComponents()\n      }\n\n      changedClientPages.clear()\n      changedServerPages.clear()\n      changedEdgeServerPages.clear()\n      changedServerComponentPages.clear()\n      changedCSSImportPages.clear()\n    })\n\n    this.multiCompiler.compilers[0].hooks.failed.tap(\n      'NextjsHotReloaderForClient',\n      (err: Error) => {\n        this.clientError = err\n        this.clientStats = null\n      }\n    )\n    this.multiCompiler.compilers[0].hooks.done.tap(\n      'NextjsHotReloaderForClient',\n      (stats) => {\n        this.clientError = null\n        this.clientStats = stats\n\n        const { compilation } = stats\n        const chunkNames = new Set(\n          [...compilation.namedChunks.keys()].filter(\n            (name) => !!getRouteFromEntrypoint(name)\n          )\n        )\n\n        if (this.prevChunkNames) {\n          // detect chunks which have to be replaced with a new template\n          // e.g, pages/index.js <-> pages/_error.js\n          const addedPages = diff(chunkNames, this.prevChunkNames!)\n          const removedPages = diff(this.prevChunkNames!, chunkNames)\n\n          if (addedPages.size > 0) {\n            for (const addedPage of addedPages) {\n              const page = getRouteFromEntrypoint(addedPage)\n              this.send({\n                action: HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE,\n                data: [page],\n              })\n            }\n          }\n\n          if (removedPages.size > 0) {\n            for (const removedPage of removedPages) {\n              const page = getRouteFromEntrypoint(removedPage)\n              this.send({\n                action: HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE,\n                data: [page],\n              })\n            }\n          }\n        }\n\n        this.prevChunkNames = chunkNames\n      }\n    )\n\n    this.webpackHotMiddleware = new WebpackHotMiddleware(\n      this.multiCompiler.compilers,\n      this.versionInfo,\n      this.devtoolsFrontendUrl\n    )\n\n    let booted = false\n\n    this.watcher = await new Promise((resolve) => {\n      const watcher = this.multiCompiler?.watch(\n        // @ts-ignore webpack supports an array of watchOptions when using a multiCompiler\n        this.activeWebpackConfigs.map((config) => config.watchOptions!),\n        // Errors are handled separately\n        (_err: any) => {\n          if (!booted) {\n            booted = true\n            resolve(watcher)\n          }\n        }\n      )\n    })\n\n    this.onDemandEntries = onDemandEntryHandler({\n      hotReloader: this,\n      multiCompiler: this.multiCompiler,\n      pagesDir: this.pagesDir,\n      appDir: this.appDir,\n      rootDir: this.dir,\n      nextConfig: this.config,\n      ...(this.config.onDemandEntries as {\n        maxInactiveAge: number\n        pagesBufferLength: number\n      }),\n    })\n\n    this.interceptors = [\n      getOverlayMiddleware({\n        rootDirectory: this.dir,\n        stats: () => this.clientStats,\n        serverStats: () => this.serverStats,\n        edgeServerStats: () => this.edgeServerStats,\n      }),\n    ]\n  }\n\n  public invalidate(\n    { reloadAfterInvalidation }: { reloadAfterInvalidation: boolean } = {\n      reloadAfterInvalidation: false,\n    }\n  ) {\n    // Cache the `reloadAfterInvalidation` flag, and use it to reload the page when compilation is done\n    this.reloadAfterInvalidation = reloadAfterInvalidation\n    const outputPath = this.multiCompiler?.outputPath\n    if (outputPath) {\n      getInvalidator(outputPath)?.invalidate()\n    }\n  }\n\n  public async stop(): Promise<void> {\n    await new Promise((resolve, reject) => {\n      this.watcher.close((err: any) => (err ? reject(err) : resolve(true)))\n    })\n\n    if (this.fallbackWatcher) {\n      await new Promise((resolve, reject) => {\n        this.fallbackWatcher.close((err: any) =>\n          err ? reject(err) : resolve(true)\n        )\n      })\n    }\n    this.multiCompiler = undefined\n  }\n\n  public async getCompilationErrors(page: string) {\n    const getErrors = ({ compilation }: webpack.Stats) => {\n      const failedPages = erroredPages(compilation)\n      const normalizedPage = normalizePathSep(page)\n      // If there is an error related to the requesting page we display it instead of the first error\n      return failedPages[normalizedPage]?.length > 0\n        ? failedPages[normalizedPage]\n        : compilation.errors\n    }\n\n    if (this.clientError) {\n      return [this.clientError]\n    } else if (this.serverError) {\n      return [this.serverError]\n    } else if (this.clientStats?.hasErrors()) {\n      return getErrors(this.clientStats)\n    } else if (this.serverStats?.hasErrors()) {\n      return getErrors(this.serverStats)\n    } else if (this.edgeServerStats?.hasErrors()) {\n      return getErrors(this.edgeServerStats)\n    } else {\n      return []\n    }\n  }\n\n  public send(action: HMR_ACTION_TYPES): void {\n    this.webpackHotMiddleware!.publish(action)\n  }\n\n  public async ensurePage({\n    page,\n    clientOnly,\n    appPaths,\n    definition,\n    isApp,\n    url,\n  }: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    isApp?: boolean\n    definition?: RouteDefinition\n    url?: string\n  }): Promise<void> {\n    // Make sure we don't re-build or dispose prebuilt pages\n    if (page !== '/_error' && BLOCKED_PAGES.indexOf(page) !== -1) {\n      return\n    }\n    const error = clientOnly\n      ? this.clientError\n      : this.serverError || this.clientError\n    if (error) {\n      throw error\n    }\n\n    return this.onDemandEntries?.ensurePage({\n      page,\n      appPaths,\n      definition,\n      isApp,\n      url,\n    })\n  }\n}\n"],"names":["webpack","StringXor","getOverlayMiddleware","WebpackHotMiddleware","join","relative","isAbsolute","posix","createEntrypoints","createPagesMapping","finalizeEntrypoint","getClientEntry","getEdgeServerEntry","getAppEntry","runDependingOnPageType","getStaticInfoIncludingLayouts","getInstrumentationEntry","watchCompilers","Log","getBaseWebpackConfig","loadProjectInfo","APP_DIR_ALIAS","WEBPACK_LAYERS","recursiveDelete","BLOCKED_PAGES","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","COMPILER_NAMES","RSC_MODULE_TYPES","getPathMatch","findPageFile","BUILDING","getEntries","EntryTypes","getInvalidator","onDemandEntryHandler","denormalizePagePath","normalizePathSep","getRouteFromEntrypoint","difference","isInstrumentationHookFile","isMiddlewareFile","isMiddlewareFilename","DecodeError","trace","getProperError","ws","existsSync","promises","fs","parseVersionInfo","isAPIRoute","getRouteLoaderEntry","isInternalComponent","isNonRoutePagesPage","RouteKind","HMR_ACTIONS_SENT_TO_BROWSER","PAGE_TYPES","FAST_REFRESH_RUNTIME_RELOAD","getNodeDebugType","MILLISECONDS_IN_NANOSECOND","BigInt","isTestMode","process","env","NEXT_TEST_MODE","__NEXT_TEST_MODE","DEBUG","diff","a","b","Set","filter","v","has","wsServer","Server","noServer","renderScriptError","res","error","verbose","setHeader","code","finished","undefined","console","stack","statusCode","end","addCorsSupport","req","url","startsWith","preflight","headers","origin","method","writeHead","matchNextPageBundleRequest","findEntryModule","module","compilation","issuer","moduleGraph","getIssuer","erroredPages","failedPages","errors","entryModule","name","enhancedName","push","getVersionInfo","enabled","installed","staleness","require","version","fetch","ok","latest","canary","json","e","HotReloaderWebpack","constructor","dir","config","pagesDir","distDir","buildId","encryptionKey","previewProps","rewrites","appDir","telemetry","resetFetch","clientError","serverError","hmrServerError","pagesMapping","versionInfo","reloadAfterInvalidation","hasAmpEntrypoints","hasAppRouterEntrypoints","hasPagesRouterEntrypoints","interceptors","clientStats","serverStats","edgeServerStats","serverPrevDocumentHash","hotReloaderSpan","__NEXT_VERSION","stop","run","parsedUrl","handlePageBundleRequest","pageBundleRes","parsedPageBundleUrl","pathname","params","decodedPagePath","path","map","param","decodeURIComponent","_","page","indexOf","ensurePage","clientOnly","getCompilationErrors","length","fn","Promise","resolve","reject","err","setHmrServerError","clearHmrServerError","send","action","RELOAD_PAGE","refreshServerComponents","SERVER_COMPONENT_CHANGES","onHMR","_socket","head","callback","handleUpgrade","socket","client","webpackHotMiddleware","onDemandEntries","addEventListener","data","toString","payload","JSON","parse","traceChild","event","spanName","startTime","Math","floor","attrs","attributes","endTime","updatedModules","m","replace","appPagesBrowser","isPageHidden","errorCount","warningCount","stackTrace","hadRuntimeError","warn","fileMessage","file","exec","fileUrl","URL","cwd","modules","searchParams","getAll","filepath","slice","manualTraceChild","clientId","id","clean","span","traceAsyncFn","getWebpackConfig","webpackConfigSpan","pageExtensions","pagePaths","all","isDev","pagesType","PAGES","i","entrypoints","envFiles","pages","previewMode","rootDir","commonWebpackOptions","dev","originalRewrites","_originalRewrites","originalRedirects","_originalRedirects","runWebpackSpan","info","compilerType","server","edgeServer","buildFallbackError","fallbackWatcher","fallbackConfig","beforeFiles","afterFiles","fallback","isDevFallback","fallbackCompiler","bootedFallbackCompiler","watch","watchOptions","_err","tracedGetVersionInfo","versionInfoSpan","start","startSpan","isEnabled","nodeDebugType","devtoolsFrontendUrl","debugPort","debugInfo","debugInfoList","then","mkdir","recursive","distPackageJsonPath","writeFile","activeWebpackConfigs","defaultEntry","entry","args","outputPath","multiCompiler","entries","isClientCompilation","isNodeServerCompilation","isEdgeServerCompilation","Object","keys","entryKey","entryData","bundlePath","dispose","result","key","isEntry","type","ENTRY","isChildEntry","CHILD_ENTRY","pageExists","absolutePagePath","absoluteEntryFilePath","hasAppDir","isAppPath","staticInfo","isInsideAppDir","pageFilePath","amp","isServerComponent","rsc","pageType","APP","ROOT","isInstrumentation","pageRuntime","runtime","onEdgeServer","status","normalizedBundlePath","value","isEdgeServer","appDirLoader","appPaths","pagePath","tsconfigPath","typescript","basePath","assetPrefix","nextConfigOutput","output","preferredRegion","middlewareConfig","Buffer","from","stringify","middleware","import","onClient","request","onServer","relativeRequest","context","kind","PAGES_API","parallelism","inputFileSystem","compilers","compiler","fsStartTime","Date","now","hooks","beforeRun","intercept","register","tapInfo","done","tap","purge","changedClientPages","changedServerPages","changedEdgeServerPages","changedServerComponentPages","changedCSSImportPages","prevClientPageHashes","Map","prevServerPageHashes","prevEdgeServerPageHashes","prevCSSImportModuleHashes","pageExtensionRegex","RegExp","trackPageChanges","pageHashMap","changedItems","serverComponentChangedItems","stats","forEach","chunks","chunk","modsIterable","chunkGraph","getChunkModulesIterable","hasCSSModuleChanges","chunksHash","chunksHashServerLayer","mod","resource","includes","test","hash","createHash","update","originalSource","buffer","digest","layer","reactServerComponents","buildInfo","add","getModuleHash","resourceKey","prevHash","get","set","curHash","serverKey","prevServerHash","curServerHash","emit","failed","serverChunkNames","documentChunk","namedChunks","chunkNames","diffChunkNames","every","chunkName","serverOnlyChanges","edgeServerOnlyChanges","pageChanges","concat","middlewareChanges","Array","MIDDLEWARE_CHANGES","SERVER_ONLY_CHANGES","pg","size","clear","prevChunkNames","addedPages","removedPages","addedPage","ADDED_PAGE","removedPage","REMOVED_PAGE","booted","watcher","hotReloader","nextConfig","rootDirectory","invalidate","close","getErrors","normalizedPage","hasErrors","publish","definition","isApp"],"mappings":"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"}