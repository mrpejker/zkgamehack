{"version":3,"sources":["../../src/server/next-server.ts"],"sourcesContent":["import './node-environment'\nimport './require-hook'\nimport './node-polyfill-crypto'\n\nimport type { CacheFs } from '../shared/lib/utils'\nimport {\n  DecodeError,\n  PageNotFoundError,\n  MiddlewareNotFoundError,\n} from '../shared/lib/utils'\nimport type { MiddlewareManifest } from '../build/webpack/plugins/middleware-plugin'\nimport type RenderResult from './render-result'\nimport type { FetchEventResult } from './web/types'\nimport type { PrerenderManifest } from '../build'\nimport type { PagesManifest } from '../build/webpack/plugins/pages-manifest-plugin'\nimport type { NextParsedUrlQuery, NextUrlWithParsedQuery } from './request-meta'\nimport type { Params } from '../client/components/params'\nimport type { MiddlewareRouteMatch } from '../shared/lib/router/utils/middleware-route-matcher'\nimport type { RouteMatch } from './route-matches/route-match'\nimport type { IncomingMessage, ServerResponse } from 'http'\nimport type { PagesAPIRouteModule } from './route-modules/pages-api/module'\nimport type { UrlWithParsedQuery } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { ParsedUrl } from '../shared/lib/router/utils/parse-url'\nimport type { Revalidate, SwrDelta } from './lib/revalidate'\n\nimport fs from 'fs'\nimport { join, resolve } from 'path'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\nimport { addRequestMeta, getRequestMeta } from './request-meta'\nimport {\n  PAGES_MANIFEST,\n  BUILD_ID_FILE,\n  MIDDLEWARE_MANIFEST,\n  PRERENDER_MANIFEST,\n  ROUTES_MANIFEST,\n  CLIENT_PUBLIC_FILES_PATH,\n  APP_PATHS_MANIFEST,\n  SERVER_DIRECTORY,\n  NEXT_FONT_MANIFEST,\n  PHASE_PRODUCTION_BUILD,\n  UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n} from '../shared/lib/constants'\nimport { findDir } from '../lib/find-pages-dir'\nimport { NodeNextRequest, NodeNextResponse } from './base-http/node'\nimport { sendRenderResult } from './send-payload'\nimport { parseUrl } from '../shared/lib/router/utils/parse-url'\nimport * as Log from '../build/output/log'\n\nimport type {\n  Options,\n  FindComponentsResult,\n  MiddlewareRoutingItem,\n  RequestContext,\n  NormalizedRouteManifest,\n  LoadedRenderOpts,\n  RouteHandler,\n  NextEnabledDirectories,\n  BaseRequestHandler,\n} from './base-server'\nimport BaseServer, { NoFallbackError } from './base-server'\nimport { getMaybePagePath, getPagePath } from './require'\nimport { denormalizePagePath } from '../shared/lib/page-path/denormalize-page-path'\nimport { normalizePagePath } from '../shared/lib/page-path/normalize-page-path'\nimport { loadComponents } from './load-components'\nimport type { LoadComponentsReturnType } from './load-components'\nimport isError, { getProperError } from '../lib/is-error'\nimport { splitCookiesString, toNodeOutgoingHttpHeaders } from './web/utils'\nimport { getMiddlewareRouteMatcher } from '../shared/lib/router/utils/middleware-route-matcher'\nimport { loadEnvConfig } from '@next/env'\nimport { urlQueryToSearchParams } from '../shared/lib/router/utils/querystring'\nimport { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { getNextPathnameInfo } from '../shared/lib/router/utils/get-next-pathname-info'\nimport { getCloneableBody } from './body-streams'\nimport { checkIsOnDemandRevalidate } from './api-utils'\nimport ResponseCache, { CachedRouteKind } from './response-cache'\nimport { IncrementalCache } from './lib/incremental-cache'\nimport { normalizeAppPath } from '../shared/lib/router/utils/app-paths'\n\nimport { setHttpClientAndAgentOptions } from './setup-http-agent-env'\n\nimport { isPagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { PagesAPIRouteMatch } from './route-matches/pages-api-route-match'\nimport type { MatchOptions } from './route-matcher-managers/route-matcher-manager'\nimport { INSTRUMENTATION_HOOK_FILENAME } from '../lib/constants'\nimport { BubbledError, getTracer } from './lib/trace/tracer'\nimport { NextNodeServerSpan } from './lib/trace/constants'\nimport { nodeFs } from './lib/node-fs-methods'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { pipeToNodeResponse } from './pipe-readable'\nimport { createRequestResponseMocks } from './lib/mock-request'\nimport { NEXT_RSC_UNION_QUERY } from '../client/components/app-router-headers'\nimport { signalFromNodeResponse } from './web/spec-extension/adapters/next-request'\nimport { RouteModuleLoader } from './lib/module-loader/route-module-loader'\nimport { loadManifest } from './load-manifest'\nimport { lazyRenderAppPage } from './route-modules/app-page/module.render'\nimport { lazyRenderPagesPage } from './route-modules/pages/module.render'\nimport { interopDefault } from '../lib/interop-default'\nimport { formatDynamicImportPath } from '../lib/format-dynamic-import-path'\nimport type { NextFontManifest } from '../build/webpack/plugins/next-font-manifest-plugin'\nimport { isInterceptionRouteRewrite } from '../lib/generate-interception-routes-rewrites'\nimport type { ServerOnInstrumentationRequestError } from './app-render/types'\nimport { RouteKind } from './route-kind'\n\nexport * from './base-server'\n\ndeclare const __non_webpack_require__: NodeRequire\n\n// For module that can be both CJS or ESM\nconst dynamicImportEsmDefault = process.env.NEXT_MINIMAL\n  ? (id: string) =>\n      import(/* webpackIgnore: true */ id).then((mod) => mod.default || mod)\n  : (id: string) => import(id).then((mod) => mod.default || mod)\n\n// For module that will be compiled to CJS, e.g. instrument\nconst dynamicRequire = process.env.NEXT_MINIMAL\n  ? __non_webpack_require__\n  : require\n\nexport type NodeRequestHandler = BaseRequestHandler<\n  IncomingMessage | NodeNextRequest,\n  ServerResponse | NodeNextResponse\n>\n\ntype NodeRouteHandler = RouteHandler<NodeNextRequest, NodeNextResponse>\n\nconst MiddlewareMatcherCache = new WeakMap<\n  MiddlewareManifest['middleware'][string],\n  MiddlewareRouteMatch\n>()\n\nfunction getMiddlewareMatcher(\n  info: MiddlewareManifest['middleware'][string]\n): MiddlewareRouteMatch {\n  const stored = MiddlewareMatcherCache.get(info)\n  if (stored) {\n    return stored\n  }\n\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(\n      `Invariant: invalid matchers for middleware ${JSON.stringify(info)}`\n    )\n  }\n\n  const matcher = getMiddlewareRouteMatcher(info.matchers)\n  MiddlewareMatcherCache.set(info, matcher)\n  return matcher\n}\n\nexport default class NextNodeServer extends BaseServer<\n  Options,\n  NodeNextRequest,\n  NodeNextResponse\n> {\n  protected middlewareManifestPath: string\n  private _serverDistDir: string | undefined\n  private imageResponseCache?: ResponseCache\n  private registeredInstrumentation: boolean = false\n  protected renderWorkersPromises?: Promise<void>\n  protected dynamicRoutes?: {\n    match: import('../shared/lib/router/utils/route-matcher').RouteMatchFn\n    page: string\n    re: RegExp\n  }[]\n  private routerServerHandler?: (\n    req: IncomingMessage,\n    res: ServerResponse\n  ) => void\n\n  constructor(options: Options) {\n    // Initialize super class\n    super(options)\n\n    /**\n     * This sets environment variable to be used at the time of SSR by head.tsx.\n     * Using this from process.env allows targeting SSR by calling\n     * `process.env.__NEXT_OPTIMIZE_CSS`.\n     */\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true)\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true)\n    }\n    process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.deploymentId || ''\n\n    if (!this.minimalMode) {\n      this.imageResponseCache = new ResponseCache(this.minimalMode)\n    }\n\n    const { appDocumentPreloading } = this.nextConfig.experimental\n    const isDefaultEnabled = typeof appDocumentPreloading === 'undefined'\n\n    if (\n      !options.dev &&\n      (appDocumentPreloading === true ||\n        !(this.minimalMode && isDefaultEnabled))\n    ) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_document',\n        isAppPath: false,\n      }).catch(() => {})\n      loadComponents({\n        distDir: this.distDir,\n        page: '/_app',\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    if (\n      !options.dev &&\n      !this.minimalMode &&\n      this.nextConfig.experimental.preloadEntriesOnStart\n    ) {\n      this.unstable_preloadEntries()\n    }\n\n    if (!options.dev) {\n      const { dynamicRoutes = [] } = this.getRoutesManifest() ?? {}\n      this.dynamicRoutes = dynamicRoutes.map((r) => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = getRouteRegex(r.page)\n        const match = getRouteMatcher(regex)\n\n        return {\n          match,\n          page: r.page,\n          re: regex.re,\n        }\n      })\n    }\n\n    // ensure options are set when loadConfig isn't called\n    setHttpClientAndAgentOptions(this.nextConfig)\n\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      process.env.NEXT_PRIVATE_TEST_PROXY = 'true'\n      const {\n        interceptTestApis,\n      } = require('next/dist/experimental/testmode/server')\n      interceptTestApis()\n    }\n\n    this.middlewareManifestPath = join(this.serverDistDir, MIDDLEWARE_MANIFEST)\n\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause a unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    if (!options.dev) {\n      this.prepare().catch((err) => {\n        console.error('Failed to prepare server', err)\n      })\n    }\n  }\n\n  public async unstable_preloadEntries(): Promise<void> {\n    const appPathsManifest = this.getAppPathsManifest()\n    const pagesManifest = this.getPagesManifest()\n\n    for (const page of Object.keys(pagesManifest || {})) {\n      await loadComponents({\n        distDir: this.distDir,\n        page,\n        isAppPath: false,\n      }).catch(() => {})\n    }\n\n    for (const page of Object.keys(appPathsManifest || {})) {\n      await loadComponents({ distDir: this.distDir, page, isAppPath: true })\n        .then(async ({ ComponentMod }) => {\n          const webpackRequire = ComponentMod.__next_app__.require\n          if (webpackRequire?.m) {\n            for (const id of Object.keys(webpackRequire.m)) {\n              await webpackRequire(id)\n            }\n          }\n        })\n        .catch(() => {})\n    }\n  }\n\n  protected async handleUpgrade(): Promise<void> {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n\n  protected async loadInstrumentationModule() {\n    if (!this.serverOptions.dev) {\n      try {\n        this.instrumentation = await dynamicRequire(\n          resolve(\n            this.serverOptions.dir || '.',\n            this.serverOptions.conf.distDir!,\n            'server',\n            INSTRUMENTATION_HOOK_FILENAME\n          )\n        )\n      } catch (err: any) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw new Error(\n            'An error occurred while loading the instrumentation hook',\n            { cause: err }\n          )\n        }\n      }\n    }\n    return this.instrumentation\n  }\n\n  protected async prepareImpl() {\n    await super.prepareImpl()\n    await this.runInstrumentationHookIfAvailable()\n  }\n\n  protected async runInstrumentationHookIfAvailable() {\n    if (this.registeredInstrumentation) return\n    this.registeredInstrumentation = true\n    await this.instrumentation?.register?.()\n  }\n\n  protected loadEnvConfig({\n    dev,\n    forceReload,\n    silent,\n  }: {\n    dev: boolean\n    forceReload?: boolean\n    silent?: boolean\n  }) {\n    loadEnvConfig(\n      this.dir,\n      dev,\n      silent ? { info: () => {}, error: () => {} } : Log,\n      forceReload\n    )\n  }\n\n  protected async getIncrementalCache({\n    requestHeaders,\n    requestProtocol,\n  }: {\n    requestHeaders: IncrementalCache['requestHeaders']\n    requestProtocol: 'http' | 'https'\n  }) {\n    const dev = !!this.renderOpts.dev\n    let CacheHandler: any\n    const { cacheHandler } = this.nextConfig\n\n    if (cacheHandler) {\n      CacheHandler = interopDefault(\n        await dynamicImportEsmDefault(\n          formatDynamicImportPath(this.distDir, cacheHandler)\n        )\n      )\n    }\n\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.cacheMaxMemorySize,\n      flushToDisk:\n        !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler,\n    })\n  }\n\n  protected getResponseCache() {\n    return new ResponseCache(this.minimalMode)\n  }\n\n  protected getPublicDir(): string {\n    return join(this.dir, CLIENT_PUBLIC_FILES_PATH)\n  }\n\n  protected getHasStaticDir(): boolean {\n    return fs.existsSync(join(this.dir, 'static'))\n  }\n\n  protected getPagesManifest(): PagesManifest | undefined {\n    return loadManifest(\n      join(this.serverDistDir, PAGES_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getAppPathsManifest(): PagesManifest | undefined {\n    if (!this.enabledDirectories.app) return undefined\n\n    return loadManifest(\n      join(this.serverDistDir, APP_PATHS_MANIFEST)\n    ) as PagesManifest\n  }\n\n  protected getinterceptionRoutePatterns(): RegExp[] {\n    if (!this.enabledDirectories.app) return []\n\n    const routesManifest = this.getRoutesManifest()\n    return (\n      routesManifest?.rewrites.beforeFiles\n        .filter(isInterceptionRouteRewrite)\n        .map((rewrite) => new RegExp(rewrite.regex)) ?? []\n    )\n  }\n\n  protected async hasPage(pathname: string): Promise<boolean> {\n    return !!getMaybePagePath(\n      pathname,\n      this.distDir,\n      this.nextConfig.i18n?.locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected getBuildId(): string {\n    const buildIdFile = join(this.distDir, BUILD_ID_FILE)\n    try {\n      return fs.readFileSync(buildIdFile, 'utf8').trim()\n    } catch (err: any) {\n      if (err.code === 'ENOENT') {\n        throw new Error(\n          `Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`\n        )\n      }\n\n      throw err\n    }\n  }\n\n  protected getEnabledDirectories(dev: boolean): NextEnabledDirectories {\n    const dir = dev ? this.dir : this.serverDistDir\n\n    return {\n      app: findDir(dir, 'app') ? true : false,\n      pages: findDir(dir, 'pages') ? true : false,\n    }\n  }\n\n  protected sendRenderResult(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    options: {\n      result: RenderResult\n      type: 'html' | 'json'\n      generateEtags: boolean\n      poweredByHeader: boolean\n      revalidate: Revalidate | undefined\n      swrDelta: SwrDelta | undefined\n    }\n  ): Promise<void> {\n    return sendRenderResult({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      result: options.result,\n      type: options.type,\n      generateEtags: options.generateEtags,\n      poweredByHeader: options.poweredByHeader,\n      revalidate: options.revalidate,\n      swrDelta: options.swrDelta,\n    })\n  }\n\n  protected async runApi(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages()\n\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null,\n        })\n\n        if (handledAsEdgeFunction) {\n          return true\n        }\n      }\n    }\n\n    // The module supports minimal mode, load the minimal module.\n    const module = await RouteModuleLoader.load<PagesAPIRouteModule>(\n      match.definition.filename\n    )\n\n    query = { ...query, ...match.params }\n\n    delete query.__nextLocale\n    delete query.__nextDefaultLocale\n    delete query.__nextInferredLocaleFromDefault\n\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys:\n        this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname,\n      onError: this.instrumentationOnRequestError.bind(this),\n      multiZoneDraftMode: this.nextConfig.experimental.multiZoneDraftMode,\n    })\n\n    return true\n  }\n\n  protected async renderHTML(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    return getTracer().trace(NextNodeServerSpan.renderHTML, async () =>\n      this.renderHTMLImpl(req, res, pathname, query, renderOpts)\n    )\n  }\n\n  private async renderHTMLImpl(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    pathname: string,\n    query: NextParsedUrlQuery,\n    renderOpts: LoadedRenderOpts\n  ): Promise<RenderResult> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Invariant: renderHTML should not be called in minimal mode'\n      )\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest\n\n      if (this.enabledDirectories.app && renderOpts.isAppPath) {\n        return lazyRenderAppPage(\n          req,\n          res,\n          pathname,\n          query,\n          // This code path does not service revalidations for unknown param\n          // shells. As a result, we don't need to pass in the unknown params.\n          null,\n          renderOpts\n        )\n      }\n\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n\n      return lazyRenderPagesPage(\n        req.originalRequest,\n        res.originalResponse,\n        pathname,\n        query,\n        renderOpts\n      )\n    }\n  }\n\n  protected async imageOptimizer(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    paramsResult: import('./image-optimizer').ImageParamsResult\n  ): Promise<{ buffer: Buffer; contentType: string; maxAge: number }> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: imageOptimizer should not be called in minimal mode'\n      )\n    } else {\n      const { imageOptimizer, fetchExternalImage, fetchInternalImage } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const handleInternalReq = async (\n        newReq: IncomingMessage,\n        newRes: ServerResponse\n      ) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`)\n        }\n\n        if (!this.routerServerHandler) {\n          throw new Error(`Invariant missing routerServerHandler`)\n        }\n\n        await this.routerServerHandler(newReq, newRes)\n        return\n      }\n\n      const { isAbsolute, href } = paramsResult\n\n      const imageUpstream = isAbsolute\n        ? await fetchExternalImage(href)\n        : await fetchInternalImage(\n            href,\n            req.originalRequest,\n            res.originalResponse,\n            handleInternalReq\n          )\n\n      return imageOptimizer(\n        imageUpstream,\n        paramsResult,\n        this.nextConfig,\n        this.renderOpts.dev\n      )\n    }\n  }\n\n  protected getPagePath(pathname: string, locales?: string[]): string {\n    return getPagePath(\n      pathname,\n      this.distDir,\n      locales,\n      this.enabledDirectories.app\n    )\n  }\n\n  protected async renderPageComponent(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    bubbleNoFallback: boolean\n  ) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || []\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname)\n      const isAppPath = Array.isArray(appPaths)\n\n      let page = ctx.pathname\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0]\n      }\n\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths,\n          })\n          return null\n        }\n      }\n    }\n\n    return super.renderPageComponent(ctx, bubbleNoFallback)\n  }\n\n  protected async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath,\n    url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    // The following parameters are used in the development server's\n    // implementation.\n    sriEnabled?: boolean\n    appPaths?: ReadonlyArray<string> | null\n    shouldEnsure: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    return getTracer().trace(\n      NextNodeServerSpan.findPageComponents,\n      {\n        spanName: 'resolve page components',\n        attributes: {\n          'next.route': isAppPath ? normalizeAppPath(page) : page,\n        },\n      },\n      () =>\n        this.findPageComponentsImpl({\n          page,\n          query,\n          params,\n          isAppPath,\n          url,\n        })\n    )\n  }\n\n  private async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath,\n    url: _url,\n  }: {\n    page: string\n    query: NextParsedUrlQuery\n    params: Params\n    isAppPath: boolean\n    url?: string\n  }): Promise<FindComponentsResult | null> {\n    const pagePaths: string[] = [page]\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift(\n        (isAppPath ? normalizeAppPath(page) : normalizePagePath(page)) + '.amp'\n      )\n    }\n\n    if (query.__nextLocale) {\n      pagePaths.unshift(\n        ...pagePaths.map(\n          (path) => `/${query.__nextLocale}${path === '/' ? '' : path}`\n        )\n      )\n    }\n\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await loadComponents({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath,\n        })\n\n        if (\n          query.__nextLocale &&\n          typeof components.Component === 'string' &&\n          !pagePath.startsWith(`/${query.__nextLocale}`)\n        ) {\n          // if loading an static HTML file the locale is required\n          // to be present since all HTML files are output under their locale\n          continue\n        }\n\n        return {\n          components,\n          query: {\n            ...(!this.renderOpts.isExperimentalCompile &&\n            components.getStaticProps\n              ? ({\n                  amp: query.amp,\n                  __nextDataReq: query.__nextDataReq,\n                  __nextLocale: query.__nextLocale,\n                  __nextDefaultLocale: query.__nextDefaultLocale,\n                } as NextParsedUrlQuery)\n              : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {}),\n          },\n        }\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof PageNotFoundError)) {\n          throw err\n        }\n      }\n    }\n    return null\n  }\n\n  protected getNextFontManifest(): NextFontManifest | undefined {\n    return loadManifest(\n      join(this.distDir, 'server', NEXT_FONT_MANIFEST + '.json')\n    ) as NextFontManifest\n  }\n\n  protected handleNextImageRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    if (!parsedUrl.pathname || !parsedUrl.pathname.startsWith('/_next/image')) {\n      return false\n    }\n\n    if (\n      this.minimalMode ||\n      this.nextConfig.output === 'export' ||\n      process.env.NEXT_MINIMAL\n    ) {\n      res.statusCode = 400\n      res.body('Bad Request').send()\n      return true\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const { ImageOptimizerCache } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig,\n      })\n\n      const { getHash, sendResponse, ImageError } =\n        require('./image-optimizer') as typeof import('./image-optimizer')\n\n      if (!this.imageResponseCache) {\n        throw new Error('invariant image optimizer cache was not initialized')\n      }\n      const imagesConfig = this.nextConfig.images\n\n      if (imagesConfig.loader !== 'default' || imagesConfig.unoptimized) {\n        await this.render404(req, res)\n        return true\n      }\n\n      const paramsResult = ImageOptimizerCache.validateParams(\n        req.originalRequest,\n        parsedUrl.query,\n        this.nextConfig,\n        !!this.renderOpts.dev\n      )\n\n      if ('errorMessage' in paramsResult) {\n        res.statusCode = 400\n        res.body(paramsResult.errorMessage).send()\n        return true\n      }\n\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult)\n\n      try {\n        const { getExtension } =\n          require('./serve-static') as typeof import('./serve-static')\n        const cacheEntry = await this.imageResponseCache.get(\n          cacheKey,\n          async () => {\n            const { buffer, contentType, maxAge } = await this.imageOptimizer(\n              req,\n              res,\n              paramsResult\n            )\n            const etag = getHash([buffer])\n\n            return {\n              value: {\n                kind: CachedRouteKind.IMAGE,\n                buffer,\n                etag,\n                extension: getExtension(contentType) as string,\n              },\n              isFallback: false,\n              revalidate: maxAge,\n            }\n          },\n          {\n            routeKind: RouteKind.IMAGE,\n            incrementalCache: imageOptimizerCache,\n            isFallback: false,\n          }\n        )\n\n        if (cacheEntry?.value?.kind !== CachedRouteKind.IMAGE) {\n          throw new Error(\n            'invariant did not get entry from image response cache'\n          )\n        }\n\n        sendResponse(\n          req.originalRequest,\n          res.originalResponse,\n          paramsResult.href,\n          cacheEntry.value.extension,\n          cacheEntry.value.buffer,\n          paramsResult.isStatic,\n          cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT',\n          imagesConfig,\n          cacheEntry.revalidate || 0,\n          Boolean(this.renderOpts.dev)\n        )\n        return true\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode\n          res.body(err.message).send()\n          return true\n        }\n        throw err\n      }\n    }\n  }\n\n  protected handleCatchallRenderRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsedUrl\n  ) => {\n    let { pathname, query } = parsedUrl\n    if (!pathname) {\n      throw new Error('Invariant: pathname is undefined')\n    }\n\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    query._nextBubbleNoFallback = '1'\n\n    try {\n      // next.js core assumes page path without trailing slash\n      pathname = removeTrailingSlash(pathname)\n\n      const options: MatchOptions = {\n        i18n: this.i18nProvider?.fromQuery(pathname, query),\n      }\n      const match = await this.matchers.match(pathname, options)\n\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true)\n\n        return true\n      }\n\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      addRequestMeta(req, 'match', match)\n\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages()\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue\n\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n        delete query._nextBubbleNoFallback\n        delete query[NEXT_RSC_UNION_QUERY]\n\n        // If we handled the request, we can return early.\n        // For api routes edge runtime\n        try {\n          const handled = await this.runEdgeFunction({\n            req,\n            res,\n            query,\n            params: match.params,\n            page: match.definition.page,\n            match,\n            appPaths: null,\n          })\n          if (handled) return true\n        } catch (apiError) {\n          await this.instrumentationOnRequestError(apiError, req, {\n            routePath: match.definition.page,\n            routerKind: 'Pages Router',\n            routeType: 'route',\n            // Edge runtime does not support ISR\n            revalidateReason: undefined,\n          })\n          throw apiError\n        }\n      }\n\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if (isPagesAPIRouteMatch(match)) {\n        if (this.nextConfig.output === 'export') {\n          await this.render404(req, res, parsedUrl)\n          return true\n        }\n\n        delete query._nextBubbleNoFallback\n\n        const handled = await this.handleApiRequest(req, res, query, match)\n        if (handled) return true\n      }\n\n      await this.render(req, res, pathname, query, parsedUrl, true)\n\n      return true\n    } catch (err: any) {\n      if (err instanceof NoFallbackError) {\n        throw err\n      }\n\n      try {\n        if (this.renderOpts.dev) {\n          const { formatServerError } =\n            require('../lib/format-server-error') as typeof import('../lib/format-server-error')\n          formatServerError(err)\n          await this.logErrorWithOriginalStack(err)\n        } else {\n          this.logError(err)\n        }\n        res.statusCode = 500\n        await this.renderError(err, req, res, pathname, query)\n        return true\n      } catch {}\n\n      throw err\n    }\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async logErrorWithOriginalStack(\n    _err?: unknown,\n    _type?: 'unhandledRejection' | 'uncaughtException' | 'warning' | 'app-dir'\n  ): Promise<void> {\n    throw new Error(\n      'Invariant: logErrorWithOriginalStack can only be called on the development server'\n    )\n  }\n\n  // Used in development only, overloaded in next-dev-server\n  protected async ensurePage(_opts: {\n    page: string\n    clientOnly: boolean\n    appPaths?: ReadonlyArray<string> | null\n    match?: RouteMatch\n    url?: string\n  }): Promise<void> {\n    throw new Error(\n      'Invariant: ensurePage can only be called on the development server'\n    )\n  }\n\n  /**\n   * Resolves `API` request, in development builds on demand\n   * @param req http request\n   * @param res http response\n   * @param pathname path of request\n   */\n  protected async handleApiRequest(\n    req: NodeNextRequest,\n    res: NodeNextResponse,\n    query: ParsedUrlQuery,\n    match: PagesAPIRouteMatch\n  ): Promise<boolean> {\n    return this.runApi(req, res, query, match)\n  }\n\n  protected getCacheFilesystem(): CacheFs {\n    return nodeFs\n  }\n\n  protected normalizeReq(\n    req: NodeNextRequest | IncomingMessage\n  ): NodeNextRequest {\n    return !(req instanceof NodeNextRequest) ? new NodeNextRequest(req) : req\n  }\n\n  protected normalizeRes(\n    res: NodeNextResponse | ServerResponse\n  ): NodeNextResponse {\n    return !(res instanceof NodeNextResponse) ? new NodeNextResponse(res) : res\n  }\n\n  public getRequestHandler(): NodeRequestHandler {\n    const handler = this.makeRequestHandler()\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode,\n      } = require('next/dist/experimental/testmode/server')\n      return wrapRequestHandlerNode(handler)\n    }\n    return handler\n  }\n\n  private makeRequestHandler(): NodeRequestHandler {\n    // This is just optimization to fire prepare as soon as possible. It will be\n    // properly awaited later. We add the catch here to ensure that it does not\n    // cause an unhandled promise rejection. The promise rejection will be\n    // handled later on via the `await` when the request handler is called.\n    this.prepare().catch((err) => {\n      console.error('Failed to prepare server', err)\n    })\n\n    const handler = super.getRequestHandler()\n\n    return (req, res, parsedUrl) =>\n      handler(this.normalizeReq(req), this.normalizeRes(res), parsedUrl)\n  }\n\n  public async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts,\n  }: {\n    urlPath: string\n    revalidateHeaders: { [key: string]: string | string[] }\n    opts: { unstable_onlyGenerated?: boolean }\n  }) {\n    const mocked = createRequestResponseMocks({\n      url: urlPath,\n      headers: revalidateHeaders,\n    })\n\n    const handler = this.getRequestHandler()\n    await handler(\n      new NodeNextRequest(mocked.req),\n      new NodeNextResponse(mocked.res)\n    )\n    await mocked.res.hasStreamed\n\n    if (\n      mocked.res.getHeader('x-nextjs-cache') !== 'REVALIDATED' &&\n      !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)\n    ) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`)\n    }\n  }\n\n  public async render(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    parsedUrl?: NextUrlWithParsedQuery,\n    internal = false\n  ): Promise<void> {\n    return super.render(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      parsedUrl,\n      internal\n    )\n  }\n\n  public async renderToHTML(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderToHTML(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  protected async renderErrorToResponseImpl(\n    ctx: RequestContext<NodeNextRequest, NodeNextResponse>,\n    err: Error | null\n  ) {\n    const { req, res, query } = ctx\n    const is404 = res.statusCode === 404\n\n    if (is404 && this.enabledDirectories.app) {\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          clientOnly: false,\n          url: req.url,\n        }).catch(() => {})\n      }\n\n      if (\n        this.getEdgeFunctionsPages().includes(UNDERSCORE_NOT_FOUND_ROUTE_ENTRY)\n      ) {\n        await this.runEdgeFunction({\n          req,\n          res,\n          query: query || {},\n          params: {},\n          page: UNDERSCORE_NOT_FOUND_ROUTE_ENTRY,\n          appPaths: null,\n        })\n        return null\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err)\n  }\n\n  public async renderError(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: NextParsedUrlQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.renderError(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query,\n      setHeaders\n    )\n  }\n\n  public async renderErrorToHTML(\n    err: Error | null,\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    pathname: string,\n    query?: ParsedUrlQuery\n  ): Promise<string | null> {\n    return super.renderErrorToHTML(\n      err,\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      pathname,\n      query\n    )\n  }\n\n  public async render404(\n    req: NodeNextRequest | IncomingMessage,\n    res: NodeNextResponse | ServerResponse,\n    parsedUrl?: NextUrlWithParsedQuery,\n    setHeaders?: boolean\n  ): Promise<void> {\n    return super.render404(\n      this.normalizeReq(req),\n      this.normalizeRes(res),\n      parsedUrl,\n      setHeaders\n    )\n  }\n\n  protected getMiddlewareManifest(): MiddlewareManifest | null {\n    if (this.minimalMode) return null\n    const manifest: MiddlewareManifest = require(this.middlewareManifestPath)\n    return manifest\n  }\n\n  /** Returns the middleware routing item if there is one. */\n  protected getMiddleware(): MiddlewareRoutingItem | undefined {\n    const manifest = this.getMiddlewareManifest()\n    const middleware = manifest?.middleware?.['/']\n    if (!middleware) {\n      return\n    }\n\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: '/',\n    }\n  }\n\n  protected getEdgeFunctionsPages(): string[] {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return []\n    }\n\n    return Object.keys(manifest.functions)\n  }\n\n  /**\n   * Get information for the edge function located in the provided page\n   * folder. If the edge function info can't be found it will throw\n   * an error.\n   */\n  protected getEdgeFunctionInfo(params: {\n    page: string\n    /** Whether we should look for a middleware or not */\n    middleware: boolean\n  }): {\n    name: string\n    paths: string[]\n    wasm: { filePath: string; name: string }[]\n    env: { [key: string]: string }\n    assets?: { filePath: string; name: string }[]\n  } | null {\n    const manifest = this.getMiddlewareManifest()\n    if (!manifest) {\n      return null\n    }\n\n    let foundPage: string\n\n    try {\n      foundPage = denormalizePagePath(normalizePagePath(params.page))\n    } catch (err) {\n      return null\n    }\n\n    let pageInfo = params.middleware\n      ? manifest.middleware[foundPage]\n      : manifest.functions[foundPage]\n\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new PageNotFoundError(foundPage)\n      }\n      return null\n    }\n\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map((file) => join(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map((binding) => ({\n        ...binding,\n        filePath: join(this.distDir, binding.filePath),\n      })),\n      assets:\n        pageInfo.assets &&\n        pageInfo.assets.map((binding) => {\n          return {\n            ...binding,\n            filePath: join(this.distDir, binding.filePath),\n          }\n        }),\n      env: pageInfo.env,\n    }\n  }\n\n  /**\n   * Checks if a middleware exists. This method is useful for the development\n   * server where we need to check the filesystem. Here we just check the\n   * middleware manifest.\n   */\n  protected async hasMiddleware(pathname: string): Promise<boolean> {\n    const info = this.getEdgeFunctionInfo({ page: pathname, middleware: true })\n    return Boolean(info && info.paths.length > 0)\n  }\n\n  /**\n   * A placeholder for a function to be defined in the development server.\n   * It will make sure that the root middleware or an edge function has been compiled\n   * so that we can run it.\n   */\n  protected async ensureMiddleware(_url?: string) {}\n  protected async ensureEdgeFunction(_params: {\n    page: string\n    appPaths: string[] | null\n    url?: string\n  }) {}\n\n  /**\n   * This method gets all middleware matchers and execute them when the request\n   * matches. It will make sure that each middleware exists and is compiled and\n   * ready to be invoked. The development server will decorate it to add warns\n   * and errors with rich traces.\n   */\n  protected async runMiddleware(params: {\n    request: NodeNextRequest\n    response: NodeNextResponse\n    parsedUrl: ParsedUrl\n    parsed: UrlWithParsedQuery\n    onWarning?: (warning: Error) => void\n  }) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'invariant: runMiddleware should not be called in minimal mode'\n      )\n    }\n\n    // Middleware is skipped for on-demand revalidate requests\n    if (\n      checkIsOnDemandRevalidate(params.request, this.renderOpts.previewProps)\n        .isOnDemandRevalidate\n    ) {\n      return {\n        response: new Response(null, { headers: { 'x-middleware-next': '1' } }),\n      } as FetchEventResult\n    }\n\n    let url: string\n\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = getRequestMeta(params.request, 'initURL')!\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = urlQueryToSearchParams(params.parsed.query).toString()\n      const locale = params.parsed.query.__nextLocale\n\n      url = `${getRequestMeta(params.request, 'initProtocol')}://${\n        this.fetchHostname || 'localhost'\n      }:${this.port}${locale ? `/${locale}` : ''}${params.parsed.pathname}${\n        query ? `?${query}` : ''\n      }`\n    }\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const page: {\n      name?: string\n      params?: { [key: string]: string | string[] }\n    } = {}\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return { finished: false }\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return { finished: false }\n    }\n\n    await this.ensureMiddleware(params.request.url)\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true,\n    })\n\n    if (!middlewareInfo) {\n      throw new MiddlewareNotFoundError()\n    }\n\n    const method = (params.request.method || 'GET').toUpperCase()\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n          experimental: this.nextConfig.experimental,\n        },\n        url: url,\n        page,\n        body: getRequestMeta(params.request, 'clonableBody'),\n        signal: signalFromNodeResponse(params.response.originalResponse),\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n    })\n\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch((error) => {\n        console.error(`Uncaught: middleware waitUntil errored`, error)\n      })\n    }\n\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed)\n      return { finished: true }\n    }\n\n    // Split compound (comma-separated) set-cookie headers\n    if (result.response.headers.has('set-cookie')) {\n      const cookies = result.response.headers\n        .getSetCookie()\n        .flatMap((maybeCompoundCookie) =>\n          splitCookiesString(maybeCompoundCookie)\n        )\n\n      // Clear existing header(s)\n      result.response.headers.delete('set-cookie')\n\n      // Append each cookie individually.\n      for (const cookie of cookies) {\n        result.response.headers.append('set-cookie', cookie)\n      }\n\n      // Add cookies to request meta.\n      addRequestMeta(params.request, 'middlewareCookie', cookies)\n    }\n\n    return result\n  }\n\n  protected handleCatchallMiddlewareRequest: NodeRouteHandler = async (\n    req,\n    res,\n    parsed\n  ) => {\n    const isMiddlewareInvoke = getRequestMeta(req, 'middlewareInvoke')\n\n    if (!isMiddlewareInvoke) {\n      return false\n    }\n\n    const handleFinished = () => {\n      addRequestMeta(req, 'middlewareInvoke', true)\n      res.body('').send()\n      return true\n    }\n\n    const middleware = this.getMiddleware()\n    if (!middleware) {\n      return handleFinished()\n    }\n\n    const initUrl = getRequestMeta(req, 'initURL')!\n    const parsedUrl = parseUrl(initUrl)\n    const pathnameInfo = getNextPathnameInfo(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider,\n    })\n\n    parsedUrl.pathname = pathnameInfo.pathname\n    const normalizedPathname = removeTrailingSlash(parsed.pathname || '')\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished()\n    }\n\n    let result: Awaited<\n      ReturnType<typeof NextNodeServer.prototype.runMiddleware>\n    >\n    let bubblingResult = false\n\n    try {\n      await this.ensureMiddleware(req.url)\n\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed,\n      })\n\n      if ('response' in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true\n          throw new BubbledError(true, result)\n        }\n\n        for (const [key, value] of Object.entries(\n          toNodeOutgoingHttpHeaders(result.response.headers)\n        )) {\n          if (key !== 'content-encoding' && value !== undefined) {\n            res.setHeader(key, value as string | string[])\n          }\n        }\n        res.statusCode = result.response.status\n\n        const { originalResponse } = res\n        if (result.response.body) {\n          await pipeToNodeResponse(result.response.body, originalResponse)\n        } else {\n          originalResponse.end()\n        }\n        return true\n      }\n    } catch (err: unknown) {\n      if (bubblingResult) {\n        throw err\n      }\n\n      if (isError(err) && err.code === 'ENOENT') {\n        await this.render404(req, res, parsed)\n        return true\n      }\n\n      if (err instanceof DecodeError) {\n        res.statusCode = 400\n        await this.renderError(err, req, res, parsed.pathname || '')\n        return true\n      }\n\n      const error = getProperError(err)\n      console.error(error)\n      res.statusCode = 500\n      await this.renderError(error, req, res, parsed.pathname || '')\n      return true\n    }\n\n    return result.finished\n  }\n\n  private _cachedPreviewManifest: PrerenderManifest | undefined\n  protected getPrerenderManifest(): PrerenderManifest {\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest\n    }\n    if (\n      this.renderOpts?.dev ||\n      this.serverOptions?.dev ||\n      process.env.NODE_ENV === 'development' ||\n      process.env.NEXT_PHASE === PHASE_PRODUCTION_BUILD\n    ) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require('crypto').randomBytes(16).toString('hex'),\n          previewModeSigningKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n          previewModeEncryptionKey: require('crypto')\n            .randomBytes(32)\n            .toString('hex'),\n        },\n      }\n      return this._cachedPreviewManifest\n    }\n\n    this._cachedPreviewManifest = loadManifest(\n      join(this.distDir, PRERENDER_MANIFEST)\n    ) as PrerenderManifest\n\n    return this._cachedPreviewManifest\n  }\n\n  protected getRoutesManifest(): NormalizedRouteManifest | undefined {\n    return getTracer().trace(NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = loadManifest(join(this.distDir, ROUTES_MANIFEST)) as any\n\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: [],\n      }\n\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: [],\n        }\n      }\n\n      return { ...manifest, rewrites }\n    })\n  }\n\n  protected attachRequestMeta(\n    req: NodeNextRequest,\n    parsedUrl: NextUrlWithParsedQuery,\n    isUpgradeReq?: boolean\n  ) {\n    // Injected in base-server.ts\n    const protocol = req.headers['x-forwarded-proto']?.includes('https')\n      ? 'https'\n      : 'http'\n\n    // When there are hostname and port we build an absolute URL\n    const initUrl =\n      this.fetchHostname && this.port\n        ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}`\n        : this.nextConfig.experimental.trustHostHeader\n          ? `https://${req.headers.host || 'localhost'}${req.url}`\n          : req.url\n\n    addRequestMeta(req, 'initURL', initUrl)\n    addRequestMeta(req, 'initQuery', { ...parsedUrl.query })\n    addRequestMeta(req, 'initProtocol', protocol)\n\n    if (!isUpgradeReq) {\n      addRequestMeta(req, 'clonableBody', getCloneableBody(req.originalRequest))\n    }\n  }\n\n  protected async runEdgeFunction(params: {\n    req: NodeNextRequest\n    res: NodeNextResponse\n    query: ParsedUrlQuery\n    params: Params | undefined\n    page: string\n    appPaths: string[] | null\n    match?: RouteMatch\n    onError?: (err: unknown) => void\n    onWarning?: (warning: Error) => void\n  }): Promise<FetchEventResult | null> {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\n        'Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.'\n      )\n    }\n    let edgeInfo: ReturnType<typeof this.getEdgeFunctionInfo> | undefined\n\n    const { query, page, match } = params\n\n    if (!match)\n      await this.ensureEdgeFunction({\n        page,\n        appPaths: params.appPaths,\n        url: params.req.url,\n      })\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false,\n    })\n\n    if (!edgeInfo) {\n      return null\n    }\n\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isNextDataRequest = !!query.__nextDataReq\n    const initialUrl = new URL(\n      getRequestMeta(params.req, 'initURL') || '/',\n      'http://n'\n    )\n    const queryString = urlQueryToSearchParams({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params,\n    }).toString()\n\n    if (isNextDataRequest) {\n      params.req.headers['x-nextjs-data'] = '1'\n    }\n    initialUrl.search = queryString\n    const url = initialUrl.toString()\n\n    if (!url.startsWith('http')) {\n      throw new Error(\n        'To use middleware you must provide a `hostname` and `port` to the Next.js Server'\n      )\n    }\n\n    const { run } = require('./web/sandbox') as typeof import('./web/sandbox')\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash,\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && { params: params.params }),\n        },\n        body: getRequestMeta(params.req, 'clonableBody'),\n        signal: signalFromNodeResponse(params.res.originalResponse),\n      },\n      useCache: true,\n      onError: params.onError,\n      onWarning: params.onWarning,\n      incrementalCache:\n        (globalThis as any).__incrementalCache ||\n        getRequestMeta(params.req, 'incrementalCache'),\n      serverComponentsHmrCache: getRequestMeta(\n        params.req,\n        'serverComponentsHmrCache'\n      ),\n    })\n\n    if (result.fetchMetrics) {\n      params.req.fetchMetrics = result.fetchMetrics\n    }\n\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status\n      params.res.statusMessage = result.response.statusText\n    }\n\n    // TODO: (wyattjoh) investigate improving this\n\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === 'set-cookie') {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of splitCookiesString(value)) {\n          params.res.appendHeader(key, cookie)\n        }\n      } else {\n        params.res.appendHeader(key, value)\n      }\n    })\n\n    const { originalResponse } = params.res\n    if (result.response.body) {\n      await pipeToNodeResponse(result.response.body, originalResponse)\n    } else {\n      originalResponse.end()\n    }\n\n    return result\n  }\n\n  protected get serverDistDir(): string {\n    if (this._serverDistDir) {\n      return this._serverDistDir\n    }\n    const serverDistDir = join(this.distDir, SERVER_DIRECTORY)\n    this._serverDistDir = serverDistDir\n    return serverDistDir\n  }\n\n  protected async getFallbackErrorComponents(\n    _url?: string\n  ): Promise<LoadComponentsReturnType | null> {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null\n  }\n\n  protected async instrumentationOnRequestError(\n    ...args: Parameters<ServerOnInstrumentationRequestError>\n  ) {\n    await super.instrumentationOnRequestError(...args)\n\n    // For Node.js runtime production logs, in dev it will be overridden by next-dev-server\n    if (!this.renderOpts.dev) {\n      this.logError(args[0] as Error)\n    }\n  }\n}\n"],"names":["DecodeError","PageNotFoundError","MiddlewareNotFoundError","fs","join","resolve","getRouteMatcher","addRequestMeta","getRequestMeta","PAGES_MANIFEST","BUILD_ID_FILE","MIDDLEWARE_MANIFEST","PRERENDER_MANIFEST","ROUTES_MANIFEST","CLIENT_PUBLIC_FILES_PATH","APP_PATHS_MANIFEST","SERVER_DIRECTORY","NEXT_FONT_MANIFEST","PHASE_PRODUCTION_BUILD","UNDERSCORE_NOT_FOUND_ROUTE_ENTRY","findDir","NodeNextRequest","NodeNextResponse","sendRenderResult","parseUrl","Log","BaseServer","NoFallbackError","getMaybePagePath","getPagePath","denormalizePagePath","normalizePagePath","loadComponents","isError","getProperError","splitCookiesString","toNodeOutgoingHttpHeaders","getMiddlewareRouteMatcher","loadEnvConfig","urlQueryToSearchParams","removeTrailingSlash","getNextPathnameInfo","getCloneableBody","checkIsOnDemandRevalidate","ResponseCache","CachedRouteKind","IncrementalCache","normalizeAppPath","setHttpClientAndAgentOptions","isPagesAPIRouteMatch","INSTRUMENTATION_HOOK_FILENAME","BubbledError","getTracer","NextNodeServerSpan","nodeFs","getRouteRegex","pipeToNodeResponse","createRequestResponseMocks","NEXT_RSC_UNION_QUERY","signalFromNodeResponse","RouteModuleLoader","loadManifest","lazyRenderAppPage","lazyRenderPagesPage","interopDefault","formatDynamicImportPath","isInterceptionRouteRewrite","RouteKind","dynamicImportEsmDefault","process","env","NEXT_MINIMAL","id","then","mod","default","dynamicRequire","__non_webpack_require__","require","MiddlewareMatcherCache","WeakMap","getMiddlewareMatcher","info","stored","get","Array","isArray","matchers","Error","JSON","stringify","matcher","set","NextNodeServer","constructor","options","registeredInstrumentation","handleNextImageRequest","req","res","parsedUrl","pathname","startsWith","minimalMode","nextConfig","output","statusCode","body","send","ImageOptimizerCache","imageOptimizerCache","distDir","getHash","sendResponse","ImageError","imageResponseCache","imagesConfig","images","loader","unoptimized","render404","paramsResult","validateParams","originalRequest","query","renderOpts","dev","errorMessage","cacheKey","getCacheKey","cacheEntry","getExtension","buffer","contentType","maxAge","imageOptimizer","etag","value","kind","IMAGE","extension","isFallback","revalidate","routeKind","incrementalCache","originalResponse","href","isStatic","isMiss","isStale","Boolean","err","message","handleCatchallRenderRequest","_nextBubbleNoFallback","i18n","i18nProvider","fromQuery","match","render","edgeFunctionsPages","getEdgeFunctionsPages","edgeFunctionsPage","definition","page","handled","runEdgeFunction","params","appPaths","apiError","instrumentationOnRequestError","routePath","routerKind","routeType","revalidateReason","undefined","handleApiRequest","formatServerError","logErrorWithOriginalStack","logError","renderError","handleCatchallMiddlewareRequest","parsed","isMiddlewareInvoke","handleFinished","middleware","getMiddleware","initUrl","pathnameInfo","normalizedPathname","result","bubblingResult","ensureMiddleware","url","runMiddleware","request","response","key","Object","entries","headers","setHeader","status","end","code","error","console","finished","optimizeCss","__NEXT_OPTIMIZE_CSS","nextScriptWorkers","__NEXT_SCRIPT_WORKERS","NEXT_DEPLOYMENT_ID","deploymentId","appDocumentPreloading","experimental","isDefaultEnabled","isAppPath","catch","preloadEntriesOnStart","unstable_preloadEntries","dynamicRoutes","getRoutesManifest","map","r","regex","re","serverOptions","experimentalTestProxy","NEXT_PRIVATE_TEST_PROXY","interceptTestApis","middlewareManifestPath","serverDistDir","prepare","appPathsManifest","getAppPathsManifest","pagesManifest","getPagesManifest","keys","ComponentMod","webpackRequire","__next_app__","m","handleUpgrade","loadInstrumentationModule","instrumentation","dir","conf","cause","prepareImpl","runInstrumentationHookIfAvailable","register","forceReload","silent","getIncrementalCache","requestHeaders","requestProtocol","CacheHandler","cacheHandler","getCacheFilesystem","allowedRevalidateHeaderKeys","fetchCache","fetchCacheKeyPrefix","maxMemoryCacheSize","cacheMaxMemorySize","flushToDisk","isrFlushToDisk","getPrerenderManifest","CurCacheHandler","getResponseCache","getPublicDir","getHasStaticDir","existsSync","enabledDirectories","app","getinterceptionRoutePatterns","routesManifest","rewrites","beforeFiles","filter","rewrite","RegExp","hasPage","locales","getBuildId","buildIdFile","readFileSync","trim","getEnabledDirectories","pages","type","generateEtags","poweredByHeader","swrDelta","runApi","handledAsEdgeFunction","module","load","filename","__nextLocale","__nextDefaultLocale","__nextInferredLocaleFromDefault","previewProps","bind","trustHostHeader","hostname","fetchHostname","onError","multiZoneDraftMode","renderHTML","trace","renderHTMLImpl","nextFontManifest","fetchExternalImage","fetchInternalImage","handleInternalReq","newReq","newRes","routerServerHandler","isAbsolute","imageUpstream","renderPageComponent","ctx","bubbleNoFallback","length","getOriginalAppPaths","findPageComponents","spanName","attributes","findPageComponentsImpl","_url","pagePaths","amp","unshift","path","pagePath","components","Component","isExperimentalCompile","getStaticProps","__nextDataReq","getNextFontManifest","_err","_type","ensurePage","_opts","normalizeReq","normalizeRes","getRequestHandler","handler","makeRequestHandler","wrapRequestHandlerNode","urlPath","revalidateHeaders","opts","mocked","hasStreamed","getHeader","unstable_onlyGenerated","internal","renderToHTML","renderErrorToResponseImpl","is404","clientOnly","includes","setHeaders","renderErrorToHTML","getMiddlewareManifest","manifest","functions","getEdgeFunctionInfo","foundPage","pageInfo","name","paths","files","file","wasm","binding","filePath","assets","hasMiddleware","ensureEdgeFunction","_params","isOnDemandRevalidate","Response","skipMiddlewareUrlNormalize","toString","locale","port","middlewareInfo","method","toUpperCase","run","edgeFunctionEntry","basePath","trailingSlash","signal","useCache","onWarning","waitUntil","has","cookies","getSetCookie","flatMap","maybeCompoundCookie","delete","cookie","append","_cachedPreviewManifest","NODE_ENV","NEXT_PHASE","version","routes","notFoundRoutes","preview","previewModeId","randomBytes","previewModeSigningKey","previewModeEncryptionKey","afterFiles","fallback","attachRequestMeta","isUpgradeReq","protocol","host","edgeInfo","isNextDataRequest","initialUrl","URL","queryString","fromEntries","searchParams","search","globalThis","__incrementalCache","serverComponentsHmrCache","fetchMetrics","statusMessage","statusText","forEach","toLowerCase","appendHeader","_serverDistDir","getFallbackErrorComponents","args"],"mappings":"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"}