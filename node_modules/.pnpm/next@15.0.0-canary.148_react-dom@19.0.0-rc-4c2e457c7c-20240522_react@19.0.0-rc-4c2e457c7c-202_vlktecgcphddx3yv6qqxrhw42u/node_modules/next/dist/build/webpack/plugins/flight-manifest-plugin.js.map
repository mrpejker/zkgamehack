{"version":3,"sources":["../../../../src/build/webpack/plugins/flight-manifest-plugin.ts"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport path from 'path'\nimport { webpack, sources } from 'next/dist/compiled/webpack/webpack'\nimport {\n  APP_CLIENT_INTERNALS,\n  BARREL_OPTIMIZATION_PREFIX,\n  CLIENT_REFERENCE_MANIFEST,\n  SYSTEM_ENTRYPOINTS,\n} from '../../../shared/lib/constants'\nimport { relative } from 'path'\nimport { getProxiedPluginState } from '../../build-context'\n\nimport { WEBPACK_LAYERS } from '../../../lib/constants'\nimport { normalizePagePath } from '../../../shared/lib/page-path/normalize-page-path'\nimport { CLIENT_STATIC_FILES_RUNTIME_MAIN_APP } from '../../../shared/lib/constants'\nimport { getDeploymentIdQueryOrEmptyString } from '../../deployment-id'\nimport {\n  formatBarrelOptimizedResource,\n  getModuleReferencesInOrder,\n} from '../utils'\nimport type { ChunkGroup } from 'webpack'\n\ninterface Options {\n  dev: boolean\n  appDir: string\n}\n\n/**\n * Webpack module id\n */\n// TODO-APP ensure `null` is included as it is used.\ntype ModuleId = string | number /*| null*/\n\n// double indexed chunkId, filename\nexport type ManifestChunks = Array<string>\n\nconst pluginState = getProxiedPluginState({\n  serverModuleIds: {} as Record<string, string | number>,\n  edgeServerModuleIds: {} as Record<string, string | number>,\n})\n\nexport interface ManifestNode {\n  [moduleExport: string]: {\n    /**\n     * Webpack module id\n     */\n    id: ModuleId\n    /**\n     * Export name\n     */\n    name: string\n    /**\n     * Chunks for the module. JS and CSS.\n     */\n    chunks: ManifestChunks\n\n    /**\n     * If chunk contains async module\n     */\n    async?: boolean\n  }\n}\n\nexport type ClientReferenceManifest = {\n  readonly moduleLoading: {\n    prefix: string\n    crossOrigin: string | null\n  }\n  clientModules: ManifestNode\n  ssrModuleMapping: {\n    [moduleId: string]: ManifestNode\n  }\n  edgeSSRModuleMapping: {\n    [moduleId: string]: ManifestNode\n  }\n  entryCSSFiles: {\n    [entry: string]: string[]\n  }\n  entryJSFiles?: {\n    [entry: string]: string[]\n  }\n}\n\nfunction getAppPathRequiredChunks(\n  chunkGroup: webpack.ChunkGroup,\n  excludedFiles: Set<string>\n) {\n  const deploymentIdChunkQuery = getDeploymentIdQueryOrEmptyString()\n\n  const chunks: Array<string> = []\n  chunkGroup.chunks.forEach((chunk) => {\n    if (SYSTEM_ENTRYPOINTS.has(chunk.name || '')) {\n      return null\n    }\n\n    // Get the actual chunk file names from the chunk file list.\n    // It's possible that the chunk is generated via `import()`, in\n    // that case the chunk file name will be '[name].[contenthash]'\n    // instead of '[name]-[chunkhash]'.\n    if (chunk.id != null) {\n      const chunkId = '' + chunk.id\n      chunk.files.forEach((file) => {\n        // It's possible that a chunk also emits CSS files, that will\n        // be handled separatedly.\n        if (!file.endsWith('.js')) return null\n        if (file.endsWith('.hot-update.js')) return null\n        if (excludedFiles.has(file)) return null\n\n        // We encode the file as a URI because our server (and many other services such as S3)\n        // expect to receive reserved characters such as `[` and `]` as encoded. This was\n        // previously done for dynamic chunks by patching the webpack runtime but we want\n        // these filenames to be managed by React's Flight runtime instead and so we need\n        // to implement any special handling of the file name here.\n        return chunks.push(chunkId, encodeURI(file + deploymentIdChunkQuery))\n      })\n    }\n  })\n  return chunks\n}\n\n// Normalize the entry names to their \"group names\" so a page can easily track\n// all the manifest items it needs from parent groups by looking up the group\n// segments:\n// - app/foo/loading -> app/foo\n// - app/foo/page -> app/foo\n// - app/(group)/@named/foo/page -> app/foo\n// - app/(.)foo/(..)bar/loading -> app/bar\n// - app/[...catchAll]/page -> app\n// - app/foo/@slot/[...catchAll]/page -> app/foo\nfunction entryNameToGroupName(entryName: string) {\n  let groupName = entryName\n    .slice(0, entryName.lastIndexOf('/'))\n    // Remove slots\n    .replace(/\\/@[^/]+/g, '')\n    // Remove the group with lookahead to make sure it's not interception route\n    .replace(/\\/\\([^/]+\\)(?=(\\/|$))/g, '')\n    // Remove catch-all routes since they should be part of the parent group that the catch-all would apply to.\n    // This is necessary to support parallel routes since multiple page components can be rendered on the same page.\n    // In order to do that, we need to ensure that the manifests are merged together by putting them in the same group.\n    .replace(/\\/\\[?\\[\\.\\.\\.[^\\]]*\\]\\]?/g, '')\n\n  // Interception routes\n  groupName = groupName\n    .replace(/^.+\\/\\(\\.\\.\\.\\)/g, 'app/')\n    .replace(/\\/\\(\\.\\)/g, '/')\n\n  // Interception routes (recursive)\n  while (/\\/[^/]+\\/\\(\\.\\.\\)/.test(groupName)) {\n    groupName = groupName.replace(/\\/[^/]+\\/\\(\\.\\.\\)/g, '/')\n  }\n\n  return groupName\n}\n\nfunction mergeManifest(\n  manifest: ClientReferenceManifest,\n  manifestToMerge: ClientReferenceManifest\n) {\n  Object.assign(manifest.clientModules, manifestToMerge.clientModules)\n  Object.assign(manifest.ssrModuleMapping, manifestToMerge.ssrModuleMapping)\n  Object.assign(\n    manifest.edgeSSRModuleMapping,\n    manifestToMerge.edgeSSRModuleMapping\n  )\n  Object.assign(manifest.entryCSSFiles, manifestToMerge.entryCSSFiles)\n}\n\nconst PLUGIN_NAME = 'ClientReferenceManifestPlugin'\n\nexport class ClientReferenceManifestPlugin {\n  dev: Options['dev'] = false\n  appDir: Options['appDir']\n  appDirBase: string\n\n  constructor(options: Options) {\n    this.dev = options.dev\n    this.appDir = options.appDir\n    this.appDirBase = path.dirname(this.appDir) + path.sep\n  }\n\n  apply(compiler: webpack.Compiler) {\n    compiler.hooks.compilation.tap(\n      PLUGIN_NAME,\n      (compilation, { normalModuleFactory }) => {\n        compilation.dependencyFactories.set(\n          webpack.dependencies.ModuleDependency,\n          normalModuleFactory\n        )\n        compilation.dependencyTemplates.set(\n          webpack.dependencies.ModuleDependency,\n          new webpack.dependencies.NullDependency.Template()\n        )\n        compilation.hooks.processAssets.tap(\n          {\n            name: PLUGIN_NAME,\n            // Have to be in the optimize stage to run after updating the CSS\n            // asset hash via extract mini css plugin.\n            stage: webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_HASH,\n          },\n          (assets) => this.createAsset(assets, compilation, compiler.context)\n        )\n      }\n    )\n  }\n\n  createAsset(\n    assets: webpack.Compilation['assets'],\n    compilation: webpack.Compilation,\n    context: string\n  ) {\n    const manifestsPerGroup = new Map<string, ClientReferenceManifest[]>()\n    const manifestEntryFiles: string[] = []\n\n    const configuredCrossOriginLoading =\n      compilation.outputOptions.crossOriginLoading\n    const crossOriginMode =\n      typeof configuredCrossOriginLoading === 'string'\n        ? configuredCrossOriginLoading === 'use-credentials'\n          ? configuredCrossOriginLoading\n          : 'anonymous'\n        : null\n\n    if (typeof compilation.outputOptions.publicPath !== 'string') {\n      throw new Error(\n        'Expected webpack publicPath to be a string when using App Router. To customize where static assets are loaded from, use the `assetPrefix` option in next.config.js. If you are customizing your webpack config please make sure you are not modifying or removing the publicPath configuration option'\n      )\n    }\n    const prefix = compilation.outputOptions.publicPath || ''\n\n    // We want to omit any files that will always be loaded on any App Router page\n    // because they will already be loaded by the main entrypoint.\n    const rootMainFiles: Set<string> = new Set()\n    compilation.entrypoints\n      .get(CLIENT_STATIC_FILES_RUNTIME_MAIN_APP)\n      ?.getFiles()\n      .forEach((file) => {\n        if (/(?<!\\.hot-update)\\.(js|css)($|\\?)/.test(file)) {\n          rootMainFiles.add(file.replace(/\\\\/g, '/'))\n        }\n      })\n\n    for (let [entryName, entrypoint] of compilation.entrypoints) {\n      if (\n        entryName === CLIENT_STATIC_FILES_RUNTIME_MAIN_APP ||\n        entryName === APP_CLIENT_INTERNALS\n      ) {\n        entryName = ''\n      } else if (!/^app[\\\\/]/.test(entryName)) {\n        continue\n      }\n\n      const manifest: ClientReferenceManifest = {\n        moduleLoading: {\n          prefix,\n          crossOrigin: crossOriginMode,\n        },\n        ssrModuleMapping: {},\n        edgeSSRModuleMapping: {},\n        clientModules: {},\n        entryCSSFiles: {},\n      }\n\n      // Absolute path without the extension\n      const chunkEntryName = (this.appDirBase + entryName).replace(\n        /[\\\\/]/g,\n        path.sep\n      )\n      manifest.entryCSSFiles[chunkEntryName] = entrypoint\n        .getFiles()\n        .filter((f) => !f.startsWith('static/css/pages/') && f.endsWith('.css'))\n\n      const requiredChunks = getAppPathRequiredChunks(entrypoint, rootMainFiles)\n      const recordModule = (modId: ModuleId, mod: webpack.NormalModule) => {\n        let resource =\n          mod.type === 'css/mini-extract'\n            ? // @ts-expect-error TODO: use `identifier()` instead.\n              mod._identifier.slice(mod._identifier.lastIndexOf('!') + 1)\n            : mod.resource\n\n        if (!resource) {\n          return\n        }\n\n        const moduleReferences = manifest.clientModules\n        const moduleIdMapping = manifest.ssrModuleMapping\n        const edgeModuleIdMapping = manifest.edgeSSRModuleMapping\n\n        // Note that this isn't that reliable as webpack is still possible to assign\n        // additional queries to make sure there's no conflict even using the `named`\n        // module ID strategy.\n        let ssrNamedModuleId = relative(\n          context,\n          mod.resourceResolveData?.path || resource\n        )\n\n        if (!ssrNamedModuleId.startsWith('.'))\n          ssrNamedModuleId = `./${ssrNamedModuleId.replace(/\\\\/g, '/')}`\n\n        // The client compiler will always use the CJS Next.js build, so here we\n        // also add the mapping for the ESM build (Edge runtime) to consume.\n        const esmResource = /[\\\\/]next[\\\\/]dist[\\\\/]/.test(resource)\n          ? resource.replace(\n              /[\\\\/]next[\\\\/]dist[\\\\/]/,\n              '/next/dist/esm/'.replace(/\\//g, path.sep)\n            )\n          : null\n\n        // An extra query param is added to the resource key when it's optimized\n        // through the Barrel Loader. That's because the same file might be created\n        // as multiple modules (depending on what you import from it).\n        // See also: webpack/loaders/next-flight-loader/index.ts.\n        if (mod.matchResource?.startsWith(BARREL_OPTIMIZATION_PREFIX)) {\n          ssrNamedModuleId = formatBarrelOptimizedResource(\n            ssrNamedModuleId,\n            mod.matchResource\n          )\n          resource = formatBarrelOptimizedResource(resource, mod.matchResource)\n        }\n\n        function addClientReference() {\n          const exportName = resource\n          manifest.clientModules[exportName] = {\n            id: modId,\n            name: '*',\n            chunks: requiredChunks,\n            async: false,\n          }\n          if (esmResource) {\n            const edgeExportName = esmResource\n            manifest.clientModules[edgeExportName] =\n              manifest.clientModules[exportName]\n          }\n        }\n\n        function addSSRIdMapping() {\n          const exportName = resource\n          if (\n            typeof pluginState.serverModuleIds[ssrNamedModuleId] !== 'undefined'\n          ) {\n            moduleIdMapping[modId] = moduleIdMapping[modId] || {}\n            moduleIdMapping[modId]['*'] = {\n              ...manifest.clientModules[exportName],\n              // During SSR, we don't have external chunks to load on the server\n              // side with our architecture of Webpack / Turbopack. We can keep\n              // this field empty to save some bytes.\n              chunks: [],\n              id: pluginState.serverModuleIds[ssrNamedModuleId],\n            }\n          }\n\n          if (\n            typeof pluginState.edgeServerModuleIds[ssrNamedModuleId] !==\n            'undefined'\n          ) {\n            edgeModuleIdMapping[modId] = edgeModuleIdMapping[modId] || {}\n            edgeModuleIdMapping[modId]['*'] = {\n              ...manifest.clientModules[exportName],\n              // During SSR, we don't have external chunks to load on the server\n              // side with our architecture of Webpack / Turbopack. We can keep\n              // this field empty to save some bytes.\n              chunks: [],\n              id: pluginState.edgeServerModuleIds[ssrNamedModuleId],\n            }\n          }\n        }\n\n        addClientReference()\n        addSSRIdMapping()\n\n        manifest.clientModules = moduleReferences\n        manifest.ssrModuleMapping = moduleIdMapping\n        manifest.edgeSSRModuleMapping = edgeModuleIdMapping\n      }\n\n      const checkedChunkGroups = new Set()\n      const checkedChunks = new Set()\n\n      function recordChunkGroup(chunkGroup: ChunkGroup) {\n        // Ensure recursion is stopped if we've already checked this chunk group.\n        if (checkedChunkGroups.has(chunkGroup)) return\n        checkedChunkGroups.add(chunkGroup)\n        // Only apply following logic to client module requests from client entry,\n        // or if the module is marked as client module. That's because other\n        // client modules don't need to be in the manifest at all as they're\n        // never be referenced by the server/client boundary.\n        // This saves a lot of bytes in the manifest.\n        chunkGroup.chunks.forEach((chunk: webpack.Chunk) => {\n          // Ensure recursion is stopped if we've already checked this chunk.\n          if (checkedChunks.has(chunk)) return\n          checkedChunks.add(chunk)\n          const entryMods =\n            compilation.chunkGraph.getChunkEntryModulesIterable(chunk)\n          for (const mod of entryMods) {\n            if (mod.layer !== WEBPACK_LAYERS.appPagesBrowser) continue\n\n            const request = (mod as webpack.NormalModule).request\n\n            if (\n              !request ||\n              !request.includes('next-flight-client-entry-loader.js?')\n            ) {\n              continue\n            }\n\n            const connections = getModuleReferencesInOrder(\n              mod,\n              compilation.moduleGraph\n            )\n\n            for (const connection of connections) {\n              const dependency = connection.dependency\n              if (!dependency) continue\n\n              const clientEntryMod = compilation.moduleGraph.getResolvedModule(\n                dependency\n              ) as webpack.NormalModule\n              const modId = compilation.chunkGraph.getModuleId(\n                clientEntryMod\n              ) as string | number | null\n\n              if (modId !== null) {\n                recordModule(modId, clientEntryMod)\n              } else {\n                // If this is a concatenation, register each child to the parent ID.\n                if (\n                  connection.module?.constructor.name === 'ConcatenatedModule'\n                ) {\n                  const concatenatedMod = connection.module\n                  const concatenatedModId =\n                    compilation.chunkGraph.getModuleId(concatenatedMod)\n                  recordModule(concatenatedModId, clientEntryMod)\n                }\n              }\n            }\n          }\n        })\n\n        // Walk through all children chunk groups too.\n        for (const child of chunkGroup.childrenIterable) {\n          recordChunkGroup(child)\n        }\n      }\n\n      recordChunkGroup(entrypoint)\n\n      // A page's entry name can have extensions. For example, these are both valid:\n      // - app/foo/page\n      // - app/foo/page.page\n      if (/\\/page(\\.[^/]+)?$/.test(entryName)) {\n        manifestEntryFiles.push(entryName.replace(/\\/page(\\.[^/]+)?$/, '/page'))\n      }\n\n      const groupName = entryNameToGroupName(entryName)\n      if (!manifestsPerGroup.has(groupName)) {\n        manifestsPerGroup.set(groupName, [])\n      }\n      manifestsPerGroup.get(groupName)!.push(manifest)\n    }\n\n    // Generate per-page manifests.\n    for (const pageName of manifestEntryFiles) {\n      const mergedManifest: ClientReferenceManifest = {\n        moduleLoading: {\n          prefix,\n          crossOrigin: crossOriginMode,\n        },\n        ssrModuleMapping: {},\n        edgeSSRModuleMapping: {},\n        clientModules: {},\n        entryCSSFiles: {},\n      }\n\n      const segments = [...entryNameToGroupName(pageName).split('/'), 'page']\n      let group = ''\n      for (const segment of segments) {\n        for (const manifest of manifestsPerGroup.get(group) || []) {\n          mergeManifest(mergedManifest, manifest)\n        }\n        group += (group ? '/' : '') + segment\n      }\n\n      const json = JSON.stringify(mergedManifest)\n\n      const pagePath = pageName.replace(/%5F/g, '_')\n      const pageBundlePath = normalizePagePath(pagePath.slice('app'.length))\n      assets[\n        'server/app' + pageBundlePath + '_' + CLIENT_REFERENCE_MANIFEST + '.js'\n      ] = new sources.RawSource(\n        `globalThis.__RSC_MANIFEST=(globalThis.__RSC_MANIFEST||{});globalThis.__RSC_MANIFEST[${JSON.stringify(\n          pagePath.slice('app'.length)\n        )}]=${json}`\n      ) as unknown as webpack.sources.RawSource\n    }\n  }\n}\n"],"names":["ClientReferenceManifestPlugin","pluginState","getProxiedPluginState","serverModuleIds","edgeServerModuleIds","getAppPathRequiredChunks","chunkGroup","excludedFiles","deploymentIdChunkQuery","getDeploymentIdQueryOrEmptyString","chunks","forEach","chunk","SYSTEM_ENTRYPOINTS","has","name","id","chunkId","files","file","endsWith","push","encodeURI","entryNameToGroupName","entryName","groupName","slice","lastIndexOf","replace","test","mergeManifest","manifest","manifestToMerge","Object","assign","clientModules","ssrModuleMapping","edgeSSRModuleMapping","entryCSSFiles","PLUGIN_NAME","constructor","options","dev","appDir","appDirBase","path","dirname","sep","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","webpack","dependencies","ModuleDependency","dependencyTemplates","NullDependency","Template","processAssets","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_HASH","assets","createAsset","context","manifestsPerGroup","Map","manifestEntryFiles","configuredCrossOriginLoading","outputOptions","crossOriginLoading","crossOriginMode","publicPath","Error","prefix","rootMainFiles","Set","entrypoints","get","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","getFiles","add","entrypoint","APP_CLIENT_INTERNALS","moduleLoading","crossOrigin","chunkEntryName","filter","f","startsWith","requiredChunks","recordModule","modId","mod","resource","type","_identifier","moduleReferences","moduleIdMapping","edgeModuleIdMapping","ssrNamedModuleId","relative","resourceResolveData","esmResource","matchResource","BARREL_OPTIMIZATION_PREFIX","formatBarrelOptimizedResource","addClientReference","exportName","async","edgeExportName","addSSRIdMapping","checkedChunkGroups","checkedChunks","recordChunkGroup","entryMods","chunkGraph","getChunkEntryModulesIterable","layer","WEBPACK_LAYERS","appPagesBrowser","request","includes","connections","getModuleReferencesInOrder","moduleGraph","connection","dependency","clientEntryMod","getResolvedModule","getModuleId","module","concatenatedMod","concatenatedModId","child","childrenIterable","pageName","mergedManifest","segments","split","group","segment","json","JSON","stringify","pagePath","pageBundlePath","normalizePagePath","length","CLIENT_REFERENCE_MANIFEST","sources","RawSource"],"mappings":"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"}