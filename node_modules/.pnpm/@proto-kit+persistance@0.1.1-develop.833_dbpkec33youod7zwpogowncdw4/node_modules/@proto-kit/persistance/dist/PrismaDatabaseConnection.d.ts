import { PrismaClient } from "@prisma/client";
import { SequencerModule, StorageDependencyMinimumDependencies } from "@proto-kit/sequencer";
import { DependencyFactory, OmitKeys } from "@proto-kit/common";
export interface PrismaDatabaseConfig {
    connection?: {
        username: string;
        password: string;
        host: string;
        port?: number;
        db?: {
            name: string;
            schema?: string;
        };
    } | string;
}
export interface PrismaConnection {
    get prismaClient(): PrismaClient;
}
export declare class PrismaDatabaseConnection extends SequencerModule<PrismaDatabaseConfig> implements DependencyFactory, PrismaConnection {
    private initializedClient;
    get prismaClient(): PrismaClient;
    dependencies(): OmitKeys<StorageDependencyMinimumDependencies, "asyncMerkleStore" | "blockTreeStore" | "unprovenMerkleStore">;
    pruneDatabase(): Promise<void>;
    private buildConnectionString;
    start(): Promise<void>;
    close(): Promise<void>;
}
//# sourceMappingURL=PrismaDatabaseConnection.d.ts.map