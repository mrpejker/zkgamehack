var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { sequencerModule, SequencerModule, } from "@proto-kit/sequencer";
import { PrismaDatabaseConnection, } from "./PrismaDatabaseConnection";
import { RedisConnectionModule, } from "./RedisConnection";
export let PrismaRedisDatabase = class PrismaRedisDatabase extends SequencerModule {
    constructor() {
        super();
        this.prisma = new PrismaDatabaseConnection();
        this.redis = new RedisConnectionModule();
    }
    get prismaClient() {
        return this.prisma.prismaClient;
    }
    get redisClient() {
        return this.redis.redisClient;
    }
    create(childContainerProvider) {
        super.create(childContainerProvider);
        this.prisma.create(childContainerProvider);
        this.redis.create(childContainerProvider);
    }
    dependencies() {
        return {
            ...this.prisma.dependencies(),
            ...this.redis.dependencies(),
        };
    }
    async start() {
        this.prisma.config = this.config.prisma;
        await this.prisma.start();
        this.redis.config = this.config.redis;
        await this.redis.start();
    }
    async close() {
        await this.prisma.close();
        await this.redis.close();
    }
    async pruneDatabase() {
        await this.prisma.pruneDatabase();
        await this.redis.pruneDatabase();
    }
};
PrismaRedisDatabase = __decorate([
    sequencerModule(),
    __metadata("design:paramtypes", [])
], PrismaRedisDatabase);
