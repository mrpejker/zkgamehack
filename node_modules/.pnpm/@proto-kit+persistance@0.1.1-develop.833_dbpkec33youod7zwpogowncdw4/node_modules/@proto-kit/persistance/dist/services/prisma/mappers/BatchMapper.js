var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { singleton } from "tsyringe";
export let BatchMapper = class BatchMapper {
    mapIn(input) {
        return {
            bundles: input[1],
            proof: input[0].proof,
            height: input[0].height,
        };
    }
    mapOut(input) {
        const batch = {
            proof: input.proof,
            height: input.height,
            settlementTransactionHash: null,
        };
        return [batch, []];
    }
};
BatchMapper = __decorate([
    singleton()
], BatchMapper);
