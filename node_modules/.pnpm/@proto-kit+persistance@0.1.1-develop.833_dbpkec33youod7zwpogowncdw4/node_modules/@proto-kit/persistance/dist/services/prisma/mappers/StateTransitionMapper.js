var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { singleton } from "tsyringe";
import { UntypedStateTransition } from "@proto-kit/sequencer";
export let StateTransitionMapper = class StateTransitionMapper {
    mapIn(input) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
        return UntypedStateTransition.fromJSON(input);
    }
    mapOut(input) {
        return input.toJSON();
    }
};
StateTransitionMapper = __decorate([
    singleton()
], StateTransitionMapper);
export let StateTransitionArrayMapper = class StateTransitionArrayMapper {
    constructor(stMapper) {
        this.stMapper = stMapper;
    }
    mapIn(input) {
        if (input === undefined)
            return [];
        if (Array.isArray(input)) {
            return input.map((stJson) => this.stMapper.mapIn(stJson));
        }
        return [];
    }
    mapOut(input) {
        return input.map((st) => this.stMapper.mapOut(st));
    }
};
StateTransitionArrayMapper = __decorate([
    singleton(),
    __metadata("design:paramtypes", [StateTransitionMapper])
], StateTransitionArrayMapper);
