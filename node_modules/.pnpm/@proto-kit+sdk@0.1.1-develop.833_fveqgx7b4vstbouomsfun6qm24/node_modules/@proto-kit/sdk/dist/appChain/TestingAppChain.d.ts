import { RuntimeModulesRecord } from "@proto-kit/module";
import { MandatoryProtocolModulesRecord, ProtocolModulesRecord } from "@proto-kit/protocol";
import { VanillaRuntimeModulesRecord, MinimalBalances } from "@proto-kit/library";
import { PrivateMempool, LocalTaskWorkerModule, NoopBaseLayer, BatchProducerModule, ManualBlockTrigger, LocalTaskQueue, BlockProducerModule, InMemoryDatabase, SequencerModulesRecord } from "@proto-kit/sequencer";
import { TypedClass } from "@proto-kit/common";
import { PrivateKey } from "o1js";
import { StateServiceQueryModule } from "../query/StateServiceQueryModule";
import { InMemorySigner } from "../transaction/InMemorySigner";
import { InMemoryTransactionSender } from "../transaction/InMemoryTransactionSender";
import { BlockStorageNetworkStateModule } from "../query/BlockStorageNetworkStateModule";
import { AppChain, AppChainModulesRecord } from "./AppChain";
export type TestingSequencerModulesRecord = {
    Database: typeof InMemoryDatabase;
    Mempool: typeof PrivateMempool;
    LocalTaskWorkerModule: typeof LocalTaskWorkerModule;
    BaseLayer: typeof NoopBaseLayer;
    BatchProducerModule: typeof BatchProducerModule;
    BlockProducerModule: typeof BlockProducerModule;
    BlockTrigger: typeof ManualBlockTrigger;
    TaskQueue: typeof LocalTaskQueue;
};
export type PartialVanillaRuntimeModulesRecord = {
    Balances?: TypedClass<MinimalBalances>;
};
export declare const randomFeeRecipient: string;
export declare class TestingAppChain<RuntimeModules extends RuntimeModulesRecord & VanillaRuntimeModulesRecord, ProtocolModules extends ProtocolModulesRecord & MandatoryProtocolModulesRecord, SequencerModules extends SequencerModulesRecord, AppChainModules extends AppChainModulesRecord> extends AppChain<RuntimeModules, ProtocolModules, SequencerModules, AppChainModules> {
    static fromRuntime<RuntimeModules extends RuntimeModulesRecord & PartialVanillaRuntimeModulesRecord>(runtimeModules: RuntimeModules): TestingAppChain<{
        Balances: typeof import("@proto-kit/library").Balances;
    } & RuntimeModules, MandatoryProtocolModulesRecord & {
        TransactionFee: typeof import("@proto-kit/library").TransactionFeeHook;
    }, {
        Database: typeof InMemoryDatabase;
        Mempool: typeof PrivateMempool;
        LocalTaskWorkerModule: TypedClass<LocalTaskWorkerModule<{
            StateTransitionTask: typeof import("@proto-kit/sequencer").StateTransitionTask;
            StateTransitionReductionTask: typeof import("@proto-kit/sequencer").StateTransitionReductionTask;
            RuntimeProvingTask: typeof import("@proto-kit/sequencer").RuntimeProvingTask;
            BlockProvingTask: typeof import("@proto-kit/sequencer").BlockProvingTask;
            BlockReductionTask: typeof import("@proto-kit/sequencer").BlockReductionTask;
            BlockBuildingTask: typeof import("@proto-kit/sequencer").NewBlockTask;
        }>>;
        BaseLayer: typeof NoopBaseLayer;
        BatchProducerModule: typeof BatchProducerModule;
        BlockProducerModule: typeof BlockProducerModule;
        BlockTrigger: typeof ManualBlockTrigger;
        TaskQueue: typeof LocalTaskQueue;
    }, {
        Signer: typeof InMemorySigner;
        TransactionSender: typeof InMemoryTransactionSender;
        QueryTransportModule: typeof StateServiceQueryModule;
        NetworkStateTransportModule: typeof BlockStorageNetworkStateModule;
    }>;
    setSigner(signer: PrivateKey): void;
    produceBlock(): Promise<import("@proto-kit/sequencer").Block | undefined>;
}
//# sourceMappingURL=TestingAppChain.d.ts.map