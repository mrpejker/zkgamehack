export interface Startable {
    start(): Promise<void>;
}
export type StartableEnvironment<T> = Record<string, T>;
export declare class Environment<T extends Startable> {
    private readonly configurations;
    constructor(configurations: StartableEnvironment<T>);
    hasConfiguration(configurationName: string): configurationName is keyof StartableEnvironment<T>;
    private assertConfigurationProvided;
    getConfiguration(configurationName: string): T;
    static from<T extends Startable>(configurations: StartableEnvironment<T>): Environment<T>;
    start(): Promise<void>;
}
//# sourceMappingURL=Environment.d.ts.map