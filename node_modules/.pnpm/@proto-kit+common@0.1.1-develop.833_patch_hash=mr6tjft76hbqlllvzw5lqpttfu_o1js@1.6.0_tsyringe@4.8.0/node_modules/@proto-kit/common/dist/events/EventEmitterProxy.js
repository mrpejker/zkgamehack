import { EventEmitter } from "./EventEmitter";
export class EventEmitterProxy extends EventEmitter {
    constructor(container) {
        super();
        this.container = container;
        container.moduleNames.forEach((moduleName) => {
            if (container.isValidModuleName(container.definition.modules, moduleName)) {
                const module = container.resolve(moduleName);
                if (this.isEventEmitter(module)) {
                    module.events.onAll((events, args) => {
                        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument
                        this.emit(events, ...args);
                    });
                }
            }
        });
    }
    isEventEmitter(module) {
        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment
        const emitter = module.events;
        return emitter !== undefined && emitter instanceof EventEmitter;
    }
}
