import { EventsRecord } from "./EventEmittingComponent";
export declare class EventEmitter<Events extends EventsRecord> {
    private readonly listeners;
    private readonly wildcardListeners;
    emit<Key extends keyof Events>(event: Key, ...parameters: Events[Key]): void;
    onAll(listener: (event: keyof Events, args: unknown[]) => void): void;
    on<Key extends keyof Events>(event: Key, listener: (...args: Events[Key]) => void): void;
    /**
     * Primitive .off() with identity comparison for now.
     * Could be replaced by returning an id in .on() and using that.
     */
    off<Key extends keyof Events>(event: Key, listener: (...args: Events[Key]) => void): void;
}
//# sourceMappingURL=EventEmitter.d.ts.map