import { Field, FlexibleProvable, ProvableExtended } from "o1js";
import { ArgumentTypes } from "@proto-kit/common";
import type { RuntimeModule } from "../runtime/RuntimeModule";
export declare class MethodParameterEncoder {
    private readonly types;
    static fromMethod(target: RuntimeModule<unknown>, methodName: string): MethodParameterEncoder;
    static fieldSize(type: ProvableExtended<unknown>): number | undefined;
    private constructor();
    decode(argsJSON: string[]): FlexibleProvable<unknown>[];
    decodeFields(fields: Field[]): ArgumentTypes;
    /**
     * Variant of encode() for provable code that skips the unprovable
     * json encoding
     */
    encodeAsFields(args: ArgumentTypes): import("o1js/dist/node/lib/provable/field").Field[];
    encode(args: ArgumentTypes): {
        argsFields: Field[];
        argsJSON: string[];
    };
    get fieldSize(): number;
}
//# sourceMappingURL=MethodParameterEncoder.d.ts.map