import { Field, Proof, DynamicProof, FlexibleProvablePure } from "o1js";
import { ArgumentTypes } from "@proto-kit/common";
import type { RuntimeModule } from "../runtime/RuntimeModule";
type ArgumentType = FlexibleProvablePure<any> | typeof Proof<unknown, unknown> | typeof DynamicProof<unknown, unknown>;
type ArgTypeArray = ArgumentType[];
type ArgArray = ArgumentTypes[];
export declare class MethodParameterEncoder {
    private readonly types;
    static fromMethod(target: RuntimeModule<unknown>, methodName: string): MethodParameterEncoder;
    static fieldSize(type: ArgumentType): number | undefined;
    constructor(types: ArgTypeArray);
    decode(fields: Field[], auxiliary: string[]): Promise<ArgArray>;
    /**
     * Variant of encode() for provable code that skips the unprovable
     * json encoding
     */
    encode(args: ArgumentTypes): {
        fields: Field[];
        auxiliary: string[];
    };
    fieldSize(): number;
}
export {};
//# sourceMappingURL=MethodParameterEncoder.d.ts.map