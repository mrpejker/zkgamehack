var Mn=Object.create;var g0=Object.defineProperty;var _n=Object.getOwnPropertyDescriptor;var On=Object.getOwnPropertyNames;var Kn=Object.getPrototypeOf,zn=Object.prototype.hasOwnProperty;var Te=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var Vn=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of On(t))!zn.call(e,i)&&i!==n&&g0(e,i,{get:()=>t[i],enumerable:!(r=_n(t,i))||r.enumerable});return e};var It=(e,t,n)=>(n=e!=null?Mn(Kn(e)):{},Vn(t||!e||!e.__esModule?g0(n,"default",{value:e,enumerable:!0}):n,e));var V0=Te((exports,module)=>{(function(){"use strict";var ERROR="input is invalid type",WINDOW=typeof window=="object",root=WINDOW?window:{};root.JS_SHA256_NO_WINDOW&&(WINDOW=!1);var WEB_WORKER=!WINDOW&&typeof self=="object",NODE_JS=!root.JS_SHA256_NO_NODE_JS&&typeof process=="object"&&process.versions&&process.versions.node;NODE_JS?root=global:WEB_WORKER&&(root=self);var COMMON_JS=!root.JS_SHA256_NO_COMMON_JS&&typeof module=="object"&&module.exports,AMD=typeof define=="function"&&define.amd,ARRAY_BUFFER=!root.JS_SHA256_NO_ARRAY_BUFFER&&typeof ArrayBuffer<"u",HEX_CHARS="0123456789abcdef".split(""),EXTRA=[-2147483648,8388608,32768,128],SHIFT=[24,16,8,0],K=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],OUTPUT_TYPES=["hex","array","digest","arrayBuffer"],blocks=[];(root.JS_SHA256_NO_NODE_JS||!Array.isArray)&&(Array.isArray=function(e){return Object.prototype.toString.call(e)==="[object Array]"}),ARRAY_BUFFER&&(root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW||!ArrayBuffer.isView)&&(ArrayBuffer.isView=function(e){return typeof e=="object"&&e.buffer&&e.buffer.constructor===ArrayBuffer});var createOutputMethod=function(e,t){return function(n){return new Sha256(t,!0).update(n)[e]()}},createMethod=function(e){var t=createOutputMethod("hex",e);NODE_JS&&(t=nodeWrap(t,e)),t.create=function(){return new Sha256(e)},t.update=function(i){return t.create().update(i)};for(var n=0;n<OUTPUT_TYPES.length;++n){var r=OUTPUT_TYPES[n];t[r]=createOutputMethod(r,e)}return t},nodeWrap=function(method,is224){var crypto=eval("require('crypto')"),Buffer=eval("require('buffer').Buffer"),algorithm=is224?"sha224":"sha256",nodeMethod=function(e){if(typeof e=="string")return crypto.createHash(algorithm).update(e,"utf8").digest("hex");if(e==null)throw new Error(ERROR);return e.constructor===ArrayBuffer&&(e=new Uint8Array(e)),Array.isArray(e)||ArrayBuffer.isView(e)||e.constructor===Buffer?crypto.createHash(algorithm).update(new Buffer(e)).digest("hex"):method(e)};return nodeMethod},createHmacOutputMethod=function(e,t){return function(n,r){return new HmacSha256(n,t,!0).update(r)[e]()}},createHmacMethod=function(e){var t=createHmacOutputMethod("hex",e);t.create=function(i){return new HmacSha256(i,e)},t.update=function(i,o){return t.create(i).update(o)};for(var n=0;n<OUTPUT_TYPES.length;++n){var r=OUTPUT_TYPES[n];t[r]=createHmacOutputMethod(r,e)}return t};function Sha256(e,t){t?(blocks[0]=blocks[16]=blocks[1]=blocks[2]=blocks[3]=blocks[4]=blocks[5]=blocks[6]=blocks[7]=blocks[8]=blocks[9]=blocks[10]=blocks[11]=blocks[12]=blocks[13]=blocks[14]=blocks[15]=0,this.blocks=blocks):this.blocks=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],e?(this.h0=3238371032,this.h1=914150663,this.h2=812702999,this.h3=4144912697,this.h4=4290775857,this.h5=1750603025,this.h6=1694076839,this.h7=3204075428):(this.h0=1779033703,this.h1=3144134277,this.h2=1013904242,this.h3=2773480762,this.h4=1359893119,this.h5=2600822924,this.h6=528734635,this.h7=1541459225),this.block=this.start=this.bytes=this.hBytes=0,this.finalized=this.hashed=!1,this.first=!0,this.is224=e}Sha256.prototype.update=function(e){if(!this.finalized){var t,n=typeof e;if(n!=="string"){if(n==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);t=!0}for(var r,i=0,o,l=e.length,s=this.blocks;i<l;){if(this.hashed&&(this.hashed=!1,s[0]=this.block,s[16]=s[1]=s[2]=s[3]=s[4]=s[5]=s[6]=s[7]=s[8]=s[9]=s[10]=s[11]=s[12]=s[13]=s[14]=s[15]=0),t)for(o=this.start;i<l&&o<64;++i)s[o>>2]|=e[i]<<SHIFT[o++&3];else for(o=this.start;i<l&&o<64;++i)r=e.charCodeAt(i),r<128?s[o>>2]|=r<<SHIFT[o++&3]:r<2048?(s[o>>2]|=(192|r>>6)<<SHIFT[o++&3],s[o>>2]|=(128|r&63)<<SHIFT[o++&3]):r<55296||r>=57344?(s[o>>2]|=(224|r>>12)<<SHIFT[o++&3],s[o>>2]|=(128|r>>6&63)<<SHIFT[o++&3],s[o>>2]|=(128|r&63)<<SHIFT[o++&3]):(r=65536+((r&1023)<<10|e.charCodeAt(++i)&1023),s[o>>2]|=(240|r>>18)<<SHIFT[o++&3],s[o>>2]|=(128|r>>12&63)<<SHIFT[o++&3],s[o>>2]|=(128|r>>6&63)<<SHIFT[o++&3],s[o>>2]|=(128|r&63)<<SHIFT[o++&3]);this.lastByteIndex=o,this.bytes+=o-this.start,o>=64?(this.block=s[16],this.start=o-64,this.hash(),this.hashed=!0):this.start=o}return this.bytes>4294967295&&(this.hBytes+=this.bytes/4294967296<<0,this.bytes=this.bytes%4294967296),this}},Sha256.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex;e[16]=this.block,e[t>>2]|=EXTRA[t&3],this.block=e[16],t>=56&&(this.hashed||this.hash(),e[0]=this.block,e[16]=e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=e[7]=e[8]=e[9]=e[10]=e[11]=e[12]=e[13]=e[14]=e[15]=0),e[14]=this.hBytes<<3|this.bytes>>>29,e[15]=this.bytes<<3,this.hash()}},Sha256.prototype.hash=function(){var e=this.h0,t=this.h1,n=this.h2,r=this.h3,i=this.h4,o=this.h5,l=this.h6,s=this.h7,u=this.blocks,p,a,c,d,f,y,h,b,m,S,B;for(p=16;p<64;++p)f=u[p-15],a=(f>>>7|f<<25)^(f>>>18|f<<14)^f>>>3,f=u[p-2],c=(f>>>17|f<<15)^(f>>>19|f<<13)^f>>>10,u[p]=u[p-16]+a+u[p-7]+c<<0;for(B=t&n,p=0;p<64;p+=4)this.first?(this.is224?(b=300032,f=u[0]-1413257819,s=f-150054599<<0,r=f+24177077<<0):(b=704751109,f=u[0]-210244248,s=f-1521486534<<0,r=f+143694565<<0),this.first=!1):(a=(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10),c=(i>>>6|i<<26)^(i>>>11|i<<21)^(i>>>25|i<<7),b=e&t,d=b^e&n^B,h=i&o^~i&l,f=s+c+h+K[p]+u[p],y=a+d,s=r+f<<0,r=f+y<<0),a=(r>>>2|r<<30)^(r>>>13|r<<19)^(r>>>22|r<<10),c=(s>>>6|s<<26)^(s>>>11|s<<21)^(s>>>25|s<<7),m=r&e,d=m^r&t^b,h=s&i^~s&o,f=l+c+h+K[p+1]+u[p+1],y=a+d,l=n+f<<0,n=f+y<<0,a=(n>>>2|n<<30)^(n>>>13|n<<19)^(n>>>22|n<<10),c=(l>>>6|l<<26)^(l>>>11|l<<21)^(l>>>25|l<<7),S=n&r,d=S^n&e^m,h=l&s^~l&i,f=o+c+h+K[p+2]+u[p+2],y=a+d,o=t+f<<0,t=f+y<<0,a=(t>>>2|t<<30)^(t>>>13|t<<19)^(t>>>22|t<<10),c=(o>>>6|o<<26)^(o>>>11|o<<21)^(o>>>25|o<<7),B=t&n,d=B^t&r^S,h=o&l^~o&s,f=i+c+h+K[p+3]+u[p+3],y=a+d,i=e+f<<0,e=f+y<<0;this.h0=this.h0+e<<0,this.h1=this.h1+t<<0,this.h2=this.h2+n<<0,this.h3=this.h3+r<<0,this.h4=this.h4+i<<0,this.h5=this.h5+o<<0,this.h6=this.h6+l<<0,this.h7=this.h7+s<<0},Sha256.prototype.hex=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3,i=this.h4,o=this.h5,l=this.h6,s=this.h7,u=HEX_CHARS[e>>28&15]+HEX_CHARS[e>>24&15]+HEX_CHARS[e>>20&15]+HEX_CHARS[e>>16&15]+HEX_CHARS[e>>12&15]+HEX_CHARS[e>>8&15]+HEX_CHARS[e>>4&15]+HEX_CHARS[e&15]+HEX_CHARS[t>>28&15]+HEX_CHARS[t>>24&15]+HEX_CHARS[t>>20&15]+HEX_CHARS[t>>16&15]+HEX_CHARS[t>>12&15]+HEX_CHARS[t>>8&15]+HEX_CHARS[t>>4&15]+HEX_CHARS[t&15]+HEX_CHARS[n>>28&15]+HEX_CHARS[n>>24&15]+HEX_CHARS[n>>20&15]+HEX_CHARS[n>>16&15]+HEX_CHARS[n>>12&15]+HEX_CHARS[n>>8&15]+HEX_CHARS[n>>4&15]+HEX_CHARS[n&15]+HEX_CHARS[r>>28&15]+HEX_CHARS[r>>24&15]+HEX_CHARS[r>>20&15]+HEX_CHARS[r>>16&15]+HEX_CHARS[r>>12&15]+HEX_CHARS[r>>8&15]+HEX_CHARS[r>>4&15]+HEX_CHARS[r&15]+HEX_CHARS[i>>28&15]+HEX_CHARS[i>>24&15]+HEX_CHARS[i>>20&15]+HEX_CHARS[i>>16&15]+HEX_CHARS[i>>12&15]+HEX_CHARS[i>>8&15]+HEX_CHARS[i>>4&15]+HEX_CHARS[i&15]+HEX_CHARS[o>>28&15]+HEX_CHARS[o>>24&15]+HEX_CHARS[o>>20&15]+HEX_CHARS[o>>16&15]+HEX_CHARS[o>>12&15]+HEX_CHARS[o>>8&15]+HEX_CHARS[o>>4&15]+HEX_CHARS[o&15]+HEX_CHARS[l>>28&15]+HEX_CHARS[l>>24&15]+HEX_CHARS[l>>20&15]+HEX_CHARS[l>>16&15]+HEX_CHARS[l>>12&15]+HEX_CHARS[l>>8&15]+HEX_CHARS[l>>4&15]+HEX_CHARS[l&15];return this.is224||(u+=HEX_CHARS[s>>28&15]+HEX_CHARS[s>>24&15]+HEX_CHARS[s>>20&15]+HEX_CHARS[s>>16&15]+HEX_CHARS[s>>12&15]+HEX_CHARS[s>>8&15]+HEX_CHARS[s>>4&15]+HEX_CHARS[s&15]),u},Sha256.prototype.toString=Sha256.prototype.hex,Sha256.prototype.digest=function(){this.finalize();var e=this.h0,t=this.h1,n=this.h2,r=this.h3,i=this.h4,o=this.h5,l=this.h6,s=this.h7,u=[e>>24&255,e>>16&255,e>>8&255,e&255,t>>24&255,t>>16&255,t>>8&255,t&255,n>>24&255,n>>16&255,n>>8&255,n&255,r>>24&255,r>>16&255,r>>8&255,r&255,i>>24&255,i>>16&255,i>>8&255,i&255,o>>24&255,o>>16&255,o>>8&255,o&255,l>>24&255,l>>16&255,l>>8&255,l&255];return this.is224||u.push(s>>24&255,s>>16&255,s>>8&255,s&255),u},Sha256.prototype.array=Sha256.prototype.digest,Sha256.prototype.arrayBuffer=function(){this.finalize();var e=new ArrayBuffer(this.is224?28:32),t=new DataView(e);return t.setUint32(0,this.h0),t.setUint32(4,this.h1),t.setUint32(8,this.h2),t.setUint32(12,this.h3),t.setUint32(16,this.h4),t.setUint32(20,this.h5),t.setUint32(24,this.h6),this.is224||t.setUint32(28,this.h7),e};function HmacSha256(e,t,n){var r,i=typeof e;if(i==="string"){var o=[],l=e.length,s=0,u;for(r=0;r<l;++r)u=e.charCodeAt(r),u<128?o[s++]=u:u<2048?(o[s++]=192|u>>6,o[s++]=128|u&63):u<55296||u>=57344?(o[s++]=224|u>>12,o[s++]=128|u>>6&63,o[s++]=128|u&63):(u=65536+((u&1023)<<10|e.charCodeAt(++r)&1023),o[s++]=240|u>>18,o[s++]=128|u>>12&63,o[s++]=128|u>>6&63,o[s++]=128|u&63);e=o}else if(i==="object"){if(e===null)throw new Error(ERROR);if(ARRAY_BUFFER&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!ARRAY_BUFFER||!ArrayBuffer.isView(e)))throw new Error(ERROR)}else throw new Error(ERROR);e.length>64&&(e=new Sha256(t,!0).update(e).array());var p=[],a=[];for(r=0;r<64;++r){var c=e[r]||0;p[r]=92^c,a[r]=54^c}Sha256.call(this,t,n),this.update(a),this.oKeyPad=p,this.inner=!0,this.sharedMemory=n}HmacSha256.prototype=new Sha256,HmacSha256.prototype.finalize=function(){if(Sha256.prototype.finalize.call(this),this.inner){this.inner=!1;var e=this.array();Sha256.call(this,this.is224,this.sharedMemory),this.update(this.oKeyPad),this.update(e),Sha256.prototype.finalize.call(this)}};var exports=createMethod();exports.sha256=exports,exports.sha224=createMethod(!0),exports.sha256.hmac=createHmacMethod(),exports.sha224.hmac=createHmacMethod(!0),COMMON_JS?module.exports=exports:(root.sha256=exports.sha256,root.sha224=exports.sha224,AMD&&define(function(){return exports}))})()});var Qt=Te((M6,I1)=>{var W2="Input must be an string, Buffer or Uint8Array";function j2(e){let t;if(e instanceof Uint8Array)t=e;else if(typeof e=="string")t=new TextEncoder().encode(e);else throw new Error(W2);return t}function Y2(e){return Array.prototype.map.call(e,function(t){return(t<16?"0":"")+t.toString(16)}).join("")}function yt(e){return(4294967296+e).toString(16).substring(1)}function Q2(e,t,n){let r=`
`+e+" = ";for(let i=0;i<t.length;i+=2){if(n===32)r+=yt(t[i]).toUpperCase(),r+=" ",r+=yt(t[i+1]).toUpperCase();else if(n===64)r+=yt(t[i+1]).toUpperCase(),r+=yt(t[i]).toUpperCase();else throw new Error("Invalid size "+n);i%6===4?r+=`
`+new Array(e.length+4).join(" "):i<t.length-2&&(r+=" ")}console.log(r)}function e3(e,t,n){let r=new Date().getTime(),i=new Uint8Array(t);for(let l=0;l<t;l++)i[l]=l%256;let o=new Date().getTime();console.log("Generated random input in "+(o-r)+"ms"),r=o;for(let l=0;l<n;l++){let s=e(i),u=new Date().getTime(),p=u-r;r=u,console.log("Hashed in "+p+"ms: "+s.substring(0,20)+"..."),console.log(Math.round(t/(1<<20)/(p/1e3)*100)/100+" MB PER SECOND")}}I1.exports={normalizeInput:j2,toHex:Y2,debugPrint:Q2,testSpeed:e3}});var M1=Te((_6,R1)=>{var gt=Qt();function ht(e,t,n){let r=e[t]+e[n],i=e[t+1]+e[n+1];r>=4294967296&&i++,e[t]=r,e[t+1]=i}function F1(e,t,n,r){let i=e[t]+n;n<0&&(i+=4294967296);let o=e[t+1]+r;i>=4294967296&&o++,e[t]=i,e[t+1]=o}function T1(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function oe(e,t,n,r,i,o){let l=qe[i],s=qe[i+1],u=qe[o],p=qe[o+1];ht(E,e,t),F1(E,e,l,s);let a=E[r]^E[e],c=E[r+1]^E[e+1];E[r]=c,E[r+1]=a,ht(E,n,r),a=E[t]^E[n],c=E[t+1]^E[n+1],E[t]=a>>>24^c<<8,E[t+1]=c>>>24^a<<8,ht(E,e,t),F1(E,e,u,p),a=E[r]^E[e],c=E[r+1]^E[e+1],E[r]=a>>>16^c<<16,E[r+1]=c>>>16^a<<16,ht(E,n,r),a=E[t]^E[n],c=E[t+1]^E[n+1],E[t]=c>>>31^a<<1,E[t+1]=a>>>31^c<<1}var U1=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),t3=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3],O=new Uint8Array(t3.map(function(e){return e*2})),E=new Uint32Array(32),qe=new Uint32Array(32);function P1(e,t){let n=0;for(n=0;n<16;n++)E[n]=e.h[n],E[n+16]=U1[n];for(E[24]=E[24]^e.t,E[25]=E[25]^e.t/4294967296,t&&(E[28]=~E[28],E[29]=~E[29]),n=0;n<32;n++)qe[n]=T1(e.b,4*n);for(n=0;n<12;n++)oe(0,8,16,24,O[n*16+0],O[n*16+1]),oe(2,10,18,26,O[n*16+2],O[n*16+3]),oe(4,12,20,28,O[n*16+4],O[n*16+5]),oe(6,14,22,30,O[n*16+6],O[n*16+7]),oe(0,10,20,30,O[n*16+8],O[n*16+9]),oe(2,12,22,24,O[n*16+10],O[n*16+11]),oe(4,14,16,26,O[n*16+12],O[n*16+13]),oe(6,8,18,28,O[n*16+14],O[n*16+15]);for(n=0;n<16;n++)e.h[n]=e.h[n]^E[n]^E[n+16]}var ae=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function C1(e,t,n,r){if(e===0||e>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(t&&t.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(n&&n.length!==16)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(r&&r.length!==16)throw new Error("Illegal personal, expected Uint8Array with length is 16");let i={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:e};ae.fill(0),ae[0]=e,t&&(ae[1]=t.length),ae[2]=1,ae[3]=1,n&&ae.set(n,32),r&&ae.set(r,48);for(let o=0;o<16;o++)i.h[o]=U1[o]^T1(ae,o*4);return t&&(e0(i,t),i.c=128),i}function e0(e,t){for(let n=0;n<t.length;n++)e.c===128&&(e.t+=e.c,P1(e,!1),e.c=0),e.b[e.c++]=t[n]}function H1(e){for(e.t+=e.c;e.c<128;)e.b[e.c++]=0;P1(e,!0);let t=new Uint8Array(e.outlen);for(let n=0;n<e.outlen;n++)t[n]=e.h[n>>2]>>8*(n&3);return t}function N1(e,t,n,r,i){n=n||64,e=gt.normalizeInput(e),r&&(r=gt.normalizeInput(r)),i&&(i=gt.normalizeInput(i));let o=C1(n,t,r,i);return e0(o,e),H1(o)}function n3(e,t,n,r,i){let o=N1(e,t,n,r,i);return gt.toHex(o)}R1.exports={blake2b:N1,blake2bHex:n3,blake2bInit:C1,blake2bUpdate:e0,blake2bFinal:H1}});var D1=Te((O6,L1)=>{var _1=Qt();function r3(e,t){return e[t]^e[t+1]<<8^e[t+2]<<16^e[t+3]<<24}function le(e,t,n,r,i,o){w[e]=w[e]+w[t]+i,w[r]=bt(w[r]^w[e],16),w[n]=w[n]+w[r],w[t]=bt(w[t]^w[n],12),w[e]=w[e]+w[t]+o,w[r]=bt(w[r]^w[e],8),w[n]=w[n]+w[r],w[t]=bt(w[t]^w[n],7)}function bt(e,t){return e>>>t^e<<32-t}var O1=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),z=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),w=new Uint32Array(16),_=new Uint32Array(16);function K1(e,t){let n=0;for(n=0;n<8;n++)w[n]=e.h[n],w[n+8]=O1[n];for(w[12]^=e.t,w[13]^=e.t/4294967296,t&&(w[14]=~w[14]),n=0;n<16;n++)_[n]=r3(e.b,4*n);for(n=0;n<10;n++)le(0,4,8,12,_[z[n*16+0]],_[z[n*16+1]]),le(1,5,9,13,_[z[n*16+2]],_[z[n*16+3]]),le(2,6,10,14,_[z[n*16+4]],_[z[n*16+5]]),le(3,7,11,15,_[z[n*16+6]],_[z[n*16+7]]),le(0,5,10,15,_[z[n*16+8]],_[z[n*16+9]]),le(1,6,11,12,_[z[n*16+10]],_[z[n*16+11]]),le(2,7,8,13,_[z[n*16+12]],_[z[n*16+13]]),le(3,4,9,14,_[z[n*16+14]],_[z[n*16+15]]);for(n=0;n<8;n++)e.h[n]^=w[n]^w[n+8]}function z1(e,t){if(!(e>0&&e<=32))throw new Error("Incorrect output length, should be in [1, 32]");let n=t?t.length:0;if(t&&!(n>0&&n<=32))throw new Error("Incorrect key length, should be in [1, 32]");let r={h:new Uint32Array(O1),b:new Uint8Array(64),c:0,t:0,outlen:e};return r.h[0]^=16842752^n<<8^e,n>0&&(t0(r,t),r.c=64),r}function t0(e,t){for(let n=0;n<t.length;n++)e.c===64&&(e.t+=e.c,K1(e,!1),e.c=0),e.b[e.c++]=t[n]}function V1(e){for(e.t+=e.c;e.c<64;)e.b[e.c++]=0;K1(e,!0);let t=new Uint8Array(e.outlen);for(let n=0;n<e.outlen;n++)t[n]=e.h[n>>2]>>8*(n&3)&255;return t}function J1(e,t,n){n=n||32,e=_1.normalizeInput(e);let r=z1(n,t);return t0(r,e),V1(r)}function i3(e,t,n){let r=J1(e,t,n);return _1.toHex(r)}L1.exports={blake2s:J1,blake2sHex:i3,blake2sInit:z1,blake2sUpdate:t0,blake2sFinal:V1}});var n0=Te((K6,q1)=>{var Ze=M1(),Xe=D1();q1.exports={blake2b:Ze.blake2b,blake2bHex:Ze.blake2bHex,blake2bInit:Ze.blake2bInit,blake2bUpdate:Ze.blake2bUpdate,blake2bFinal:Ze.blake2bFinal,blake2s:Xe.blake2s,blake2sHex:Xe.blake2sHex,blake2sInit:Xe.blake2sInit,blake2sUpdate:Xe.blake2sUpdate,blake2sFinal:Xe.blake2sFinal}});function Ft(e,t){if(!e)throw Error(t??"Assertion failed")}var q3=(1n<<64n)-1n;function je(e){let t=0n,n=0n;for(let r of e)t+=BigInt(r)<<n,n+=8n;return t}var Jn={};for(let e=0;e<16;e++)Jn[e.toString(16).charCodeAt(0)]=e;var Z3=new TextEncoder,X3=new Uint8Array(64);function $(e,t){if(e<0n)throw Error(`bigIntToBytes: negative numbers are not supported, got ${e}`);if(t===void 0)return Ln(e);let n=Array(t);for(let r=0;r<t;r++,e>>=8n)n[r]=Number(e&0xffn);if(e>0n)throw Error(`bigIntToBytes: input does not fit in ${t} bytes`);return n}function Ln(e){let t=[];for(;e>0n;e>>=8n)t.push(Number(e&0xffn));return t}function Ue(e){if(e<0n)throw Error(`bigIntToBits: negative numbers are not supported, got ${e}`);let t=[];for(;e>0n;e>>=1n){let n=!!(e&1n);t.push(n)}return t}function Tt(e,t,n){let r=Dn(e,t);return qn(r,n)}function Dn(e,t){if(t<=0n)throw Error("fromBase: base must be positive");let n=[];for(let o=t,l=1;l<e.length;o**=2n,l*=2)n.push(o);let r=n.length;e=e.concat(Array(2**r-e.length).fill(0n));for(let o=0;o<r;o++){let l=Array(e.length>>1),s=n[o];for(let u=0;u<l.length;u++)l[u]=e[2*u]+s*e[2*u+1];e=l}console.assert(e.length===1);let[i]=e;return i}function qn(e,t){if(t<=0n)throw Error("toBase: base must be positive");let n=[];for(let o=t;o<e;o**=2n)n.push(o);let r=[e],i=n.length;for(let o=0;o<i;o++){let l=Array(2*r.length),s=n[i-1-o];for(let u=0;u<r.length;u++){let p=r[u],a=p/s;l[2*u+1]=a,l[2*u]=p-a*s}r=l}for(;r[r.length-1]===0n;)r.pop();return r}function Se(e){return typeof e=="number"&&(e=BigInt(e)),e===1n?0:(e-1n).toString(2).length}function Ye(e,t){return e>t?e:t}function G(e){return e<0n?-e:e}function Ut(e){return e>=0?1n:-1n}function Qe(e){return crypto.getRandomValues(new Uint8Array(e))}var Ce=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000001n,He=0x40000000000000000000000000000000224698fc0994a8dd8c46eb2100000001n,Zn=0x40000000000000000000000000000000224698fc094cf91b992d30edn,Xn=0x40000000000000000000000000000000224698fc0994a8dd8c46eb21n,$n=0x2bce74deac30ebda362120830561f81aea322bf2b7bb7584bdad6fabd87ea32fn,Gn=0x2de6a9b8746d3f589e5c4dfd492ae26e9bb97ea3c106f049a70e2c1102b6d05fn;function g(e,t){return e=e%t,e<0?e+t:e}function Pe(e,t,n){e=g(e,n);let r=1n;for(;t>0n;t>>=1n)t&1n&&(r=g(r*e,n)),e=g(e*e,n);return r}function ke(e,t){if(e=g(e,t),e===0n)return;let n=t,r=0n,i=1n,o=1n,l=0n;for(;e!==0n;){let s=n/e,u=g(n,e),p=r-o*s,a=i-l*s;n=e,e=u,r=o,i=l,o=p,l=a}if(n===1n)return g(r,t)}function Wn(e,t,n,r,i){if(e=g(e,t),e===0n)return;let o=31,l=31,s=BigInt(o),u=(1n<<s)-1n,p=t,a=e,c=0n,d=1n,f=0;for(;f<2*n;f++){let h=1,b=0,m=0,S=1,B=Number(p&u),x=Number(a&u),q=Math.max(Se(p),Se(a)),be=BigInt(Math.max(q-l,0)),Z=Number(p>>be),ee=Number(a>>be);for(let h0=0;h0<o;h0++)B&1?x&1?ee<=Z?(Z=Z-ee>>1,B=B-x>>1,h=h+m,b=b+S,m<<=1,S<<=1):(ee=ee-Z>>1,x=x-B>>1,m=h+m,S=b+S,h<<=1,b<<=1):(ee>>=1,x>>=1,h<<=1,b<<=1):(Z>>=1,B>>=1,m<<=1,S<<=1);let re=BigInt(h),ue=BigInt(b),ce=BigInt(m),We=BigInt(S),Cn=p*re-a*ue,Hn=a*We-p*ce;p=Cn>>s,a=Hn>>s,p<0&&(p=-p,re=-re,ue=-ue),a<0&&(a=-a,ce=-ce,We=-We);let Nn=c*re+d*ue,Rn=d*We+c*ce;if(c=Nn,d=Rn,p===0n)break;if(a===0n){Ft(p===1n,"u = 1"),d=g(-c,t);break}}let y=BigInt((f+1)*o);return d=g(d*i,t),d=g(d<<r-y,t),Ft(g(e*d-1n,t)===0n,"mod p"),d}function jn(e,t,n,r,i){if(e===0n)return 0n;let o=Pe(e,n-1n>>1n,t),l=g(o*e,t);for(o=g(o*l,t);;){if(o===1n)return l;let s=0n,u=o;for(;u!==1n;)u=g(u*u,t),s=s+1n;if(s===i)return;let p=Pe(r,1n<<i-s-1n,t);i=s,r=g(p*p,t),o=g(o*r,t),l=g(l*p,t)}}function b0(e,t){return e===0n?!0:Pe(e,(t-1n)/2n,t)===1n}function Yn(e,t,n){for(;;){let r=Qe(t);r[t-1]&=n;let i=je(r);if(i<e)return i}}var J=Ne(Ce,{oddFactor:Zn,twoadicRoot:$n,twoadicity:32n}),te=Ne(He,{oddFactor:Xn,twoadicRoot:Gn,twoadicity:32n});function Ne(e,t){let{oddFactor:n,twoadicRoot:r,twoadicity:i}=t??Qn(e),o=Se(e),l=Math.ceil(o/8),u=(1<<o-8*(l-1))-1,p=31,a=Math.ceil(o/p),c=BigInt(2*a*p),d=ke(1n<<c,e),f=d!==void 0?y=>Wn(y,e,a,c,d):y=>ke(y,e);return{modulus:e,sizeInBits:o,t:n,M:i,twoadicRoot:r,mod(y){return g(y,e)},add(y,h){return g(y+h,e)},not(y,h){return g(2n**BigInt(h)-(y+1n),e)},negate(y){return y===0n?0n:e-y},sub(y,h){return g(y-h,e)},mul(y,h){return g(y*h,e)},inverse:f,div(y,h){let b=f(h);if(b!==void 0)return g(y*b,e)},square(y){return g(y*y,e)},isSquare(y){return b0(y,e)},sqrt(y){return jn(y,e,n,r,i)},power(y,h){return Pe(y,h,e)},dot(y,h){let b=0n,m=y.length;for(let S=0;S<m;S++)b+=y[S]*h[S];return g(b,e)},equal(y,h){return g(y-h,e)===0n},isEven(y){return!(y&1n)},random(){return Yn(e,l,u)},fromNumber(y){return g(BigInt(y),e)},fromBigint(y){return g(y,e)},rot(y,h,b="left",m=64n){b==="right"&&(h=m-h);let S=y<<h,B=S>>m;return S&(1n<<m)-1n|B},leftShift(y,h,b=64){return y<<BigInt(h)&(1n<<BigInt(b))-1n},rightShift(y,h){return y>>BigInt(h)}}}function Qn(e){let t=e-1n,n=0n;for(;(t&1n)===0n;)t>>=1n,n++;let r=2n;for(;b0(r,e);)r++;let i=Pe(r,t,e);return{oddFactor:t,twoadicRoot:i,twoadicity:n}}function e2(e){return Error(`${e}
This shouldn't have happened and indicates an internal bug.`)}function L(e,t="Failed assertion."){if(!e)throw e2(t)}function v0(e,t,n,r,i,o){if(i===void 0||o===void 0)try{({endoScalar:i,endoBase:o}=r2(t,n,r))}catch(u){console.log(`Warning: no endomorphism for ${e}`,u?.message);return}let l=o,s=i2(n.modulus,i);return{scalar:i,base:o,decomposeMaxBits:s.maxBits,decompose(u){return x0(u,s)},endomorphism(u){return t2(u,l,t.modulus)},scaleProjective(u,p){return S0(u,p,t.modulus,l,s)},scale(u,p){let a=Oe(u),c=S0(a,p,t.modulus,l,s);return et(c,t.modulus)}}}function x0(e,t){let{v00:n,v01:r,v10:i,v11:o,det:l}=t,s=k0(-o*e,l),u=k0(i*e,l),p=n*s+r*u+e,a=i*s+o*u;return[{value:p,isNegative:p<0n,abs:G(p)},{value:a,isNegative:a<0n,abs:G(a)}]}function t2(e,t,n){return{x:g(t*e.x,n),y:e.y}}function n2(e,t,n){return{x:g(t*e.x,n),y:e.y,z:e.z}}function S0(e,t,n,r,i){let o=n2(e,r,n),[l,s]=x0(t,i),u=Ue(l.abs),p=Ue(s.abs);l.isNegative&&(e=Me(e,n)),s.isNegative&&(o=Me(o,n));let a=pe;for(let c=i.maxBits-1;c>=0&&(u[c]&&(a=ve(a,e,n)),p[c]&&(a=ve(a,o,n)),c!==0);c--)a=_e(a,n);return a}function r2(e,t,n){let r=e.modulus,i=t.modulus;L(r%3n===1n,"Base field has a cube root of unity"),L(i%3n===1n,"Scalar field has a cube root of unity");let o=t.sqrt(t.negate(3n));L(o!==void 0,"Scalar field has a square root of -3");let l=t.div(t.sub(o,1n),2n);L(l!==void 0,"Scalar field has a cube root of unity"),L(t.power(l,3n)===1n,"lambda is a cube root"),L(l!==1n,"lambda is not 1");let s=Re(n,l,r);L(s.y===n.y,"multiplication by lambda is a cheap endomorphism");let u=e.div(s.x,n.x);L(u!==void 0,"Gx is invertible"),L(e.power(u,3n)===1n,"beta is a cube root"),L(u!==1n,"beta is not 1");let p=Re(n,t.random(),r),a=Re(p,l,r);return L(a.x===e.mul(u,p.x),"confirm endomorphism"),L(a.y===p.y,"confirm endomorphism"),{endoScalar:l,endoBase:u}}function i2(e,t){let[[n,r],[i,o]]=o2(t,e),l=n*o-i*r,s=(G(n)+G(r)>>1n)+1n,u=(G(i)+G(o)>>1n)+1n,p=Se(Ye(s,u));return{v00:n,v01:r,v10:i,v11:o,det:l,maxS0:s,maxS1:u,maxBits:p}}function o2(e,t){if(e>t)throw Error("a > p");let[n,r]=[t,e],[i,o]=[1n,0n],[l,s]=[0n,1n];for(;r*r>t;){let h=n/r;[n,r]=[r,n-h*r],[i,o]=[o,i-h*o],[l,s]=[s,l-h*s]}let u=n/r,p=n-u*r,a=l-u*s,[c,d]=[r,-s],[f,y]=Ye(n,G(l))<=Ye(p,G(a))?[n,-l]:[p,-a];return[[c,f],[d,y]]}function k0(e,t){let n=Ut(e)*Ut(t);e=G(e),t=G(t);let r=e/t;return 2n*(e-r*t)>=t&&r++,n*r}var w0={x:1n,y:12418654782883325593414442427049395787963493412651469444558597405572177144507n},a2={x:1n,y:11426906929455361843568202299992114520848200991084027513389447476559454104162n},l2=2942865608506852014473558576493638302197734138389222805617480874486368177743n,A0=20444556541222657078399132219657928148671392403212669005631716460534733845831n,s2=8503465768106391777493614032514048814691664078728891710322960303815233784505n,I0=26005156700822196841419187675678338661165322343552424574062261873906994770353n,Pt=5n,Ct=0n,pe={x:1n,y:1n,z:0n},u2={create:(e,t)=>{let{a:n,b:r}=t.spec;if(n!==0n)throw Error("GroupMap only supports a = 0");function i(u){let p=e.power(u,3n),a=e.add(p,r);if(e.isSquare(a))return{x:u,y:e.sqrt(a)}}function o(u){let{u:p,v:a,y:c}=u;return[a,e.negate(e.add(p,a)),e.add(p,e.square(c))]}function l(u){let p=e.div(u.z,u.y);if(p===void 0)throw Error(`Division undefined! ${u.z}/${u.y}`);let a=e.sub(p,t.u_over_2);return{u:t.u,v:a,y:u.y}}function s(u){let{z:p,y:a}=t.projection_point,c=e.mul(t.conic_c,u),d=e.add(e.mul(c,a),p),f=e.add(e.mul(c,u),1n),y=e.div(d,f);if(y===void 0)throw Error(`Division undefined! ${d}/${f}`);let h=e.mul(2n,y);return{z:e.sub(p,h),y:e.sub(a,e.mul(h,u))}}return{potentialXs:u=>o(l(s(u))),tryDecode:i}}},c2={u:2n,u_over_2:1n,conic_c:3n,projection_point:{z:12196889842669319921865617096620076994180062626450149327690483414064673774441n,y:1n},spec:{a:0n,b:5n}},F0=u2.create(J,c2);function Me({x:e,y:t,z:n},r){return{x:e,y:t===0n?0n:r-t,z:n}}function ve(e,t,n){if(e.z===0n)return t;if(t.z===0n)return e;let r=e.x,i=e.y,o=e.z,l=t.x,s=t.y,u=t.z,p=g(o*o,n),a=g(u*u,n),c=g(r*a,n),d=g(l*p,n),f=g(i*u*a,n),y=g(s*o*p,n),h=g(d-c,n);if(h===0n){if(f===y)return _e(e,n);if(g(f+y,n)===0n)return pe;throw Error("projectiveAdd: invalid point")}let b=g(h*h<<2n,n),m=g(h*b,n),S=2n*(y-f),B=g(c*b,n),x=g(S*S-m-2n*B,n),q=g(S*(B-x)-2n*f*m,n),be=g(((o+u)*(o+u)-p-a)*h,n);return{x,y:q,z:be}}function _e(e,t){if(e.z===0n)return e;let n=e.x,r=e.y,i=e.z;if(r===0n)throw Error("projectiveDouble: unhandled case");let o=g(n*n,t),l=g(r*r,t),s=g(l*l,t),u=g(2n*((n+l)*(n+l)-o-s),t),p=3n*o,a=g(p*p,t),c=g(a-2n*u,t),d=g(p*(u-c)-8n*s,t),f=g(2n*r*i,t);return{x:c,y:d,z:f}}function p2(e,t,n){return ve(e,Me(t,n),n)}function Ht(e,t,n){let r=typeof t=="bigint"?Ue(t):t,i=pe;for(let o of r)o&&(i=ve(i,e,n)),e=_e(e,n);return i}function Oe({x:e,y:t,infinity:n}){return n?pe:{x:e,y:t,z:1n}}function et(e,t){let n=e.z;if(n===0n)return{x:0n,y:0n,infinity:!0};if(n===1n)return{x:e.x,y:e.y,infinity:!1};{let r=ke(n,t),i=g(r*r,t),o=g(e.x*i,t),l=g(e.y*r*i,t);return{x:o,y:l,infinity:!1}}}function T0(e,t,n){if((e.z===0n||t.z===0n)&&e.z!==t.z)return!1;let r=g(e.z*e.z,n),i=g(t.z*t.z,n);if(g(e.x*i-t.x*r,n)!==0n)return!1;let o=g(r*e.z,n),l=g(i*t.z,n);return g(e.y*l,n)===g(t.y*o,n)}function f2({x:e,y:t,z:n},r,i){let o=g(g(e*e,r)*e,r),l=g(t*t,r),s=g(g(n*n,r)*n,r),u=g(s*s,r);return g(l-o-i*u,r)===0n}function U0(e,t,n){let r=Ht(e,n,t);return T0(r,pe,t)}function P0({name:e,modulus:t,order:n,cofactor:r,generator:i,b:o,a:l,endoBase:s,endoScalar:u}){if(l!==0n)throw Error("createCurveProjective only supports a = 0");r??(r=1n);let p=r!==1n;return{name:e,modulus:t,order:n,cofactor:r,zero:pe,one:{...i,z:1n},get endoBase(){if(s===void 0)throw Error("`endoBase` for this curve was not provided.");return s},get endoScalar(){if(u===void 0)throw Error("`endoScalar` for this curve was not provided.");return u},a:l,b:o,hasCofactor:p,equal(a,c){return T0(a,c,t)},isOnCurve(a){return f2(a,t,o)},isInSubgroup(a){return U0(a,t,n)},add(a,c){return ve(a,c,t)},double(a){return _e(a,t)},negate(a){return Me(a,t)},sub(a,c){return p2(a,c,t)},scale(a,c){return Ht(a,c,t)},endomorphism({x:a,y:c,z:d}){if(s===void 0)throw Error("endomorphism needs `endoBase` parameter.");return{x:g(s*a,t),y:c,z:d}},toAffine(a){return et(a,t)},fromAffine(a){return Oe(a)}}}var W=P0({name:"Pallas",modulus:Ce,order:He,generator:w0,b:Pt,a:Ct,endoBase:A0,endoScalar:I0}),u8=P0({name:"Vesta",modulus:He,order:Ce,generator:a2,b:Pt,a:Ct,endoBase:l2,endoScalar:s2}),Ke={x:0n,y:0n,infinity:!0};function d2({x:e,y:t,infinity:n},r,i,o){if(n)return!0;let l=g(e*e,r);return g(t*t-e*l-i*e-o,r)===0n}function E0(e,t,n){if(e.infinity)return t;if(t.infinity)return e;let{x:r,y:i}=e,{x:o,y:l}=t;if(r===o)return i===l?C0(e,n):Ke;let s=ke(o-r,n);if(s===void 0)throw Error("impossible");let u=g((l-i)*s,n),p=g(u*u-r-o,n),a=g(u*(r-p)-i,n);return{x:p,y:a,infinity:!1}}function C0({x:e,y:t,infinity:n},r){if(n)return Ke;let i=ke(2n*t,r);if(i===void 0)throw Error("impossible");let o=g(3n*e*e*i,r),l=g(o*o-2n*e,r),s=g(o*(e-l)-t,r);return{x:l,y:s,infinity:!1}}function B0({x:e,y:t,infinity:n},r){return n?Ke:{x:e,y:t===0n?0n:r-t,infinity:n}}function Re(e,t,n){let r=Oe(e),i=Ht(r,t,n);return et(i,n)}var c8=m2({name:"Pallas",modulus:Ce,order:He,generator:w0,b:Pt,a:Ct,endoBase:A0,endoScalar:I0});function m2({name:e,modulus:t,order:n,cofactor:r,generator:i,a:o,b:l,endoScalar:s,endoBase:u}){if(o!==0n)throw Error("createCurveAffine only supports a = 0");let p=r!==void 0&&r!==1n,a=Ne(t),c=Ne(n),d={...i,infinity:!1},f=v0(e,a,c,d,s,u);return{name:e,Field:a,Scalar:c,modulus:t,order:n,a:o,b:l,cofactor:r,hasCofactor:p,zero:Ke,one:d,hasEndomorphism:f!==void 0,get Endo(){if(f===void 0)throw Error(`no endomorphism defined on ${e}`);return f},from(y){return y.x===0n&&y.y===0n?Ke:{...y,infinity:!1}},fromNonzero(y){if(y.x===0n&&y.y===0n)throw Error("fromNonzero: got (0, 0), which is reserved for the zero point");return{...y,infinity:!1}},equal(y,h){return g(y.x-h.x,t)===0n&&g(y.y-h.y,t)===0n},isOnCurve(y){return d2(y,t,o,l)},isInSubgroup(y){return U0(Oe(y),t,n)},add(y,h){return E0(y,h,t)},double(y){return C0(y,t)},negate(y){return B0(y,t)},sub(y,h){return E0(y,B0(h,t),t)},scale(y,h){return Re(y,h,t)}}}var T={event:"MinaZkappEvent******",events:"MinaZkappEvents*****",sequenceEvents:"MinaZkappSeqEvents**",zkappBodyMainnet:"MainnetZkappBody****",zkappBodyTestnet:"TestnetZkappBody****",accountUpdateCons:"MinaAcctUpdateCons**",accountUpdateNode:"MinaAcctUpdateNode**",zkappMemo:"MinaZkappMemo*******",signatureMainnet:"MinaSignatureMainnet",signatureTestnet:"CodaSignature*******",zkappUri:"MinaZkappUri********",deriveTokenId:"MinaDeriveTokenId***",sideLoadedVK:"MinaSideLoadedVk****"};var M={tokenIdKey:28,receiptChainHash:12,ledgerHash:5,epochSeed:13,stateHash:16,publicKey:203,userCommandMemo:20,privateKey:90,signature:154,transactionHash:29,signedCommandV1:19},H0={txnVersion:3},N0={mds:[["12035446894107573964500871153637039653510326950134440362813193268448863222019","25461374787957152039031444204194007219326765802730624564074257060397341542093","27667907157110496066452777015908813333407980290333709698851344970789663080149"],["4491931056866994439025447213644536587424785196363427220456343191847333476930","14743631939509747387607291926699970421064627808101543132147270746750887019919","9448400033389617131295304336481030167723486090288313334230651810071857784477"],["10525578725509990281643336361904863911009900817790387635342941550657754064843","27437632000253211280915908546961303399777448677029255413769125486614773776695","27566319851776897085443681456689352477426926500749993803132851225169606086988"]],roundConstants:[["21155079691556475130150866428468322463125560312786319980770950159250751855431","16883442198399350202652499677723930673110172289234921799701652810789093522349","17030687036425314703519085065002231920937594822150793091243263847382891822670"],["25216718237129482752721276445368692059997901880654047883630276346421457427360","9054264347380455706540423067244764093107767235485930776517975315876127782582","26439087121446593160953570192891907825526260324480347638727375735543609856888"],["15251000790817261169639394496851831733819930596125214313084182526610855787494","10861916012597714684433535077722887124099023163589869801449218212493070551767","18597653523270601187312528478986388028263730767495975370566527202946430104139"],["15831416454198644276563319006805490049460322229057756462580029181847589006611","15171856919255965617705854914448645702014039524159471542852132430360867202292","15488495958879593647482715143904752785889816789652405888927117106448507625751"],["19039802679983063488134304670998725949842655199289961967801223969839823940152","4720101937153217036737330058775388037616286510783561045464678919473230044408","10226318327254973427513859412126640040910264416718766418164893837597674300190"],["20878756131129218406920515859235137275859844638301967889441262030146031838819","7178475685651744631172532830973371642652029385893667810726019303466125436953","1996970955918516145107673266490486752153434673064635795711751450164177339618"],["15205545916434157464929420145756897321482314798910153575340430817222504672630","25660296961552699573824264215804279051322332899472350724416657386062327210698","13842611741937412200312851417353455040950878279339067816479233688850376089318"],["1383799642177300432144836486981606294838630135265094078921115713566691160459","1135532281155277588005319334542025976079676424839948500020664227027300010929","4384117336930380014868572224801371377488688194169758696438185377724744869360"],["21725577575710270071808882335900370909424604447083353471892004026180492193649","676128913284806802699862508051022306366147359505124346651466289788974059668","25186611339598418732666781049829183886812651492845008333418424746493100589207"],["10402240124664763733060094237696964473609580414190944671778761753887884341073","11918307118590866200687906627767559273324023585642003803337447146531313172441","16895677254395661024186292503536662354181715337630376909778003268311296637301"],["23818602699032741669874498456696325705498383130221297580399035778119213224810","4285193711150023248690088154344086684336247475445482883105661485741762600154","19133204443389422404056150665863951250222934590192266371578950735825153238612"],["5515589673266504033533906836494002702866463791762187140099560583198974233395","11830435563729472715615302060564876527985621376031612798386367965451821182352","7510711479224915247011074129666445216001563200717943545636462819681638560128"],["24694843201907722940091503626731830056550128225297370217610328578733387733444","27361655066973784653563425664091383058914302579694897188019422193564924110528","21606788186194534241166833954371013788633495786419718955480491478044413102713"],["19934060063390905409309407607814787335159021816537006003398035237707924006757","8495813630060004961768092461554180468161254914257386012937942498774724649553","27524960680529762202005330464726908693944660961000958842417927307941561848461"],["15178481650950399259757805400615635703086255035073919114667254549690862896985","16164780354695672259791105197274509251141405713012804937107314962551600380870","10529167793600778056702353412758954281652843049850979705476598375597148191979"],["721141070179074082553302896292167103755384741083338957818644728290501449040","22044408985956234023934090378372374883099115753118261312473550998188148912041","27068254103241989852888872162525066148367014691482601147536314217249046186315"],["3880429241956357176819112098792744584376727450211873998699580893624868748961","17387097125522937623262508065966749501583017524609697127088211568136333655623","6256814421247770895467770393029354017922744712896100913895513234184920631289"],["2942627347777337187690939671601251987500285937340386328746818861972711408579","24031654937764287280548628128490074801809101323243546313826173430897408945397","14401457902976567713827506689641442844921449636054278900045849050301331732143"],["20170632877385406450742199836933900257692624353889848352407590794211839130727","24056496193857444725324410428861722338174099794084586764867109123681727290181","11257913009612703357266904349759250619633397075667824800196659858304604714965"],["22228158921984425749199071461510152694025757871561406897041788037116931009246","9152163378317846541430311327336774331416267016980485920222768197583559318682","13906695403538884432896105059360907560653506400343268230130536740148070289175"],["7220714562509721437034241786731185291972496952091254931195414855962344025067","27608867305903811397208862801981345878179337369367554478205559689592889691927","13288465747219756218882697408422850918209170830515545272152965967042670763153"],["8251343892709140154567051772980662609566359215743613773155065627504813327653","22035238365102171608166944627493632660244312563934708756134297161332908879090","13560937766273321037807329177749403409731524715067067740487246745322577571823"],["21652518608959234550262559135285358020552897349934571164032339186996805408040","22479086963324173427634460342145551255011746993910136574926173581069603086891","13676501958531751140966255121288182631772843001727158043704693838707387130095"],["5680310394102577950568930199056707827608275306479994663197187031893244826674","25125360450906166639190392763071557410047335755341060350879819485506243289998","22659254028501616785029594492374243581602744364859762239504348429834224676676"],["23101411405087512171421838856759448177512679869882987631073569441496722536782","24149774013240355952057123660656464942409328637280437515964899830988178868108","5782097512368226173095183217893826020351125522160843964147125728530147423065"],["13540762114500083869920564649399977644344247485313990448129838910231204868111","20421637734328811337527547703833013277831804985438407401987624070721139913982","7742664118615900772129122541139124149525273579639574972380600206383923500701"],["1109643801053963021778418773196543643970146666329661268825691230294798976318","16580663920817053843121063692728699890952505074386761779275436996241901223840","14638514680222429058240285918830106208025229459346033470787111294847121792366"],["17080385857812672649489217965285727739557573467014392822992021264701563205891","26176268111736737558502775993925696791974738793095023824029827577569530708665","4382756253392449071896813428140986330161215829425086284611219278674857536001"],["13934033814940585315406666445960471293638427404971553891617533231178815348902","27054912732979753314774418228399230433963143177662848084045249524271046173121","28916070403698593376490976676534962592542013020010643734621202484860041243391"],["24820015636966360150164458094894587765384135259446295278101998130934963922381","7969535238488580655870884015145760954416088335296905520306227531221721881868","7690547696740080985104189563436871930607055124031711216224219523236060212249"],["9712576468091272384496248353414290908377825697488757134833205246106605867289","12148698031438398980683630141370402088785182722473169207262735228500190477924","14359657643133476969781351728574842164124292705609900285041476162075031948227"],["23563839965372067275137992801035780013422228997724286060975035719045352435470","4184634822776323233231956802962638484057536837393405750680645555481330909086","16249511905185772125762038789038193114431085603985079639889795722501216492487"],["11001863048692031559800673473526311616702863826063550559568315794438941516621","4702354107983530219070178410740869035350641284373933887080161024348425080464","23751680507533064238793742311430343910720206725883441625894258483004979501613"],["28670526516158451470169873496541739545860177757793329093045522432279094518766","3568312993091537758218792253361873752799472566055209125947589819564395417072","1819755756343439646550062754332039103654718693246396323207323333948654200950"],["5372129954699791301953948907349887257752247843844511069896766784624930478273","17512156688034945920605615850550150476471921176481039715733979181538491476080","25777105342317622165159064911913148785971147228777677435200128966844208883059"],["25350392006158741749134238306326265756085455157012701586003300872637887157982","20096724945283767296886159120145376967480397366990493578897615204296873954844","8063283381910110762785892100479219642751540456251198202214433355775540036851"],["4393613870462297385565277757207010824900723217720226130342463666351557475823","9874972555132910032057499689351411450892722671352476280351715757363137891038","23590926474329902351439438151596866311245682682435235170001347511997242904868"],["17723373371137275859467518615551278584842947963894791032296774955869958211070","2350345015303336966039836492267992193191479606566494799781846958620636621159","27755207882790211140683010581856487965587066971982625511152297537534623405016"],["6584607987789185408123601849106260907671314994378225066806060862710814193906","609759108847171587253578490536519506369136135254150754300671591987320319770","28435187585965602110074342250910608316032945187476441868666714022529803033083"],["16016664911651770663938916450245705908287192964254704641717751103464322455303","17551273293154696089066968171579395800922204266630874071186322718903959339163","20414195497994754529479032467015716938594722029047207834858832838081413050198"],["19773307918850685463180290966774465805537520595602496529624568184993487593855","24598603838812162820757838364185126333280131847747737533989799467867231166980","11040972566103463398651864390163813377135738019556270484707889323659789290225"],["5189242080957784038860188184443287562488963023922086723850863987437818393811","1435203288979376557721239239445613396009633263160237764653161500252258220144","13066591163578079667911016543985168493088721636164837520689376346534152547210"],["17345901407013599418148210465150865782628422047458024807490502489711252831342","22139633362249671900128029132387275539363684188353969065288495002671733200348","1061056418502836172283188490483332922126033656372467737207927075184389487061"],["10241738906190857416046229928455551829189196941239601756375665129874835232299","27808033332417845112292408673209999320983657696373938259351951416571545364415","18820154989873674261497645724903918046694142479240549687085662625471577737140"],["7983688435214640842673294735439196010654951226956101271763849527529940619307","17067928657801807648925755556866676899145460770352731818062909643149568271566","24472070825156236829515738091791182856425635433388202153358580534810244942762"],["25752201169361795911258625731016717414310986450004737514595241038036936283227","26041505376284666160132119888949817249574689146924196064963008712979256107535","23977050489096115210391718599021827780049209314283111721864956071820102846008"],["26678257097278788410676026718736087312816016749016738933942134600725962413805","10480026985951498884090911619636977502506079971893083605102044931823547311729","21126631300593007055117122830961273871167754554670317425822083333557535463396"],["1564862894215434177641156287699106659379648851457681469848362532131406827573","13247162472821152334486419054854847522301612781818744556576865965657773174584","8673615954922496961704442777870253767001276027366984739283715623634850885984"],["2794525076937490807476666942602262298677291735723129868457629508555429470085","4656175953888995612264371467596648522808911819700660048695373348629527757049","23221574237857660318443567292601561932489621919104226163978909845174616477329"],["1878392460078272317716114458784636517603142716091316893054365153068227117145","2370412714505757731457251173604396662292063533194555369091306667486647634097","17409784861870189930766639925394191888667317762328427589153989811980152373276"],["25869136641898166514111941708608048269584233242773814014385564101168774293194","11361209360311194794795494027949518465383235799633128250259863567683341091323","14913258820718821235077379851098720071902170702113538811112331615559409988569"],["12957012022018304419868287033513141736995211906682903915897515954290678373899","17128889547450684566010972445328859295804027707361763477802050112063630550300","23329219085372232771288306767242735245018143857623151155581182779769305489903"],["1607741027962933685476527275858938699728586794398382348454736018784568853937","2611953825405141009309433982109911976923326848135736099261873796908057448476","7372230383134982628913227482618052530364724821976589156840317933676130378411"],["20203606758501212620842735123770014952499754751430660463060696990317556818571","4678361398979174017885631008335559529633853759463947250620930343087749944307","27176462634198471376002287271754121925750749676999036165457559387195124025594"],["6361981813552614697928697527332318530502852015189048838072565811230204474643","13815234633287489023151647353581705241145927054858922281829444557905946323248","10888828634279127981352133512429657747610298502219125571406085952954136470354"]],fullRounds:55,partialRounds:0,hasInitialRoundConstant:!1,stateSize:3,rate:2,power:7},R0={mds:[["5328350144166205084223774245058198666309664348635459768305312917086056785354","15214731724107930304595906373487084110291887262136882623959435918484004667388","22399519358931858664262538157042328690232277435337286643350379269028878354609"],["10086628405675314879458652402278736459294354590428582803795166650930540770072","17127968360683744052278857147989507037142007029142438136689352416106177192235","14207324749280135281015658576564097509614634975132487654324863824516044294735"],["3059104278162906687184746935153057867173086006783171716838577369156969739687","16755849208683706534025643823697988418063305979108082130624352443958404325985","16889774624482628108075965871448623911656600744832339664842346756371603433407"]],roundConstants:[["1346081094044643970582493287085428191977688221215786919106342366360741041016","10635969173348128974923358283368657934408577270968219574411363948927109531877","18431955373344919956072236142080066866861234899777299873162413437379924987003"],["5797044060651575840084283729791357462720161727701814038830889113712361837236","931288489507796144596974766082847744938192694315568692730730202141894005205","13659894470945121760517769979107966886673294523737498361566285362771110125394"],["6076231707445968054305995680347976771585015308155855387339303513025362636128","28822740034050339685362260108484262889265034407340240070058997651710236456303","23420266473857869790486107029614186913447272961845992963194006142267563993493"],["13753917374184785903125509246122783296344288469304898921025291716613575849357","22396739346703340038555577564698139382745239004673153148674304627904081092826","13064238335532551154986111986409392866270911640785653458047811526842088084911"],["23165923875642452719095776619341762858050322341374771345641255745672274104746","1876216571769482372914291210815859835162659440705283782713345335434924136736","25448252060136178247213604035267580231762596830634036926922217427938159849142"],["2161875315509206970842862195937323600322108268401381254431163181777726747153","19159855698625842998331760283165907305622417625829203038229273729196960321630","24828563875172432296791053766778475681869974948122169083176331088266823626561"],["15959479662608710141128458274961057999257961784282074767105536637788386907463","8006369581283017287449277389162056290714176164680299906116833200510117952858","18794336794618132129607701188430371953320538976527988886453665523008714542779"],["19408271715954593722501381885401160867835377473312521553027032015227895029571","13654747284005184272412579731446984220568337794941823533879059135026064413631","14094055032353750931629930778481002727722804310855727808905931659115939920989"],["13241818625838429282823260827177433104574315653706102174619924764342778921524","25709259239494174564705048436260891089407557689981668111890003079561388887725","26866626910239634723971078462134580196819809568632305020800296809092442642381"],["23886826350713085163238005260075062110062681905356997481925492650252417143049","16853602711255261520713463306790360324679500458440235992292027384928526778856","18444710386168488194610417945072711530390091945738595259171890487504771614189"],["16896789009769903615328691751424474161656500693270070895928499575572871141439","23842266984616972287898037872537536999393060934879414668030219493005225085992","24369698563802298585444760814856330583118549706483939267059237951238240608187"],["25360195173713628054110426524260405937218170863260484655473435413697869858790","1486437708678506228822038923353468635394979165769861487132708983207562337116","18653498960429911228442559598959970807723487073275324556015861725806677047150"],["18878179044241268037057256060083772636369783391816038647949347814518015576522","178715779905629247116805974152863592571182389085419970371289655361443016848","8381006794425876451998903949255801618132578446062133243427381291481465852184"],["4176946262813877719206528849579392120806054050640974718891398605746592169324","16376345520728802444699629729684297833862527190772376028981704525651968727081","8399065769082251057361366626601550736334213197703006866551331927128775757919"],["15435308585611812393531506745122614542196708285088622615406141986333182280857","4082259282787276939431186930090898350392871145699460879678141552997816391817","26348742719959309014730178326877937464605873211235784184917342950648457078699"],["9707631711734344681918469569872517425107158187591261754498805460753455298868","27910768846011709391567916011595957279088224137468948238696800459136335473132","20407239095656434708569263842372155762970847207558227886302782130015730063802"],["22726225412881182965250630589245572283256255052470345984553083359461473893802","12443967854426795490638709950679156338200426963050610832781263082981525248175","27102543658848146076219989119639465430524061997280788166887046421706499775415"],["14427224233985680214097547669945064793149553513421479297921556194475574770861","22917454832925781549840198815703114840452733537799472739275668965081704937832","3455076056123630366063931123762198941796412458154689469887583689725886013901"],["4513100023937785913596662867311227004762025658663076805918211014066645403017","18187619530784075723418065322038024507729605774832001333883311123910954334059","9447065431426150382325592560406989926365684509675374414068135115024495130938"],["3227816098015819796753427754968234889554095489076864339942014527747604603014","14798316759185072116520458171957899889489461918408669809912344751222514418582","23013904852315603905843158448056763116188801262838729536210355401378476650033"],["20979191509934291452182967564058656088941447895799901211038858159903580333267","20772973010251235271448378823573767262405703078344288856168565499702414379868","10105446427739226002497411811738001382334316505480517822035303561899927603685"],["11079074761356717003579108002319997196881121172538617046865136940931215263187","4693927775411489288330326150094711670434597808961717172753867514688725690438","18581720304902876944842830383273503265470859268712618325357902881821721540119"],["3065369948183164725765083504606321683481629263177690053939474679689088169185","18515622379147081456114962668688706121098539582467584736624699157043365677487","17563088600719312877716085528177751048248154461245613291986010180187238198006"],["26199746176994924146211004840756471702409132230831594954444947705902602287290","7576136600627345523051497639367002272003104458453478964661395239732811642605","20058687874612168338994287374025378897088936171250328231848098497610185784281"],["16894722532414195606958290526999761110785277556463400588047573469106594850228","13961730805696859614283621225672002906734926278118993580398533742874863598733","25256842011135514243352951950573936602906198374305137963222382546140030647211"],["18530360047537856737482157200091774590035773602620205695980247565433703032532","23014819965938599260086897799541446473887833964178378497976832161473586995397","27911426213258307990762460361663504655967992659180759140364181941291843542489"],["1067338118323302017358103178057182291035336430305886255160210378977812067042","17219092885519007424608854460610388434712113621163885775309496940189894433620","16432921127615937542183846559291144733339643093361323334499888895135356545408"],["28608851042959977114787048070153637607786033079364369200270218128830983558707","10121629780013165888398831090128011045011860641816380162950736555305748332191","2348036340843128746981122630521268144839343500596932561106759754644596320722"],["16619881370356823200358060093334065394764987467483650323706184068451904156452","2302436627861989749837563733434625231689351276818486757748445924305258835336","27514536540953539473280001431110316405453388911725550380123851609652679788049"],["9459277727420672604737117687200019308525004979918488827092207438664125039815","23425670740358068509956137586663046763224562225383386726193078231034380596217","7641885067011661443791509688937280323563328029517832788240965464798835873658"],["9579420382351699601929202663836555665702024548386778299996961509578687980280","18513671386572584282611234979588379470994484682444053600751415262497237017703","24923151431234706142737221165378041700050312199585085101919834422744926421604"],["21131320841803068139502705966375283830095161079635803028011171241658723560073","19208476595309656066589572658712717685014329237892885950958199953675225096566","24023185216737416080949689106968568821656545490748664446389634158498624398204"],["7510552996848634969347937904645640209946785877619890235458182993413526028718","3694415017252995094553868781762548289196990492336482360084813900937464847638","9219021070107873028263141554048987416559034633883158827414043929220388719352"],["5058327241234443421111591959922712922949620710493120384930391763032694640881","13148252221647574076185511663661016015859769210867362839817254885265598775418","15186790492457240277904880519227706403545816456632095870015828239411033220638"],["2775942914650502409705888572245750999561427024488403026572311267798009048466","6277965230841030155341171319927732572492215818164736949144854827643964384893","24144742149845235561087977558785057713814731737434473021812189457617252043745"],["25789129719327437503403457598813971826156253950521984610569937361506914183550","21500534320778995945845999974779950304491968082325255355181901574840373597824","17185359848218837018503091932245529880546896465437232425673134558221638601375"],["12253896579078110143384981818031883112606762215016553811786428215758384195713","12956658260778456372481429232709881794962204180363200699121804724437678625542","3023603786717368708677300377055384474816569333060487675635618249403832078921"],["4186492855716808019562789862833898284927736051002588766326482010810259565130","4263939782228419774639068267872291539552889472311225829898746091327730032923","24068843626280451423530509388397151179174104901782990365720205643492047328816"],["14564937827374621319716285527475223392664010281568256859627186463065876537730","28367596550218705971881480694115935470211319172596432472834880507822452927283","28712267437482356021504544448225827500268648754270274754623969882031853409874"],["4542596163006916397403529184431773692747461300288194722982487051249951403191","2530461821259252672899452671728393208543894014761816288817584587718369998371","12886393063011539390567049190923398676964700147222878509238966758839020897414"],["21593897590707514492037699253654745501762191795293908682495110982956631870528","13233005790593128135480716846773978578237145313006994631606474472023504621256","21621863098292803642478350494794106282518362577273973885587684567452726939909"],["26068620073001644720969640099644251616742620988609091568084348314770436291745","18248589586787935500122854210401321966459127818593446990365211078521058875685","21247134484403265289037859533347798468858819117600251067578809852124865474448"],["7947383127165915366383984718363902897504221803836013123394785749404572432524","22173041014621867335598230447618036223462011647696367239478182269973488867154","16773227734018849308448505860847939069870370055633571816925675705713088305139"],["10708707957340055662073314227607620808612686977606082605219160019699644826999","21249897193797038261479589555720746994050836195265348846222835266344091683000","12581195059139097540117398803363514148192715293133623516709277290477633379593"],["19779599816866992123290302397082614570282926215253589712189610064229996603178","21749216503901548676985371189807470207364320167486559936962401093285243029177","17600045923623503357380202389718735904174992978547372448837488832457719009224"],["2732872979548118117758016335601225525660858727422778256671975055129965858636","13703031005128062046175331918702218558750713240446179585947851411173844703597","28447710105386636841938034820015573492556750872924193415447818187228356409281"],["28539960355005748517007309210788803416171161412204526246799800716567376494244","21329318452221893900731030722137844458345358926323127858742388587761302609863","28135302149599894709369178097439582767613940517471323224020113411362601191873"],["24980774120400248734054527936006392540889095705961960837980443629260392758683","20339911045808632098936066397942175169549806052128535543540543556255197716643","7929293103930252545581851978492699598413941396422930641071359388697302362494"],["8911092207145893152276662096451247820054843777071569723455408545101628926203","19648860643145256523615441075182036100116634560394529500146405733687718224516","14635387208623683806428528837466762532853903031263830054986064902455379735903"],["11555212214346132926966321609673228184079851030522218543981385635403167028692","20896918157639814425520058178561910811657326967880217845710779511927814874973","4650158165912007049140499755153804318686705949436165235742106170124284287326"],["13880660273492757167295696447853232191657893303250187467329180558670697369810","8043529172463774320604378774840863923445982272478964686447801046272917236836","2134399296482715903442913099374581981696436050603410080564843555725771329441"],["27320952903412641133501507962185246982787769547770982814240701526492601978122","23417491374379751329394424924400186404791519133465537872457405970098902747611","17612427354278346772575179176139417348059847375297761006336024476146551185903"],["10710998507064742997612080847223278109404482930427999113323732519626499166548","14958094513415797513745395709487730603918953350067504982704138489305723550923","24096319595904213497633343966229498735553590589105811393277073274927955202995"],["17983724131200292654039765185049138356840415443160477259330748730019147254309","17598096800487588874709548646068838880468456205252324677357706597166777506441","27420647821110229619898200875848631488422182349567475956209153112306555222281"],["448538544835457571662601142415301047108854812427100562339376187510452313026","23494184556634922103535803143214434479598067155171780264810485708203176455201","22626342941879801989161990529511235538216563009907378573817996229389756621777"],["26128268137723417163973860961686381960826033145738852158792607959175787222856","20225791828042873305317281581105429726352058325970107209484198122707862156597","7538871133759632802857159609785118198934349221046986784429069814655215585732"],["26184554861259642274153262777073624024579929401668865520166966302070394487366","28755259264665180745537307265993667261709206143628938749669440804401623257679","11896066093033549470312328497237649508068258723531931099214795928200015717321"],["21657721599978732693249012287058163532690942515202465984736373311077240614059","9214914097169852704753116653702415951907628005986883140609006971322091003693","18710111680849814325169297240208687402588261569152088592693815711857504371037"],["6813635166770764528979084175325709935892248249948967889926276426090222296643","20546585456429436268067726231902751119458200511988152296570567167520382569278","20087466019194902429054761607398988292568594301671509779549344754172952693871"],["28185105286740691904534067831357491310995891986363455251895371651360605333143","10108348212894231193041286244259038275269464277821588425688314560368589986063","11433633215392393209829215018579238412423821563056156785641278458497271271546"],["27870881917195016999862550657996865268956893566432995492427618003637597051321","102309803677783876701097881491240456320211833502658383473112057006867019389","22844040227595875612525628393174357057929113317578127744718774517498324646590"],["18364790233947478619325319418813215212267974311771564959136180502266118026133","2480624341921718230432383518425561514824501138863702825916674641657321180841","16778939567530361665956758171503829349658551798564323167725356065198936433124"],["11947564511486966895926950599696532964589539443187518177489990556481125699966","3133187646540385483015602955087323554103587039123577645562801570574691666057","27704797101265438206569218421707753788081674727344603874614391656565567951541"],["13001484695584753475562184349533365512515447041450030471627087395341039487710","477322000667279478600757543806155989948171541982639893984064422067850617496","13913755821658634147813329813115566967428755223601185963529801459396673113438"],["16621869429023470107454028095846067937827722393398508604914831452950874033411","21755744236927410239079501831014076529931327263341620300431356747367343619046","26538666591151124505694487799121414506088199961481579132019627484065014831180"],["3066480818457008068617042549071052338581291837882909165666223566402713429090","16182268213934119294035309949459684472027705439038023775276926916166831108357","28907604876608422892474268478706783033050951245339691569015166507728369585190"],["27973960109508292680965426133498827831691369851701664449575719912259359998113","1456924360278399121996742356757866616312146358469991014696110099534285524446","8234248752911525485438611255163504976087091103090603316695312869292347668495"],["8716078950082339630026654067608811496722305720644485560320987802533380421009","19016744645809919602099479306503354923553336014593353020688463619133130053825","24379650661051444982012238084495990858827340608012118841005379796362233056432"],["2245379544097631382062919677963998259142792890502492881341386639439507471783","28788137434161061988371619554419440748189388934884757179010092973102292086583","7187000185648741287953633167647835668543536354944774631102766873251849991238"],["18319349500538500800225762827448369057030532278398270164660609327776487168142","2622932985948021877314529887962683530522545893985767148345336304947201715671","13805188629797792210337544360632964855143280581052079479249966961215582531026"],["27457600993464082637917106210690168172469473943609357897393615707457194410878","15448646156961779103834447043970817898237835202826003934642165760908058355399","9396792545729486882231669677795667529746274932273033601723318032992363022062"],["9927877141952679457141759789181418464292082444806533413864151258248124544859","23827901395971835838179844085051957393677906360196119690926757794561937573142","3273544693673216914876067527455588276979859627093391584406340272737391174619"],["19571510438350300564152393820251652609646082150148656806391655428002614034315","4458840243585913642400750597703353770666314833058197517675446022682775625834","6452218213610300363069953741424106105609715382419342511693148495219793324457"],["14558167930891460678441266912176752652821641543245953113671886345167213541771","10650967986920075561478528461783351160938460620955779955379459848889204404950","19990009778942542934049216419052172134625404062770188357110708518621145688588"],["26855242974447190235826233682457047761532515293146087151296725996543442567035","22785340043356532865086769889360674409753343398766563441587096485751538658065","28603049427449348335651629195385434188071937908693764500052489540779792538285"],["20545812864989828913452616721240947168977365844984763819184465128164378967167","23234068381345797209897730226956922073109641728569353961504167817770340037954","26031714567641615877877111172701145299483019910006153132858512509897185854695"],["9512221744061419790435674197238913998387834650389922233458121639503195504983","12587458000103271975978240683793268604398305885278203470492658961734100340536","9670291694005369437277651504604785512303147991710650505302465204429311229197"],["26995526763045548800439747262386290359229145489609341602564040676717570935439","23742712112104280264401317024221734961713400615669958343926511931219510484675","27931469778579449247589315744656633392873808631802461175539563849884447358271"],["20669006894143187877081688942720159738269397552445286314270368345994751825389","26891772301075275370472640177651637211280740381619976926886106618375467277414","28387986011980449959047232529988203397251084614417760995257355718700961696092"],["6579105010484741592730389416372694666279917604793318157514380025250233913402","11007035767869292700964744408562802781669930023548892567535397874932420229930","981148366863906885900456473323410468923514528856216824044152942069412627408"],["22213671088722307302576907504985884923571642958053627659840326928319445671280","1318836216310789598614608105109389429335273432455224127576823891011367206122","25586582796990779718352441955439394949194222626688223867952982491529809559257"],["4923739488579452777913681531125585976446366144127161879759262506690369040090","23505612338866210737103599484620591026802005128655081877133994175016351514827","323887003859465324514901860965142186539600668250760639664361851354147799637"],["10198923064967306784017949469108033682156920551672348936591491217255268794658","9593680688139131432883442351722730169325112619984238956948153423155998917175","27027988263960602112273050725720071355535922812577299127302015348825197871870"],["14419883951157390867695097127684346981136020111885301573583640959136319507752","5104414988075833278683649298543440897371415916271358703850262680431809374355","24739655595299332818980677669648719986462429574612913501586844601377825836782"],["28522818684103966731129743408029731246564480741348128436668680764518115102581","21520350704208288978690888796633940487888044365108767319141211249242880355961","17391005598311948834360476853940353239444383292422171321575043660157438608537"],["15367833944125677011173327826570204350687925236257190051755087781855930646142","21715073802090413714601069529558707101797361591183718695054701329871284436172","8994093285353831008525761670339342200997965950202092028313103110478252647618"],["8370824693889782161629525898408725452177580012023459750897244954935682978671","16123253540853556024347150096993154278773652905830608614979368087152152043083","3535380953353495025888433493640531836449699255364366295870140701379497967423"],["6954518484798178646508803478426114267143074508396663899281411171704702743829","28903134801897070276701950388422104654018369750191967384271618837091859516942","20872505363530172448468374920196608937030884647150175861507911076568784054834"],["6902861581703501105786795670676641959401710346423594578401934671029571262513","10124161387604183369443890585742198433184078889862870469507328332805848271064","10488004060799269337071647841224034919633445750252076195310163972966405029030"],["507704911991278613147490289466075160618843900088471236546244459176211783848","7252739745607302667257774481690407709040936359589867974787811552896597703097","23278073497974004442836030100920157527910770509761505828038443336325476654930"],["22766285055433137793164317120096790621982728188995759745859222009100808389090","23129058299483468195787339200845749049960038336751758017949899311636830205152","16665333681978951552434356320651834889869437822496200946959897681307959400425"],["12145699202182574939376505075528461451757079041659894988784442097333218352048","26340666275844437932755852805027863696219004039301187587209926587657008948704","19208771804191839410002226941825269105677187954811130189835856228258013753206"],["21957102494792377508237608216278079874536155315851198461024084071231867104453","6933367436450995525851693784691226222726503560893470094614235356287049091852","15707767379191450768747057313641112321773921923533732633534831270357733757271"],["27661963645951389261638591385668507557739541354225916772550248746235106571003","19699458096897937575096494582288688995241392471402204995195057374756282223421","902873385171181344315871113842580653512118892800584003934454469411716098791"],["17184835876565576154014372215369798779520343573944211203710896053325717110660","664657295519303589036289440053175741110032988007278988577620229144220576240","10803972669668998371638869508774217165881281885838503958226056357738500321396"],["2329846733754251453632375727999372856194157027336139087170310553870624325301","14139944357035048486675740400655356660678187875721949218090128899571575479791","18368148273419807418427674359327442879484531833435081951870369910704734685351"],["10480273665080572189328459165704340191901489646067580012574464138528963201459","21773636700078124500346009061678153597323236568110076029811348966753228682835","18184268307211429260956076021417309535471438696101133218049142374847151474905"],["25957533025669311312382992376854735734491934602484112256289764602447226406852","22223261506176684934865714490719116745135417403915426392159449667435294570739","22937309162832499167063076416585504361695925730111272512450449042837586253575"],["16956181785481598286719868503945127919581091625126206673934113115358441284347","8497782777197814773596870810881707148695901557289856910220737358078100998191","21135503731586600979470064722475007625236017670426339278983640892218291297054"],["17809297343844488723046665739910571149089769215421130894378638450427880983923","72435395972188389387093550708873189001876361107443937983754878061522372356","7511239878692099209014947248389283109997289411550315391143819429585903287870"]],fullRounds:63,partialRounds:0,hasInitialRoundConstant:!0,stateSize:3,rate:2,power:5},xe={dummyVerificationKeyHash:"3392518251768960475377392625298437850623664973002200885669375116181514017494"};function M0(e,t){if(!Number.isInteger(e)||e<0)throw Error(t)}function tt(e,t){if(!Number.isInteger(e)||e<=0)throw Error(t)}function V({toBytes:e,readBytes:t}){let n=(r,i)=>{if(M0(i,"readBytes: offset must be integer >= 0"),i>=r.length)throw Error("readBytes: offset must be within bytes length");let[o,l]=t(r,i);if(l<i)throw Error("offset returned by readBytes must be greater than initial offset");if(l>r.length)throw Error("offset returned by readBytes must not exceed bytes length");return[o,l]};return{toBytes:e,readBytes:n,fromBytes(r){let[i,o]=n(r,0);if(o<r.length)throw Error("fromBytes: input bytes left over");return i}}}function j(e,t){return V({toBytes(n){let r=e.toBytes(n);return r.unshift(t),r},readBytes(n,r){let i=n[r++];if(i!==t)throw Error(`fromBytes: Invalid version byte. Expected ${t}, got ${i}.`);return e.readBytes(n,r)}})}function O0({toBytes:e,readBytes:t},n){return V({toBytes:e,readBytes(r,i){let[o,l]=t(r,i);return n(o),[o,l]}})}function N(e,t){let n=t.map(i=>e[i]),r=y2(n);return V({toBytes(i){let o=t.map(l=>i[l]);return r.toBytes(o)},readBytes(i,o){let[l,s]=r.readBytes(i,o);return[Object.fromEntries(t.map((p,a)=>[p,l[a]])),s]}})}function y2(e){let t=e.length;return V({toBytes(n){let r=[];for(let i=0;i<t;i++){let o=e[i].toBytes(n[i]);r.push(...o)}return r},readBytes(n,r){let i=[];for(let o=0;o<t;o++){let[l,s]=e[o].readBytes(n,r);r=s,i.push(l)}return[i,r]}})}function Ee(e){let t=Object.fromEntries(e.map(({type:n},r)=>[n,r]));return V({toBytes(n){let r=t[n.type],i=e[r];if("value"in i){let o=i.value;return[r,...o.toBytes(n.value)]}return[r]},readBytes(n,r){let i=n[r];r++;let o=e[i];if("value"in o){let[l,s]=o.value.readBytes(n,r);return[{type:o.type,value:l},s]}return[{type:o.type},r]}})}var _t=V({toBytes(e){return[de(e),...Y(e)]},readBytes(e,t){let n=e[t++],r=t+n;return[ot(e.slice(t,r)),r]}}),_0=255,Nt=254,Rt=253,Mt=252;function Ot(e){let t=1n<<BigInt(e-1),n=e>>3;if(n*8!==e)throw Error("bits must be evenly divisible by 8");return V({toBytes(r){if(r<-t||r>=t)throw Error(`int${e} out of range, got ${r}`);if(r>=0)return r<0x80n?$(r,1):r<0x8000n?[Nt,...$(r,2)]:r<2147483648?[Rt,...$(r,4)]:[Mt,...$(r,8)];{let i=1n<<64n;return r>=-0x80n?[_0,...$(i+r&0xffn,1)]:r>=-0x8000n?[Nt,...$(i+r&0xffffn,2)]:r>=-2147483648?[Rt,...$(i+r&0xffffffffn,4)]:[Mt,...$(i+r,8)]}},readBytes(r,i){let o=r[i++];if(o<128)return[BigInt(o),i];let l={[_0]:1,[Nt]:2,[Rt]:4,[Mt]:8}[o];if(l===void 0)throw Error("binable integer: invalid start byte");let s=i+l,u=h2(r.slice(i,s),n);if(u>=t&&(u-=2n*t),u<-t||u>=t)throw Error(`int${e} out of range, got ${u}`);return[u,s]}})}function h2(e,t){let n=e.length,i=e[n-1]>>7===1?255:0,o=e.concat(Array(t-n).fill(i));return je(o)}function K0(e){let t=Ot(e),n=1n<<BigInt(e-1);return g2(t,{to(r){if(r<0n||r>=2n*n)throw Error(`uint${e} out of range, got ${r}`);return r>=n?r-2n*n:r},from(r){let i=r<0n?r+2n*n:r;if(i<0n||i>=2n*n)throw Error(`uint${e} out of range, got ${i}`);return i}})}var h8=Ot(64),g8=Ot(32),nt=K0(64),rt=K0(32);function Be(e,t){let n=e.sizeInBytes;if(t.length>=n)throw Error("prefix too long");let r=Y(t);return e.fromBytes(r.concat(Array(n-r.length).fill(0)))}function it([...e]){let t=[];for(;e.length>0;){let n=e.splice(0,8),r=0;for(let i=0;i<8;i++)n[i]&&(r|=1<<i);t.push(r)}return t}function fe(e){return e.map(t=>{let n=Array(8);for(let r=0;r<8;r++)n[r]=!!(t&1),t>>=1;return n}).flat()}function ze(e,t){return{...e,toBits(n){return fe(e.toBytes(n)).slice(0,t)},fromBits(n){return e.fromBytes(it(n))},sizeInBytes:Math.ceil(t/8),sizeInBits:t}}function g2(e,{to:t,from:n}){return V({toBytes(r){return e.toBytes(t(r))},readBytes(r,i){let[o,l]=e.readBytes(r,i);return[n(o),l]}})}var z0=new TextEncoder,b2=new TextDecoder;function Y(e){return[...z0.encode(e)]}function ot(e){return b2.decode(Uint8Array.from(e))}function de(e){return z0.encode(e).length}var Kt=It(V0(),1);var J0="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz".split(""),L0={};J0.forEach((e,t)=>{L0[e]=t});function S2(e,t){let n=[t,...e],r=D0(n),i=n.concat(r);return v2(i)}function k2(e,t){let n=x2(e),r=n.slice(-4),i=n.slice(0,-4),o=D0(i);if(!I2(r,o))throw Error("fromBase58Check: invalid checksum");if(i[0]!==t)throw Error(`fromBase58Check: input version byte ${t} does not match encoded version byte ${i[0]}`);return i.slice(1)}function v2(e){let t=0;for(;e[t]===0;)t++;let n=[...e].map(BigInt).reverse(),r=Tt(n,256n,58n).reverse();return r=Array(t).fill(0n).concat(r),r.map(i=>J0[Number(i)]).join("")}function x2(e){let t=[...e].map(i=>{let o=L0[i];if(o===void 0)throw Error("fromBase58: invalid character");return BigInt(o)}),n=0;for(;t[n]===0n;)n++;let r=Tt(t.reverse(),58n,256n).reverse();return r=Array(n).fill(0n).concat(r),r.map(Number)}function D0(e){let t=Kt.sha256.create();t.update(e);let n=Kt.sha256.create();return n.update(t.array()),n.array().slice(0,4)}function Q(e,t){return{toBase58(n){let r=e.toBytes(n);return S2(r,t)},fromBase58(n){let r=k2(n,t);return e.fromBytes(r)}}}function at(e,t){return{...e,...Q(e,t)}}function Ve(e,t,n){let r=n!==void 0?j(e,n):e;return Q(r,t)}var E2=1,B2=1,w2=1,A2=1;function q0(e){let t=Ve(e,M.tokenIdKey),n=Ve(e,M.receiptChainHash,E2),r=Ve(e,M.ledgerHash,B2),i=Ve(e,M.epochSeed,w2),o=Ve(e,M.stateHash,A2);return{TokenId:t,ReceiptChainHash:n,LedgerHash:r,EpochSeed:i,StateHash:o}}function I2(e,t){if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}var X=new Set(["object","function"]),Je=new Set([Number,String,Boolean,BigInt,null,void 0]);function lt(){let e=zt();function t(r,i){let o=typeof r=="object"&&r!==null?Object.keys(r):[];if(!Je.has(r)&&!X.has(typeof r))throw Error(`provable: unsupported type "${r}"`);function l(m){if(Je.has(m))return 0;if(!X.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.map(l).reduce((S,B)=>S+B,0):"sizeInFields"in m?m.sizeInFields():Object.values(m).map(l).reduce((S,B)=>S+B,0)}function s(m,S,B=!1){if(Je.has(m))return[];if(!X.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.map((x,q)=>s(x,S[q])).flat():"toFields"in m?m.toFields(S):(B?o:Object.keys(m)).map(x=>s(m[x],S[x])).flat()}function u(m,S,B=!1){if(m===Number)return[S??0];if(m===String)return[S??""];if(m===Boolean)return[S??!1];if(m===BigInt)return[S??0n];if(m==null)return[];if(!X.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.map((x,q)=>u(x,S?.[q])):"toAuxiliary"in m?m.toAuxiliary(S):(B?o:Object.keys(m)).map(x=>u(m[x],S?.[x]))}function p(m,S,B=[],x=!1){if(m===Number||m===String||m===Boolean||m===BigInt)return B[0];if(m==null)return m;if(!X.has(typeof m))throw Error(`provable: unsupported type "${m}"`);if(Array.isArray(m)){let Z=[],ee=0,re=0;for(let ue of m){let ce=l(ue);Z.push(p(ue,S.slice(re,re+ce),B[ee])),re+=ce,ee++}return Z}if("fromFields"in m)return m.fromFields(S,B);let q=x?o:Object.keys(m),be=p(q.map(Z=>m[Z]),S,B);return Object.fromEntries(q.map((Z,ee)=>[Z,be[ee]]))}function a(m,S,B=!1){if(!Je.has(m)){if(!X.has(typeof m))throw Error(`provable: unsupported type "${m}"`);return Array.isArray(m)?m.forEach((x,q)=>a(x,S[q])):"check"in m?m.check(S):(B?o:Object.keys(m)).forEach(x=>a(m[x],S[x]))}}let c=Z0("toValue"),d=Z0("fromValue"),{empty:f,fromJSON:y,toJSON:h,toInput:b}=n(r);return i?.isPure===!0?{sizeInFields:()=>l(r),toFields:m=>s(r,m,!0),toAuxiliary:()=>[],fromFields:m=>p(r,m,[],!0),check:m=>a(r,m,!0),toValue(m){return c(r,m)},fromValue(m){return d(r,m)},toInput:m=>b(m),toJSON:m=>h(m),fromJSON:m=>y(m),empty:()=>f()}:{sizeInFields:()=>l(r),toFields:m=>s(r,m,!0),toAuxiliary:m=>u(r,m,!0),fromFields:(m,S)=>p(r,m,S,!0),check:m=>a(r,m,!0),toValue(m){return c(r,m)},fromValue(m){return d(r,m)},toInput:m=>b(m),toJSON:m=>h(m),fromJSON:m=>y(m),empty:()=>f()}}function n(r){let i=typeof r=="object"&&r!==null?Object.keys(r):[],o=new Set([Number,String,Boolean,BigInt,null,void 0]);if(!o.has(r)&&!X.has(typeof r))throw Error(`provable: unsupported type "${r}"`);function l(a,c,d=!1){if(o.has(a))return{};if(!X.has(typeof a))throw Error(`provable: unsupported type "${a}"`);return Array.isArray(a)?a.map((f,y)=>l(f,c[y])).reduce(e.append,e.empty):"toInput"in a?a.toInput(c):"toFields"in a?{fields:a.toFields(c)}:(d?i:Object.keys(a)).map(f=>l(a[f],c[f])).reduce(e.append,e.empty)}function s(a,c,d=!1){if(a===BigInt)return c.toString();if(a===String||a===Number||a===Boolean)return c;if(a==null)return null;if(!X.has(typeof a))throw Error(`provable: unsupported type "${a}"`);return Array.isArray(a)?a.map((f,y)=>s(f,c[y])):"toJSON"in a?a.toJSON(c):Object.fromEntries((d?i:Object.keys(a)).map(f=>[f,s(a[f],c[f])]))}function u(a,c,d=!1){if(a===BigInt)return BigInt(c);if(a===String||a===Number||a===Boolean)return c;if(a==null)return;if(!X.has(typeof a))throw Error(`provable: unsupported type "${a}"`);if(Array.isArray(a))return a.map((h,b)=>u(h,c[b]));if("fromJSON"in a)return a.fromJSON(c);let f=d?i:Object.keys(a),y=u(f.map(h=>a[h]),f.map(h=>c[h]));return Object.fromEntries(f.map((h,b)=>[h,y[b]]))}function p(a){if(a===Number)return 0;if(a===String)return"";if(a===Boolean)return!1;if(a===BigInt)return 0n;if(a==null)return a;if(!X.has(typeof a))throw Error(`provable: unsupported type "${a}"`);return Array.isArray(a)?a.map(p):"empty"in a?a.empty():Object.fromEntries(Object.keys(a).map(c=>[c,p(a[c])]))}return{toInput:a=>l(r,a,!0),toJSON:a=>s(r,a,!0),fromJSON:a=>u(r,a,!0),empty:()=>p(r)}}return{provable:t,signable:n}}function Z0(e){function t(n,r){if(Je.has(n))return r;if(!X.has(typeof n))throw Error(`provable: unsupported type "${n}"`);return Array.isArray(n)?n.map((i,o)=>t(i,r[o])):e in n?n[e](r):Object.fromEntries(Object.keys(n).map(i=>[i,t(n[i],r[i])]))}return t}function zt(){return{get empty(){return{}},append(e,t){return{fields:(e.fields??[]).concat(t.fields??[]),packed:(e.packed??[]).concat(t.packed??[])}}}}var{signable:Vt}=lt();function we(e){return{toInput(t){return{fields:[t],packed:[]}},toJSON(t){return t.toString()},fromJSON(t){if(isNaN(t)||isNaN(parseFloat(t)))throw Error(`fromJSON: expected a numeric string, got "${t}"`);let n=BigInt(t);return e(n),n},empty(){return 0n}}}function me(e,t){let n=Math.ceil(e/8);return ze(V({toBytes(r){return $(r,n)},readBytes(r,i){let o=0n,l=0n,s=Math.min(i+n,r.length);for(let u=i;u<s;u++)o+=BigInt(r[u])<<l,l+=8n;return t(o),[o,s]}}),e)}function X0(e){return ze(V({toBytes(t){return[t?1:0]},readBytes(t,n){let r=t[n];return e(r),[r===1,n+1]}}),1)}var $0=J.sizeInBits,G0=0x40000000000000000000000000000000224698fc094cf91b992d30ed00000000n,W0=st(0n,J.modulus,"Field"),F2=Lt(new Set([0n,1n]),"Bool"),T2=Lt(new Set([0,1]),"Bool"),Jt=Lt(new Set([1n,G0]),"Sign"),U2=me(J.sizeInBits,W0),P2=we(W0),v=Ae(function(t){return g(BigInt(t),J.modulus)},{...P2,...U2,...J,toBigint:e=>e}),C=Ae(function(t){return t},{...X0(T2),fromBigint(e){return F2(e),e!==0n},toBigint(e){return e?1n:0n},toInput(e){return{fields:[],packed:[[C.toBigint(e),1]]}},toBoolean(e){return e},toJSON(e){return e},fromJSON(e){return e},empty(){return!1},sizeInBytes:1,fromField(e){return C.fromBigint(e)}});function j0(e){let t=(1n<<BigInt(e))-1n,n=st(0n,1n<<BigInt(e),`UInt${e}`),r=me(e,n),i=Math.ceil(e/8);return Ae(function(l){let s=BigInt(l);return n(s),s},{...we(n),...r,toInput(o){return{fields:[],packed:[[o,e]]}},maxValue:t,random(){return r.fromBytes([...Qe(i)])}})}var D=j0(32),ne=j0(64),Le=Ae(function(t){if(t!==1&&t!==-1)throw Error("Sign: input must be 1 or -1.");return g(BigInt(t),J.modulus)},{...we(Jt),...me(1,Jt),empty(){return 1n},toInput(e){return{fields:[],packed:[[e===1n?1n:0n,1]]}},fromFields([e]){return e===0n?1n:(Jt(e),e)},toJSON(e){return e===1n?"Positive":"Negative"},fromJSON(e){if(e!=="Positive"&&e!=="Negative")throw Error("Sign: invalid input");return e==="Positive"?1n:G0}});function Ae(e,t){return Object.assign(e,t)}function st(e,t,n){return r=>{if(r<e)throw Error(`${n}: inputs smaller than ${e} are not allowed, got ${r}`);if(r>=t)throw Error(`${n}: inputs larger than ${t-1n} are not allowed, got ${r}`)}}function Lt(e,t){return n=>{if(!e.has(n))throw Error(`${t}: input must be one of ${[...e].join(", ")}, got ${n}`)}}var Ie={field:1,scalar:1,publicKey:1,signature:1},A={toProjective({x:e,y:t}){return W.fromAffine({x:e,y:t,infinity:!1})},fromProjective(e){let{x:t,y:n,infinity:r}=W.toAffine(e);if(r)throw Error("Group.fromProjective: point is infinity");return{x:t,y:n}},get generatorMina(){return A.fromProjective(W.one)},scale(e,t){return A.fromProjective(W.scale(A.toProjective(e),t))},b:W.b,toFields({x:e,y:t}){return[e,t]}},C2=j(v,Ie.field),H2=j(O0(N({x:C2,isOdd:C},["x","isOdd"]),({x:e})=>{let{mul:t,add:n}=v,r=n(t(e,t(e,e)),W.b);if(!v.isSquare(r))throw Error("PublicKey: not a valid group element")}),Ie.publicKey),k={...Vt({x:v,isOdd:C}),...at(H2,M.publicKey),toJSON(e){return k.toBase58(e)},fromJSON(e){return k.fromBase58(e)},toGroup({x:e,isOdd:t}){let{mul:n,add:r}=v,i=r(n(e,n(e,e)),W.b),o=v.sqrt(i);if(o===void 0)throw Error("PublicKey.toGroup: not a valid group element");return t!==!!(o&1n)&&(o=v.negate(o)),{x:e,y:o}},fromGroup({x:e,y:t}){let n=!!(t&1n);return{x:e,isOdd:n}},equal(e,t){return e.x===t.x&&e.isOdd===t.isOdd},toInputLegacy({x:e,isOdd:t}){return{fields:[e],bits:[!!t]}}},Y0=st(0n,te.modulus,"Scalar"),I=Ae(function(t){return g(BigInt(t),te.modulus)},{...we(Y0),...me(te.sizeInBits,Y0),...te}),Q0=j(I,Ie.scalar),N2=Q(Q0,M.privateKey),F={...I,...Vt(I),...N2,...Q0,toPublicKey(e){return k.fromGroup(A.scale(A.generatorMina,e))},convertPrivateKeyToBase58WithMod:_2},R2=me(256,()=>{}),M2=Q(j(R2,Ie.scalar),M.privateKey);function _2(e){let t=M2.fromBase58(e);return t=g(t,te.modulus),F.toBase58(t)}function ut(e){return e.hasOwnProperty("to")&&e.hasOwnProperty("from")&&e.hasOwnProperty("fee")&&e.hasOwnProperty("nonce")}function e1(e){return e.hasOwnProperty("zkappCommand")&&e.hasOwnProperty("feePayer")}function t1(e){return ut(e)&&e.hasOwnProperty("amount")}function n1(e){return ut(e)&&!e.hasOwnProperty("amount")}function Dt(e){return typeof e=="object"&&"field"in e&&"scalar"in e}function r1(e){return e.data.hasOwnProperty("zkappCommand")&&e.data.hasOwnProperty("feePayer")&&typeof e.signature=="string"}function i1(e){return ut(e.data)&&Dt(e.signature)&&e.data.hasOwnProperty("amount")}function o1(e){return ut(e.data)&&Dt(e.signature)&&!e.data.hasOwnProperty("amount")}function a1(e){return typeof e.data=="string"&&Dt(e.signature)}function l1({Field:e,Poseidon:t}){function n(){return[e(0),e(0),e(0)]}function r(a){return t.update(n(),[Be(e,a)])}function i(a,c){let d=r(a);return t.update(d,c)[0]}function o(a){return r(a)[0]}let l={empty(){return{hash:o("MinaZkappEventsEmpty"),data:[]}},pushEvent(a,c){let d=i(T.event,c);return{hash:i(T.events,[a.hash,d]),data:[c,...a.data]}},fromList(a){return[...a].reverse().reduce(l.pushEvent,l.empty())},hash(a){return l.fromList(a).hash}},s={...l,...ct({empty:l.empty,toValue(a){return a.map(c=>c.map(d=>e.toBigint(d)))},fromValue(a){return a.map(c=>c.map(d=>e(d)))},toJSON(a){return a.map(c=>c.map(d=>e.toJSON(d)))},fromJSON(a){let c=a.map(f=>f.map(y=>e.fromJSON(y))),d=l.hash(c);return{data:c,hash:d}},Field:e})},u={empty(){return{hash:o("MinaZkappActionsEmpty"),data:[]}},pushEvent(a,c){let d=i(T.event,c);return{hash:i(T.sequenceEvents,[a.hash,d]),data:[c,...a.data]}},fromList(a){return[...a].reverse().reduce(u.pushEvent,u.empty())},hash(a){return this.fromList(a).hash},emptyActionState(){return o("MinaZkappActionStateEmptyElt")},updateSequenceState(a,c){return i(T.sequenceEvents,[a,c])}},p={...u,...ct({empty:u.empty,toValue(a){return a.map(c=>c.map(d=>e.toBigint(d)))},fromValue(a){return a.map(c=>c.map(d=>e(d)))},toJSON(a){return a.map(c=>c.map(d=>e.toJSON(d)))},fromJSON(a){let c=a.map(f=>f.map(y=>e.fromJSON(y))),d=u.hash(c);return{data:c,hash:d}},Field:e})};return{Events:s,Actions:p}}function ct({empty:e,toValue:t,fromValue:n,toJSON:r,fromJSON:i,Field:o}){return{empty:e,sizeInFields(){return 1},toFields({hash:l}){return[l]},toAuxiliary(l){return[l?.data??e().data]},fromFields([l],[s]){return{data:s,hash:l}},toValue({data:l,hash:s}){return{data:t(l),hash:o.toBigint(s)}},fromValue({data:l,hash:s}){return{data:n(l),hash:o(s)}},toJSON({data:l}){return r(l)},fromJSON(l){return i(l)},check(){},toInput({hash:l}){return{fields:[l]}}}}var O2=6;function u1({Field:e,Bool:t,HashHelpers:n,packToFields:r}){let{signable:i}=lt(),o=q0(e),l=i(e);return{TokenId:s1(l,o.TokenId,e(K2)),StateHash:s1(l,o.StateHash),TokenSymbol:z2(i({field:e,symbol:String}),e),AuthRequired:V2(i({constant:t,signatureNecessary:t,signatureSufficient:t}),t),ZkappUri:J2(e,n,r)}}var K2=1;function s1(e,t,n){return{...e,empty:n!==void 0?()=>n:e.empty,toJSON(r){return t.toBase58(r)},fromJSON(r){return t.fromBase58(r)}}}function z2(e,t){return{...e,toInput({field:r}){return{packed:[[r,48]]}},toJSON({symbol:r}){return r},fromJSON(r){let i=de(r);if(i>O2)throw Error(`Token symbol ${r} should be a maximum of 6 bytes, but is ${i}`);return{symbol:r,field:Be(t,r)}}}}function V2(e,t){return{...e,empty(){return{constant:t(!0),signatureNecessary:t(!1),signatureSufficient:t(!0)}},toJSON(n){let r=Number(t.toJSON(n.constant)),i=Number(t.toJSON(n.signatureNecessary)),o=Number(t.toJSON(n.signatureSufficient));switch(`${r}${i}${o}`){case"110":return"Impossible";case"101":return"None";case"000":return"Proof";case"011":return"Signature";case"001":return"Either";default:throw Error("Unexpected permission")}},fromJSON(n){let i={Impossible:"110",None:"101",Proof:"000",Signature:"011",Either:"001"}[n];if(i===void 0)throw Error("Unexpected permission");let[o,l,s]=i.split("").map(u=>t(!!Number(u)));return{constant:o,signatureNecessary:l,signatureSufficient:s}}}}function J2(e,t,n){function r(i){let o=fe(Y(i));o.push(!0);let l={packed:o.map(u=>[e(Number(u)),1])},s=n(l);return t.hashWithPrefix(T.zkappUri,s)}return ct({empty(){return{data:"",hash:t.hashWithPrefix(T.zkappUri,[e(0),e(0)])}},toValue(i){return i},fromValue(i){return i},toJSON(i){return i},fromJSON(i){return{data:i,hash:r(i)}},Field:e})}function L2(e){let{potentialXs:t,tryDecode:n}=F0;return t(e).map(i=>n(i)).find(i=>i)}function D2(e){return t=>{let n=e(t),r=L2(n);if(r===void 0)return;let o=(r.y&1n)===1n?J.negate(r.y):r.y;return{x:r.x,y:o}}}var c1=f1(J,N0),ye={...c1,hashToGroup:D2(c1.hash)},p1=f1(J,R0);function f1(e,{fullRounds:t,partialRounds:n,hasInitialRoundConstant:r,stateSize:i,rate:o,power:l,roundConstants:s,mds:u}){if(n!==0)throw Error("we don't support partial rounds");tt(o,"rate must be a positive integer"),tt(t,"fullRounds must be a positive integer"),tt(l,"power must be a positive integer");let p=BigInt(l),a=s.map(b=>b.map(BigInt)),c=u.map(b=>b.map(BigInt));function d(){return Array(i).fill(0n)}function f(b){return y(d(),b)[0]}function y([...b],m){if(m.length===0)return h(b),b;let S=Math.ceil(m.length/o)*o;m=m.concat(Array(S-m.length).fill(0n));for(let B=0;B<S;B+=o){for(let x=0;x<o;x++)b[x]=e.add(b[x],m[B+x]);h(b)}return b}function h(b){let m=0;if(r){for(let S=0;S<i;S++)b[S]=e.add(b[S],a[0][S]);m=1}for(let S=0;S<t;S++){for(let x=0;x<i;x++)b[x]=e.power(b[x],p);let B=[...b];for(let x=0;x<i;x++)b[x]=e.dot(c[x],B),b[x]=e.add(b[x],a[S+m][x])}}return{initialState:d,update:y,hash:f}}function qt(e,t){function n(o){return t.update(t.initialState(),[Be(e,o)])}function r(o){return n(o)[0]}function i(o,l){let s=n(o);return t.update(s,l)[0]}return{salt:n,emptyHashWithPrefix:r,hashWithPrefix:i}}var Zt=zt(),pt=qt(v,ye),{hashWithPrefix:ie}=pt,d1=qt(v,p1);function he({fields:e=[],packed:t=[]}){if(t.length===0)return e;let n=[],r=0n,i=0;for(let[o,l]of t)i+=l,i<255?r=r*(1n<<BigInt(l))+o:(n.push(r),i=l,r=o);return n.push(r),e.concat(n)}function ft({fields:e,bits:t}){let n=[];for(;t.length>0;){let r=t.splice(0,$0-1),i=v.fromBits(r);n.push(i)}return e.concat(n)}function m1({fields:e,bits:t}){return e.map(v.toBits).flat().concat(t)}var H={empty(){return{fields:[],bits:[]}},bits(e){return{fields:[],bits:e}},append(e,t){return{fields:(e.fields??[]).concat(t.fields??[]),bits:(e.bits??[]).concat(t.bits??[])}}};var{TokenId:y1,StateHash:h1,TokenSymbol:g1,AuthRequired:b1,ZkappUri:S1}=u1({Field:v,Bool:C,HashHelpers:pt,packToFields:he}),{Events:k1,Actions:Xt}=l1({Field:v,Poseidon:ye}),v1={...v,empty:Xt.emptyActionState},x1={...v,empty:()=>v(xe.dummyVerificationKeyHash)},E1={...v,empty:()=>pt.emptyHashWithPrefix("CodaReceiptEmpty")},B1={...D,empty:()=>D(H0.txnVersion)};var dt={sizeInFields:()=>0,toFields:()=>[],toAuxiliary:()=>[],fromFields:()=>null,check:()=>{},toInput:()=>({}),toJSON:()=>null,fromJSON:()=>null,empty:()=>null,toValue:()=>null,fromValue:()=>null},h6={...dt,fromFields:()=>{},toJSON:()=>null,fromJSON:()=>{},empty:()=>{},toValue:()=>{},fromValue:()=>{}},$t=new Set(["number","string","null"]);var Gt={number:{...dt,toAuxiliary:(e=0)=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t,empty:()=>0,toValue:e=>e,fromValue:e=>e},string:{...dt,toAuxiliary:(e="")=>[e],toJSON:e=>e,fromJSON:e=>e,fromFields:(e,[t])=>t,empty:()=>"",toValue:e=>e,fromValue:e=>e},null:dt};function w1(e,t){let n=e.Field;function r(a,c,d){return De(e,t,a,c,d)}function i(a){return{toJSON(c){return o(a,c)},fromJSON(c){return l(a,c)},toInput(c){return u(a,c)},empty(){return s(a)}}}function o(a,c){return r({map(d,f){return d.toJSON(f)},reduceArray(d){return d},reduceObject(d,f){return f},reduceFlaggedOption({isSome:d,value:f}){return d?f:null},reduceOrUndefined(d){return d??null}},a,c)}function l(a,c){let{checkedTypeName:d}=a;if(d)return t[d].fromJSON(c);if(a.type==="array"){let f=a;return c.map(y=>l(f.inner,y))}if(a.type==="option"){let f=a;switch(f.optionType){case"closedInterval":case"flaggedOption":{let y=e.Bool.fromJSON(c!==null),h;if(c!==null)h=l(f.inner,c);else if(h=s(f.inner),f.optionType==="closedInterval"){let b=f.inner.entries.lower,m=e[b.type];h.lower=m.fromJSON(f.rangeMin),h.upper=m.fromJSON(f.rangeMax)}return{isSome:y,value:h}}case"orUndefined":return c===null?void 0:l(f.inner,c);default:throw Error("bug")}}if(a.type==="object"){let{keys:f,entries:y}=a,h={};for(let b=0;b<f.length;b++){let m=y[f[b]];h[f[b]]=l(m,c[f[b]])}return h}return $t.has(a.type)?Gt[a.type].fromJSON(c):e[a.type].fromJSON(c)}function s(a){return r({map(c){return c.empty()},reduceArray(c){return c},reduceObject(c,d){return d},reduceFlaggedOption({isSome:c,value:d},f){if(f.optionType==="closedInterval"){let y=f.inner.entries.lower,h=e[y.type];d.lower=h.fromJSON(f.rangeMin),d.upper=h.fromJSON(f.rangeMax)}return{isSome:c,value:d}},reduceOrUndefined(){}},a,void 0)}function u(a,c){return r({map(d,f){return d.toInput(f)},reduceArray(d){let f={fields:[],packed:[]};for(let{fields:y,packed:h}of d)y&&f.fields.push(...y),h&&f.packed.push(...h);return f},reduceObject(d,f){let y={fields:[],packed:[]};for(let h of d){let{fields:b,packed:m}=f[h];b&&y.fields.push(...b),m&&y.packed.push(...m)}return y},reduceFlaggedOption({isSome:d,value:f}){return{fields:f.fields,packed:d.packed.concat(f.packed??[])}},reduceOrUndefined(d){return{}}},a,c)}function p(a,c){return r({map(d,f){return d.toJSON(f)},reduceArray(d){return d.length===0||d.every(f=>f===null)?null:d},reduceObject(d,f){for(let y in f)f[y]===null&&delete f[y];return Object.keys(f).length===0?null:f},reduceFlaggedOption({isSome:d,value:f}){return d?f:null},reduceOrUndefined(d){return d??null}},a,c)}return{signableFromLayout:i,toInput:u,toJSON:o,fromJSON:l,empty:s,toJSONEssential:p}}function De(e,t,n,r,i){let{checkedTypeName:o}=r;if(o)return n.map(t[o],i,o);if(r.type==="array"){let l=r,s=i;l.staticLength!==null&&s===void 0&&(s=Array(l.staticLength).fill(void 0));let u=s?.map(p=>De(e,t,n,l.inner,p))??[];return n.reduceArray(u,l)}if(r.type==="option"){let{optionType:l,inner:s}=r;switch(l){case"closedInterval":case"flaggedOption":let u=i;return n.reduceFlaggedOption({isSome:n.map(e.Bool,u?.isSome,"Bool"),value:De(e,t,n,s,u?.value)},r);case"orUndefined":let p=i===void 0?void 0:De(e,t,n,s,i);return n.reduceOrUndefined(p,s);default:throw Error("bug")}}if(r.type==="object"){let{keys:l,entries:s}=r,u=i,p={};return l.forEach(a=>{p[a]=De(e,t,n,s[a],u?.[a])}),n.reduceObject(l,p)}return $t.has(r.type)?n.map(Gt[r.type],i,r.type):n.map(e[r.type],i,r.type)}var mt={ZkappCommand:{type:"object",name:"ZkappCommand",docs:null,keys:["feePayer","accountUpdates","memo"],entries:{feePayer:{type:"object",name:"ZkappFeePayer",docs:null,keys:["body","authorization"],entries:{body:{type:"object",name:"FeePayerBody",docs:null,keys:["publicKey","fee","validUntil","nonce"],entries:{publicKey:{type:"PublicKey"},fee:{type:"UInt64"},validUntil:{type:"option",optionType:"orUndefined",inner:{type:"UInt32"}},nonce:{type:"UInt32"}},docEntries:{publicKey:null,fee:null,validUntil:null,nonce:null}},authorization:{type:"string"}},docEntries:{body:null,authorization:null}},accountUpdates:{type:"array",inner:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","actions","callData","callDepth","preconditions","useFullCommitment","implicitAccountCreationFee","mayUseToken","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"object",name:"VerificationKeyPermission",docs:null,keys:["auth","txnVersion"],entries:{auth:{type:"AuthRequired"},txnVersion:{type:"UInt32",checkedType:{type:"UInt32"},checkedTypeName:"TransactionVersion"}},docEntries:{auth:null,txnVersion:null}},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Anonymous",docs:null,keys:["symbol","field"],entries:{symbol:{type:"string"},field:{type:"Field"}},docEntries:{symbol:"",field:""}},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"StateHash"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null}},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},actions:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Actions"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account","validWhile"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","actionState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},actionState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ActionState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,actionState:null,provedState:null,isNew:null}},validWhile:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{network:null,account:null,validWhile:null}},useFullCommitment:{type:"Bool"},implicitAccountCreationFee:{type:"Bool"},mayUseToken:{type:"object",name:"MayUseToken",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:null,inheritFromParent:null}},authorizationKind:{type:"object",name:"AuthorizationKindStructured",docs:null,keys:["isSigned","isProved","verificationKeyHash"],entries:{isSigned:{type:"Bool"},isProved:{type:"Bool"},verificationKeyHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"VerificationKeyHash"}},docEntries:{isSigned:null,isProved:null,verificationKeyHash:null}}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,actions:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,implicitAccountCreationFee:null,mayUseToken:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},staticLength:null},memo:{type:"string"}},docEntries:{feePayer:null,accountUpdates:null,memo:null}},AccountUpdate:{type:"object",name:"ZkappAccountUpdate",docs:"An account update in a zkApp transaction",keys:["body","authorization"],entries:{body:{type:"object",name:"AccountUpdateBody",docs:null,keys:["publicKey","tokenId","update","balanceChange","incrementNonce","events","actions","callData","callDepth","preconditions","useFullCommitment","implicitAccountCreationFee","mayUseToken","authorizationKind"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},update:{type:"object",name:"AccountUpdateModification",docs:null,keys:["appState","delegate","verificationKey","permissions","zkappUri","tokenSymbol","timing","votingFor"],entries:{appState:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},verificationKey:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},permissions:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"object",name:"VerificationKeyPermission",docs:null,keys:["auth","txnVersion"],entries:{auth:{type:"AuthRequired"},txnVersion:{type:"UInt32",checkedType:{type:"UInt32"},checkedTypeName:"TransactionVersion"}},docEntries:{auth:null,txnVersion:null}},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}}},zkappUri:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"ZkappUri"}},tokenSymbol:{type:"option",optionType:"flaggedOption",inner:{type:"string",checkedType:{type:"object",name:"Anonymous",docs:null,keys:["symbol","field"],entries:{symbol:{type:"string"},field:{type:"Field"}},docEntries:{symbol:"",field:""}},checkedTypeName:"TokenSymbol"}},timing:{type:"option",optionType:"flaggedOption",inner:{type:"object",name:"Timing",docs:null,keys:["initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}}},votingFor:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"StateHash"}}},docEntries:{appState:null,delegate:null,verificationKey:null,permissions:null,zkappUri:null,tokenSymbol:null,timing:null,votingFor:null}},balanceChange:{type:"object",name:"BalanceChange",docs:null,keys:["magnitude","sgn"],entries:{magnitude:{type:"UInt64"},sgn:{type:"Sign"}},docEntries:{magnitude:null,sgn:null}},incrementNonce:{type:"Bool"},events:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Events"},actions:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null,checkedType:{type:"object",name:"Events",docs:null,keys:["data","hash"],entries:{data:{type:"array",inner:{type:"array",inner:{type:"Field"},staticLength:null},staticLength:null},hash:{type:"Field"}},docEntries:{data:null,hash:null}},checkedTypeName:"Actions"},callData:{type:"Field"},callDepth:{type:"number"},preconditions:{type:"object",name:"Preconditions",docs:null,keys:["network","account","validWhile"],entries:{network:{type:"object",name:"NetworkPrecondition",docs:null,keys:["snarkedLedgerHash","blockchainLength","minWindowDensity","totalCurrency","globalSlotSinceGenesis","stakingEpochData","nextEpochData"],entries:{snarkedLedgerHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},blockchainLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},minWindowDensity:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},globalSlotSinceGenesis:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},stakingEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}},nextEpochData:{type:"object",name:"EpochDataPrecondition",docs:null,keys:["ledger","seed","startCheckpoint","lockCheckpoint","epochLength"],entries:{ledger:{type:"object",name:"EpochLedgerPrecondition",docs:null,keys:["hash","totalCurrency"],entries:{hash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},totalCurrency:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"CurrencyAmountInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}}},docEntries:{hash:null,totalCurrency:null}},seed:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},startCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},lockCheckpoint:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},epochLength:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"LengthInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{ledger:null,seed:null,startCheckpoint:null,lockCheckpoint:null,epochLength:null}}},docEntries:{snarkedLedgerHash:null,blockchainLength:null,minWindowDensity:null,totalCurrency:null,globalSlotSinceGenesis:null,stakingEpochData:null,nextEpochData:null}},account:{type:"object",name:"AccountPrecondition",docs:null,keys:["balance","nonce","receiptChainHash","delegate","state","actionState","provedState","isNew"],entries:{balance:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"18446744073709551615",inner:{type:"object",name:"BalanceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt64"},upper:{type:"UInt64"}},docEntries:{lower:null,upper:null}}},nonce:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"NonceInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}},receiptChainHash:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},delegate:{type:"option",optionType:"flaggedOption",inner:{type:"PublicKey"}},state:{type:"array",inner:{type:"option",optionType:"flaggedOption",inner:{type:"Field"}},staticLength:8},actionState:{type:"option",optionType:"flaggedOption",inner:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ActionState"}},provedState:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}},isNew:{type:"option",optionType:"flaggedOption",inner:{type:"Bool"}}},docEntries:{balance:null,nonce:null,receiptChainHash:null,delegate:null,state:null,actionState:null,provedState:null,isNew:null}},validWhile:{type:"option",optionType:"closedInterval",rangeMin:"0",rangeMax:"4294967295",inner:{type:"object",name:"GlobalSlotSinceGenesisInterval",docs:null,keys:["lower","upper"],entries:{lower:{type:"UInt32"},upper:{type:"UInt32"}},docEntries:{lower:null,upper:null}}}},docEntries:{network:null,account:null,validWhile:null}},useFullCommitment:{type:"Bool"},implicitAccountCreationFee:{type:"Bool"},mayUseToken:{type:"object",name:"MayUseToken",docs:null,keys:["parentsOwnToken","inheritFromParent"],entries:{parentsOwnToken:{type:"Bool"},inheritFromParent:{type:"Bool"}},docEntries:{parentsOwnToken:null,inheritFromParent:null}},authorizationKind:{type:"object",name:"AuthorizationKindStructured",docs:null,keys:["isSigned","isProved","verificationKeyHash"],entries:{isSigned:{type:"Bool"},isProved:{type:"Bool"},verificationKeyHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"VerificationKeyHash"}},docEntries:{isSigned:null,isProved:null,verificationKeyHash:null}}},docEntries:{publicKey:null,tokenId:null,update:null,balanceChange:null,incrementNonce:null,events:null,actions:null,callData:null,callDepth:null,preconditions:null,useFullCommitment:null,implicitAccountCreationFee:null,mayUseToken:null,authorizationKind:null}},authorization:{type:"object",name:"Control",docs:null,keys:["proof","signature"],entries:{proof:{type:"option",optionType:"orUndefined",inner:{type:"string"}},signature:{type:"option",optionType:"orUndefined",inner:{type:"string"}}},docEntries:{proof:null,signature:null}}},docEntries:{body:null,authorization:null}},Account:{type:"object",name:"Account",docs:null,keys:["publicKey","tokenId","tokenSymbol","balance","nonce","receiptChainHash","delegate","votingFor","timing","permissions","zkapp"],entries:{publicKey:{type:"PublicKey"},tokenId:{type:"TokenId"},tokenSymbol:{type:"string"},balance:{type:"UInt64"},nonce:{type:"UInt32"},receiptChainHash:{type:"Field",checkedType:{type:"Field"},checkedTypeName:"ReceiptChainHash"},delegate:{type:"option",optionType:"orUndefined",inner:{type:"PublicKey"}},votingFor:{type:"Field"},timing:{type:"object",name:"AccountTiming",docs:null,keys:["isTimed","initialMinimumBalance","cliffTime","cliffAmount","vestingPeriod","vestingIncrement"],entries:{isTimed:{type:"Bool"},initialMinimumBalance:{type:"UInt64"},cliffTime:{type:"UInt32"},cliffAmount:{type:"UInt64"},vestingPeriod:{type:"UInt32"},vestingIncrement:{type:"UInt64"}},docEntries:{isTimed:null,initialMinimumBalance:null,cliffTime:null,cliffAmount:null,vestingPeriod:null,vestingIncrement:null}},permissions:{type:"object",name:"Permissions",docs:null,keys:["editState","access","send","receive","setDelegate","setPermissions","setVerificationKey","setZkappUri","editActionState","setTokenSymbol","incrementNonce","setVotingFor","setTiming"],entries:{editState:{type:"AuthRequired"},access:{type:"AuthRequired"},send:{type:"AuthRequired"},receive:{type:"AuthRequired"},setDelegate:{type:"AuthRequired"},setPermissions:{type:"AuthRequired"},setVerificationKey:{type:"object",name:"VerificationKeyPermission",docs:null,keys:["auth","txnVersion"],entries:{auth:{type:"AuthRequired"},txnVersion:{type:"UInt32",checkedType:{type:"UInt32"},checkedTypeName:"TransactionVersion"}},docEntries:{auth:null,txnVersion:null}},setZkappUri:{type:"AuthRequired"},editActionState:{type:"AuthRequired"},setTokenSymbol:{type:"AuthRequired"},incrementNonce:{type:"AuthRequired"},setVotingFor:{type:"AuthRequired"},setTiming:{type:"AuthRequired"}},docEntries:{editState:null,access:null,send:null,receive:null,setDelegate:null,setPermissions:null,setVerificationKey:null,setZkappUri:null,editActionState:null,setTokenSymbol:null,incrementNonce:null,setVotingFor:null,setTiming:null}},zkapp:{type:"option",optionType:"orUndefined",inner:{type:"object",name:"ZkappAccount",docs:null,keys:["appState","verificationKey","zkappVersion","actionState","lastActionSlot","provedState","zkappUri"],entries:{appState:{type:"array",inner:{type:"Field"},staticLength:8},verificationKey:{type:"option",optionType:"orUndefined",inner:{type:"object",name:"VerificationKeyWithHash",docs:null,keys:["data","hash"],entries:{data:{type:"string"},hash:{type:"Field"}},docEntries:{data:null,hash:null}}},zkappVersion:{type:"UInt32"},actionState:{type:"array",inner:{type:"Field"},staticLength:5},lastActionSlot:{type:"UInt32"},provedState:{type:"Bool"},zkappUri:{type:"string"}},docEntries:{appState:null,verificationKey:null,zkappVersion:null,actionState:null,lastActionSlot:null,provedState:null,zkappUri:null}}}},docEntries:{publicKey:null,tokenId:null,tokenSymbol:null,balance:null,nonce:null,receiptChainHash:null,delegate:null,votingFor:null,timing:null,permissions:null,zkapp:null}}};var q2={PublicKey:k,UInt64:ne,UInt32:D,TokenId:y1,Field:v,Bool:C,AuthRequired:b1,Sign:Le},Z2={TransactionVersion:B1,ZkappUri:S1,TokenSymbol:g1,StateHash:h1,Events:k1,Actions:Xt,ActionState:v1,VerificationKeyHash:x1,ReceiptChainHash:E1},{signableFromLayout:Wt,toJSONEssential:A6,empty:I6}=w1(q2,Z2),ge=Wt(mt.ZkappCommand),jt=Wt(mt.AccountUpdate),F6=Wt(mt.Account);function X2(e){let t=de(e);if(t>32)throw Error("Memo.fromString: string too long");return`${String.fromCharCode(t)}${e}`+"\0".repeat(32-t)}function $2(e){let t=de(e);if(t!==34)throw Error(`Memo.toString: length ${t} does not equal 34`);if(e[0]!=="")throw Error("Memo.toString: expected memo to start with 0x01 byte");let n=e.charCodeAt(1);if(n>32)throw Error("Memo.toString: invalid length encoding");let r=Y(e).slice(2,2+n);return ot(r)}function G2(e){let t=R.toBits(e),n=ft(H.bits(t));return ie(T.zkappMemo,n)}var Yt=34,A1=V({toBytes(e){return Y(e)},readBytes(e,t){let n=t+Yt;return[ot(e.slice(t,n)),n]}}),R={fromString:X2,toString:$2,hash:G2,...ze(A1,Yt*8),...Q(A1,M.userCommandMemo),sizeInBytes:Yt,empty(){return R.fromString("")},toValidString(e=""){if(de(e)>32)throw Error("Memo: string too long");return e}};var r0=It(n0(),1);var St={toString(e){return typeof e=="string"?e:e.custom}};var o3=0x01n,a3=0x00n,Z1=j(N({r:v,s:I},["r","s"]),Ie.signature),U={...Z1,...Q(Z1,M.signature),toJSON({r:e,s:t}){return{field:v.toJSON(e),scalar:I.toJSON(t)}},fromJSON({field:e,scalar:t}){let n=v.fromJSON(e),r=I.fromJSON(t);return{r:n,s:r}},dummy(){return{r:v(1),s:I(1)}}};function i0(e,t,n){return a0({fields:[e]},t,n)}function o0(e,t,n,r){return l0(e,{fields:[t]},n,r)}function a0(e,t,n){let r=A.scale(A.generatorMina,t),i=l3(e,r,t,n);if(I.equal(i,0n))throw Error("sign: derived nonce is 0");let{x:o,y:l}=A.scale(A.generatorMina,i),s=v.isEven(l)?i:I.negate(i),u=X1(e,r,o,n),p=I.add(s,I.mul(u,t));return{r:o,s:p}}function l3(e,t,n,r){let{x:i,y:o}=t,l=v(n),s=G1(r),u=Zt.append(e,{fields:[i,o,l],packed:[s]}),a=he(u).map(v.toBits).flat(),c=it(a),d=(0,r0.blake2b)(Uint8Array.from(c),void 0,32);return d[d.length-1]&=63,I.fromBytes([...d])}function X1(e,t,n,r){let{x:i,y:o}=t,l=Zt.append(e,{fields:[i,o,n]});return ie(j1(r),he(l))}function l0(e,t,n,r){let{r:i,s:o}=e,l=k.toGroup(n),s=X1(t,l,i,r),{scale:u,one:p,sub:a}=W,c=a(u(p,o),u(A.toProjective(l),s));try{let{x:d,y:f}=A.fromProjective(c);return v.isEven(f)&&v.equal(d,i)}catch{return!1}}function s0(e,t,n){let r=A.scale(A.generatorMina,t),i=s3(e,r,t,n);if(I.equal(i,0n))throw Error("sign: derived nonce is 0");let{x:o,y:l}=A.scale(A.generatorMina,i),s=v.isEven(l)?i:I.negate(i),u=$1(e,r,o,n),p=I.add(s,I.mul(u,t));return{r:o,s:p}}function u0(e,t,n,r){try{let{r:i,s:o}=e,l=k.toGroup(n),s=$1(t,l,i,r),{scale:u,one:p,sub:a}=W,c=a(u(p,o),u(A.toProjective(l),s)),{x:d,y:f}=A.fromProjective(c);return v.isEven(f)&&v.equal(d,i)}catch{return!1}}function s3(e,t,n,r){let{x:i,y:o}=t,l=I.toBits(n),s=G1(r)[0],u=fe([Number(s)]),p=H.append(e,{fields:[i,o],bits:[...l,...u]}),a=m1(p),c=it(a),d=(0,r0.blake2b)(Uint8Array.from(c),void 0,32);return d[d.length-1]&=63,I.fromBytes([...d])}function $1(e,t,n,r){let{x:i,y:o}=t,l=H.append(e,{fields:[i,o,n],bits:[]}),s=j1(r);return d1.hashWithPrefix(s,ft(l))}var u3=e=>e.toString(2).padStart(8,"0");function c3(e){let t=e.length,n="";for(let r=t-1;r>=0;r--){let i=e.charCodeAt(r),o=u3(i);n=n.concat(o)}return[BigInt("0b"+n),n.length]}function G1(e){let t=St.toString(e);switch(t){case"mainnet":return[o3,8];case"testnet":return[a3,8];default:return c3(t)}}var W1=e=>{let n="*",r=e.length;if(r<=20){let i=20-r;return e+n.repeat(i)}else return e.substring(0,20)},j1=e=>{let t=St.toString(e);switch(t){case"mainnet":return T.signatureMainnet;case"testnet":return T.signatureTestnet;default:return W1(t+"Signature")}},Y1=e=>{let t=St.toString(e);switch(t){case"mainnet":return T.zkappBodyMainnet;case"testnet":return T.zkappBodyTestnet;default:return W1(t+"ZkappBody")}};function c0(e,t,n){let r=ge.fromJSON(e),{commitment:i,fullCommitment:o}=Q1(r,n),l=F.fromBase58(t),s=r.feePayer.body.publicKey,u=i0(o,l,n);r.feePayer.authorization=U.toBase58(u);for(let p of r.accountUpdates){if(!p.body.authorizationKind.isSigned||!k.equal(p.body.publicKey,s))continue;let{useFullCommitment:a}=p.body,d=i0(a?o:i,l,n);p.authorization={signature:U.toBase58(d)}}return ge.toJSON(r)}function p0(e,t,n){let r=ge.fromJSON(e),{commitment:i,fullCommitment:o}=Q1(r,n),l=k.fromBase58(t),s=U.fromBase58(r.feePayer.authorization),u=o0(s,o,l,n);if(!u)return!1;for(let p of r.accountUpdates){if(!p.body.authorizationKind.isSigned||!k.equal(p.body.publicKey,l))continue;let{useFullCommitment:a}=p.body,c=a?o:i;if(p.authorization.signature===void 0)return!1;let d=U.fromBase58(p.authorization.signature);if(u=o0(d,c,l,n),!u)return!1}return u}function Q1(e,t){if(!m3(e))throw Error("zkapp command: invalid call depth");let n=en(e.accountUpdates),r=p3(n,t),i=R.hash(R.fromBase58(e.memo)),o=f3(e.feePayer,t),l=ie(T.accountUpdateCons,[i,o,r]);return{commitment:r,fullCommitment:l}}function en(e,t=0){let n=t>0?e:[...e],r=[];for(;n.length>0;){let i=n[0];if(i.body.callDepth<t)return r;n.shift();let o=en(n,t+1);r.push({accountUpdate:i,children:o})}return r}function tn(e,t){y3(e);let n=jt.toInput(e),r=he(n);return ie(Y1(t),r)}function p3(e,t){return nn(e,tn,ie,0n,t)}function nn(e,t,n,r,i){let o=r;for(let l of[...e].reverse()){let s=nn(l.children,t,n,r,i),u=t(l.accountUpdate,i),p=n(T.accountUpdateNode,[u,s]);o=n(T.accountUpdateCons,[p,o])}return o}function f3(e,t){let n=d3(e);return tn(n,t)}function d3({body:{fee:e,nonce:t,publicKey:n,validUntil:r},authorization:i}){let{body:o}=jt.empty();return o.publicKey=n,o.balanceChange={magnitude:e,sgn:Le(-1)},o.incrementNonce=C(!0),o.preconditions.network.globalSlotSinceGenesis={isSome:C(!0),value:{lower:D(0),upper:r??D.maxValue}},o.preconditions.account.nonce={isSome:C(!0),value:{lower:t,upper:t}},o.useFullCommitment=C(!0),o.implicitAccountCreationFee=C(!0),o.authorizationKind={isProved:C(!1),isSigned:C(!0),verificationKeyHash:v(xe.dummyVerificationKeyHash)},{body:o,authorization:{signature:i}}}function m3(e){let t=e.accountUpdates.map(r=>r.body.callDepth),n=t.shift()??0;if(n!==0)return!1;for(let r of t){if(r<0||r-n>1)return!1;n=r}return!0}function y3(e){let{isSigned:t,isProved:n,verificationKeyHash:r}=e.body.authorizationKind;if(n&&t)throw Error("Invalid authorization kind: Only one of `isProved` and `isSigned` may be true.");if(!n&&r!==v(xe.dummyVerificationKeyHash))throw Error(`Invalid authorization kind: If \`isProved\` is false, verification key hash must be ${xe.dummyVerificationKeyHash}, got ${r}`)}function kt(e,t,n){let r=$e(e);return rn(r,t,n)}function vt(e,t,n){let r=Ge(e);return rn(r,t,n)}function rn(e,t,n){let r=an(e),i=F.fromBase58(t),o=s0(r,i,n);return U.toJSON(o)}function xt(e,t,n,r){try{return on($e(e),t,n,r)}catch{return!1}}function Et(e,t,n,r){try{return on(Ge(e),t,n,r)}catch{return!1}}function on(e,t,n,r){let i=an(e),o=U.fromJSON(t),l=k.fromBase58(n);return u0(o,i,l,r)}function an({common:e,body:t}){return H.append(g3(e),h3(t))}function h3({tag:e,source:t,receiver:n,amount:r}){return[b3(e),k.toInputLegacy(t),k.toInputLegacy(n),H.bits(ln),H.bits(ne.toBits(r)),H.bits([!1])].reduce(H.append)}function g3({fee:e,feePayer:t,nonce:n,validUntil:r,memo:i}){return[H.bits(ne.toBits(e)),H.bits(ln),k.toInputLegacy(t),H.bits(D.toBits(n)),H.bits(D.toBits(r.value)),H.bits(R.toBits(i))].reduce(H.append)}function b3(e){let t={Payment:0,StakeDelegation:1}[e],n=[t&4,t&2,t&1].map(Boolean);return H.bits(n)}var ln=[!0,...Array(63).fill(!1)];function $e({common:e,body:{receiver:t,amount:n}}){return{common:sn(e),body:{tag:"Payment",source:k.fromJSON(e.feePayer),receiver:k.fromJSON(t),amount:ne.fromJSON(n)}}}function Ge({common:e,body:{newDelegate:t}}){return{common:sn(e),body:{tag:"StakeDelegation",source:k.fromJSON(e.feePayer),receiver:k.fromJSON(t),amount:ne(0)}}}function sn(e){return{fee:ne.fromJSON(e.fee),feePayer:k.fromJSON(e.feePayer),nonce:D.fromJSON(e.nonce),validUntil:{type:"SinceGenesis",value:D.fromJSON(e.validUntil)},memo:R.fromString(e.memo)}}function un(e,t,n){let r=pn(e),i=F.fromBase58(t),o=s0(r,i,n);return U.toJSON(o)}function cn(e,t,n,r){try{let i=pn(e),o=U.fromJSON(t),l=k.fromBase58(n);return u0(o,i,l,r)}catch{return!1}}function pn(e){let t=Y(e).map(n=>fe([n]).reverse()).flat();return H.bits(t)}var f0=It(n0(),1);var dn={r:v(1),s:I(1)};function mn(e,{berkeley:t=!1}={}){if(!t)return F3(e);let n=gn($e(e.data));return hn({signer:k.fromBase58(e.data.common.feePayer),signature:dn,payload:n})}function yn(e,{berkeley:t=!1}={}){if(!t)return T3(e);let n=gn(Ge(e.data));return hn({signer:k.fromBase58(e.data.common.feePayer),signature:dn,payload:n})}function hn(e){let t=I3.toBytes(e),n=(0,f0.blake2b)(Uint8Array.from(t),void 0,32);return bn.toBase58(n)}function gn({common:e,body:t}){let{tag:n,...r}=t;switch(n){case"Payment":return{common:e,body:{type:n,value:{receiver:t.receiver,amount:t.amount}}};case"StakeDelegation":let{receiver:i}=r;return{common:e,body:{type:n,value:{type:"SetDelegate",value:{newDelegate:i}}}}}}var wt=N({x:v,isOdd:C},["x","isOdd"]),S3=Ee([{type:"SinceGenesis",value:rt}]),k3=N({fee:nt,feePayer:wt,nonce:rt,validUntil:S3,memo:_t},["fee","feePayer","nonce","validUntil","memo"]),v3=N({receiver:wt,amount:nt},["receiver","amount"]),x3=N({newDelegate:wt},["newDelegate"]),E3=Ee([{type:"SetDelegate",value:x3}]),B3=Ee([{type:"Payment",value:v3},{type:"StakeDelegation",value:E3}]),w3=N({common:k3,body:B3},["common","body"]),A3=N({r:v,s:I},["r","s"]),I3=N({payload:w3,signer:wt,signature:A3},["payload","signer","signature"]),bn=Q(V({toBytes(e){return[e.length,...e]},readBytes(e){return[Uint8Array.from(e.slice(1)),e.length]}}),M.transactionHash);function F3({data:e,signature:t}){let n=kn($e(e));return Sn({signer:k.fromBase58(e.common.feePayer),signature:U.fromJSON(t),payload:n})}function T3({data:e,signature:t}){let n=kn(Ge(e));return Sn({signer:k.fromBase58(e.common.feePayer),signature:U.fromJSON(t),payload:n})}function Sn(e){let t=M3.toBase58(e),n=Y(t),r=(0,f0.blake2b)(Uint8Array.from(n),void 0,32);return bn.toBase58(r)}function kn({common:e,body:t}){let{tag:n,...r}=t,i={...e,validUntil:e.validUntil.value,feeToken:1n};switch(n){case"Payment":let o={...r,tokenId:1n};return{common:i,body:{type:n,value:o}};case"StakeDelegation":let{source:l,receiver:s}=r;return{common:i,body:{type:n,value:{type:"SetDelegate",value:{delegator:l,newDelegate:s}}}}}}var P=e=>j(e,1),Bt=P(P(nt)),fn=P(P(rt)),U3=P(P(N({fee:P(Bt),feeToken:P(Bt),feePayer:k,nonce:fn,validUntil:fn,memo:P(_t)},["fee","feeToken","feePayer","nonce","validUntil","memo"]))),P3=P(P(N({source:k,receiver:k,tokenId:Bt,amount:P(Bt)},["source","receiver","tokenId","amount"]))),C3=N({delegator:k,newDelegate:k},["delegator","newDelegate"]),H3=P(Ee([{type:"SetDelegate",value:C3}])),N3=P(Ee([{type:"Payment",value:P3},{type:"StakeDelegation",value:H3}])),R3=P(N({common:U3,body:N3},["common","body"])),M3=at(P(P(N({payload:R3,signer:P(k),signature:P(N({r:P(v),s:I},["r","s"]))},["payload","signer","signature"]))),M.signedCommandV1);var En="4294967295";function m0(e){return d0(v,e.x,!!e.isOdd)}function Bn(e){let t=e.length/2,n=e.slice(0,t),r=e.slice(t);return{r:xn(v,n)[0],s:xn(I,r)[0]}}function vn(e){return U.toJSON(Bn(e))}function _3(e){return O3(U.fromJSON(e))}function O3(e){let t=d0(v,e.r),n=d0(I,e.s);return`${t}${n}`}function d0(e,t,n=!1){let r=e.toBytes(t);return r[r.length-1]|=Number(n)<<7,r.map(i=>i.toString(16).padStart(2,"0")).join("")}function xn(e,t){let n=[];for(let i=0;i<t.length;i+=2){let o=parseInt(t[i]+t[i+1],16);n.push(o)}let r=!!(n[n.length-1]>>7);return n[n.length-1]&=127,[e.fromBytes(n),r]}function y0(e,t,n){let r;if(e.payment!==null){let o=wn(e.payment);r=kt(o,t,n)}else if(e.stakeDelegation!==null){let o=An(e.stakeDelegation);r=vt(o,t,n)}else throw Error("signTransaction: Unsupported transaction");let i=k.toBase58(F.toPublicKey(F.fromBase58(t)));return{data:e,signature:_3(r),publicKey:i}}function wn(e){return{common:{fee:e.fee,feePayer:e.from,nonce:e.nonce,validUntil:e.valid_until??En,memo:e.memo??""},body:{receiver:e.to,amount:e.amount}}}function An(e){return{common:{feePayer:e.delegator,fee:e.fee,validUntil:e.valid_until??En,memo:e.memo??"",nonce:e.nonce},body:{newDelegate:e.new_delegate}}}function In(e,t){if(e.data.payment!==null)return xt(wn(e.data.payment),vn(e.signature),e.publicKey,t);if(e.data.stakeDelegation!==null)return Et(An(e.data.stakeDelegation),vn(e.signature),e.publicKey,t);throw Error("verifyTransaction: Unsupported transaction")}function K3(e,t){let n=k.fromBase58(e.publicKey);return{hex_bytes:e.signature,public_key:{hex_bytes:m0(n),curve_type:"pallas"},signature_type:"schnorr_poseidon",signing_payload:t}}function Fn(e,t,n){let r=y0(JSON.parse(e.unsigned_transaction),t,n),i=[K3(r,e.payloads[0])];return{network_identifier:{blockchain:"mina",network:n},unsigned_transaction:e.unsigned_transaction,signatures:i}}function Tn({signature:e,payment:t,stake_delegation:n}){let r=Bn(e),i=U.toBase58(r),[o,l]=(()=>{if(t!==null&&n===null){let u=t;return[{receiver:u.to,source:u.from,kind:"Payment",fee_payer:u.from,fee_token:u.token,fee:u.fee,amount:u.amount,valid_until:u.valid_until,memo:u.memo},u.nonce]}else if(t===null&&n!==null){let u=n;return[{receiver:u.new_delegate,source:u.delegator,kind:"Delegation",fee_payer:u.delegator,fee_token:"1",fee:u.fee,amount:null,valid_until:u.valid_until,memo:u.memo},u.nonce]}else throw Error("rosettaTransactionToSignedCommand: Unsupported transaction")})(),s=(()=>{let u=o.fee_payer,p=o.source,a=o.receiver,c=R.toBase58(R.fromString(o.memo??"")),d={fee:o.fee,fee_payer_pk:u,nonce:l,valid_until:o.valid_until,memo:c};if(o.kind==="Payment")return{common:d,body:["Payment",{source_pk:p,receiver_pk:a,amount:o.amount}]};if(o.kind==="Delegation")return{common:d,body:["Stake_delegation",["Set_delegate",{delegator:p,new_delegate:a}]]};throw Error("rosettaTransactionToSignedCommand has a bug")})();return{signature:i,signer:s.common.fee_payer_pk,payload:s}}function Un(e,t){let n=ye.hash,r=ye.hashToGroup,i=k.toGroup(F.toPublicKey(t)),o=A.generatorMina,l=I.random(),s=r([...e,...A.toFields(i)]);if(!s)throw Error("hashToGroup: Point is undefined");let u=A.scale(s,t),p=A.scale(s,l),a=A.scale(o,l),c=n([...A.toFields(o),...A.toFields(i),...A.toFields(s),...A.toFields(u),...A.toFields(a),...A.toFields(p)]),d=te.add(l,te.mul(t,c));return{publicKey:At(i),private:{c:c.toString(),g_r:At(a),h_m_pk_r:At(p)},public:{nullifier:At(u),s:d.toString()}}}function At({x:e,y:t}){return{x:e.toString(),y:t.toString()}}var V3="4294967295",Pn=class{constructor({network:t}){this.network=t}genKeys(){let t=F.random(),n=F.toPublicKey(t);return{privateKey:F.toBase58(t),publicKey:k.toBase58(n)}}verifyKeypair({privateKey:t,publicKey:n}){let r=F.toPublicKey(F.fromBase58(t)),i=k.fromBase58(n);if(r.x!==i.x||r.isOdd!==i.isOdd)throw Error("Public key not derivable from private key");let o=ge.toJSON(ge.empty());o.feePayer.body.publicKey=n,o.memo=R.toBase58(R.empty());let l=c0(o,t,this.network);if(!p0(l,n,this.network))throw Error("Could not sign a transaction with private key");return!0}derivePublicKey(t){let n=F.fromBase58(t),r=F.toPublicKey(n);return k.toBase58(r)}derivePublicKeyUnsafe(t){let n=F.fromBase58(F.convertPrivateKeyToBase58WithMod(t)),r=F.toPublicKey(n);return k.toBase58(r)}convertPrivateKeyToBase58WithMod(t){return F.convertPrivateKeyToBase58WithMod(t)}signFields(t,n){let r=F.fromBase58(n),i=a0({fields:t},r,"testnet");return{signature:U.toBase58(i),publicKey:k.toBase58(F.toPublicKey(r)),data:t}}verifyFields({data:t,signature:n,publicKey:r}){return l0(U.fromBase58(n),{fields:t},k.fromBase58(r),"testnet")}signMessage(t,n){let r=F.fromBase58(n),i=k.toBase58(F.toPublicKey(r));return{signature:un(t,n,this.network),publicKey:i,data:t}}verifyMessage({data:t,signature:n,publicKey:r}){return cn(t,n,r,this.network)}signRosettaTransaction(t,n){return y0(t,n,this.network)}verifyRosettaTransaction(t){return In(t,this.network)}signPayment(t,n){let{fee:r,to:i,from:o,nonce:l,validUntil:s,memo:u}=Fe(t),p=String(t.amount);return{signature:kt({common:{fee:r,feePayer:o,nonce:l,validUntil:s,memo:u},body:{receiver:i,amount:p}},n,this.network),publicKey:o,data:{to:i,from:o,fee:r,amount:p,nonce:l,memo:u,validUntil:s}}}verifyPayment({data:t,signature:n,publicKey:r}){let{fee:i,to:o,from:l,nonce:s,validUntil:u,memo:p}=Fe(t),a=se(t.amount);return xt({common:{fee:i,feePayer:l,nonce:s,validUntil:u,memo:p},body:{receiver:o,amount:a}},n,r,this.network)}signStakeDelegation(t,n){let{fee:r,to:i,from:o,nonce:l,validUntil:s,memo:u}=Fe(t);return{signature:vt({common:{fee:r,feePayer:o,nonce:l,validUntil:s,memo:u},body:{newDelegate:i}},n,this.network),publicKey:o,data:{to:i,from:o,fee:r,nonce:l,memo:u,validUntil:s}}}verifyStakeDelegation({data:t,signature:n,publicKey:r}){let{fee:i,to:o,from:l,nonce:s,validUntil:u,memo:p}=Fe(t);return Et({common:{fee:i,feePayer:l,nonce:s,validUntil:u,memo:p},body:{newDelegate:o}},n,r,this.network)}hashPayment({data:t,signature:n},r){let{fee:i,to:o,from:l,nonce:s,validUntil:u,memo:p}=Fe(t),a=se(t.amount);return mn({signature:n,data:{common:{fee:i,feePayer:l,nonce:s,validUntil:u,memo:p},body:{receiver:o,amount:a}}},r)}hashStakeDelegation({data:t,signature:n},r){let{fee:i,to:o,from:l,nonce:s,validUntil:u,memo:p}=Fe(t);return yn({signature:n,data:{common:{fee:i,feePayer:l,nonce:s,validUntil:u,memo:p},body:{newDelegate:o}}},r)}signZkappCommand({feePayer:t,zkappCommand:n},r){let i=n.accountUpdates,o=this.getAccountUpdateMinimumFee(i),l=J3(t,o),{fee:s,nonce:u,validUntil:p,feePayer:a,memo:c}=l,d={feePayer:{body:{publicKey:a,fee:s,nonce:u,validUntil:p},authorization:""},accountUpdates:i,memo:R.toBase58(R.fromString(c))},f=c0(d,r,this.network);return{signature:f.feePayer.authorization,publicKey:a,data:{zkappCommand:f,feePayer:l}}}verifyZkappCommand({data:t,publicKey:n,signature:r}){return r===t.zkappCommand.feePayer.authorization&&p0(t.zkappCommand,n,this.network)}signedRosettaTransactionToSignedCommand(t){let n=JSON.parse(t),r=Tn(n);return JSON.stringify({data:r})}rosettaCombinePayload(t,n){return Fn(t,n,this.network)}publicKeyToRaw(t){let n=k.fromBase58(t);return m0(n)}signTransaction(t,n){if(typeof t=="string")return this.signMessage(t,n);if(t1(t))return this.signPayment(t,n);if(n1(t))return this.signStakeDelegation(t,n);if(e1(t))return this.signZkappCommand(t,n);throw Error(`Expected signable payload, got '${t}'.`)}verifyTransaction(t){if(a1(t))return this.verifyMessage(t);if(i1(t))return this.verifyPayment(t);if(o1(t))return this.verifyStakeDelegation(t);if(r1(t))return this.verifyZkappCommand(t);throw Error(`Expected signable payload, got '${JSON.stringify(t.data)}'.`)}getAccountUpdateMinimumFee(t){return .001*t.length}createNullifier(t,n){let r=F.fromBase58(n);return Un(t,r)}get networkId(){return this.network}};function se(e){let t=BigInt(e);if(t<0)throw Error("input must be non-negative");return t.toString()}function Fe(e){let t=R.toValidString(e.memo);return{to:e.to,from:e.from,fee:se(e.fee),nonce:se(e.nonce),memo:t,validUntil:se(e.validUntil??V3)}}function J3(e,t){if(e.fee===void 0)throw Error("Missing fee in fee payer");let n=se(e.fee);if(Number(n)<t)throw Error(`Fee must be greater than ${t}`);return{feePayer:e.feePayer,fee:n,nonce:se(e.nonce),memo:R.toValidString(e.memo),validUntil:e.validUntil===void 0||e.validUntil===null?null:se(e.validUntil)}}export{Pn as Client,Pn as default};
/*! Bundled license information:

js-sha256/src/sha256.js:
  (**
   * [js-sha256]{@link https://github.com/emn178/js-sha256}
   *
   * @version 0.9.0
   * @author Chen, Yi-Cyuan [emn178@gmail.com]
   * @copyright Chen, Yi-Cyuan 2014-2017
   * @license MIT
   *)
*/
