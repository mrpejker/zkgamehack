import { GraphqlModulesRecord } from "./GraphqlSequencerModule";
import { MempoolResolver } from "./modules/MempoolResolver";
import { QueryGraphqlModule } from "./modules/QueryGraphqlModule";
import { BatchStorageResolver } from "./modules/BatchStorageResolver";
import { NodeStatusResolver } from "./modules/NodeStatusResolver";
import { BlockResolver } from "./modules/BlockResolver";
import { MerkleWitnessResolver } from "./modules/MerkleWitnessResolver";
export type DefaultGraphqlModulesRecord = {
    MempoolResolver: typeof MempoolResolver;
    QueryGraphqlModule: typeof QueryGraphqlModule;
    BlockStorageResolver: typeof BatchStorageResolver;
    NodeStatusResolver: typeof NodeStatusResolver;
    BlockResolver: typeof BlockResolver;
    MerkleWitnessResolver: typeof MerkleWitnessResolver;
};
export declare class DefaultGraphqlModules {
    static with<AdditionalModules extends GraphqlModulesRecord>(additionalModules: AdditionalModules): {
        MempoolResolver: typeof MempoolResolver;
        QueryGraphqlModule: typeof QueryGraphqlModule;
        BlockStorageResolver: typeof BatchStorageResolver;
        NodeStatusResolver: typeof NodeStatusResolver;
        BlockResolver: typeof BlockResolver;
        MerkleWitnessResolver: typeof MerkleWitnessResolver;
    } & AdditionalModules;
    static defaultConfig(): {
        MempoolResolver: {};
        QueryGraphqlModule: {};
        BlockStorageResolver: {};
        NodeStatusResolver: {};
        BlockResolver: {};
        MerkleWitnessResolver: {};
    };
}
//# sourceMappingURL=DefaultGraphqlModules.d.ts.map