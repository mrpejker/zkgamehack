import assert from "node:assert";
import { log, ModuleContainer, } from "@proto-kit/common";
import { SchemaGeneratingGraphqlModule } from "./GraphqlModule";
export class GraphqlSequencerModule extends ModuleContainer {
    static from(definition) {
        return class ScopedGraphQlContainer extends GraphqlSequencerModule {
            constructor() {
                super(definition);
            }
        };
    }
    create(childContainerProvider) {
        super.create(childContainerProvider);
        this.graphqlServer = this.container.resolve("GraphqlServer");
    }
    async start() {
        assert(this.graphqlServer !== undefined);
        this.graphqlServer.setContainer(this.container);
        // eslint-disable-next-line guard-for-in
        for (const moduleName in this.definition.modules) {
            const moduleClass = this.definition.modules[moduleName];
            this.graphqlServer.registerModule(moduleClass);
            if (Object.prototype.isPrototypeOf.call(SchemaGeneratingGraphqlModule, moduleClass)) {
                log.debug(`Registering manual schema for ${moduleName}`);
                // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
                const module = this.resolve(moduleName);
                this.graphqlServer.registerSchema(module.generateSchema());
            }
        }
        void this.graphqlServer.startServer();
    }
}
