import { Mempool, PendingTransaction, TransactionStorage } from "@proto-kit/sequencer";
import { GraphqlModule } from "../GraphqlModule.js";
export declare class Signature {
    r: string;
    s: string;
    constructor(r: string, s: string);
}
export declare class TransactionObject {
    static fromServiceLayerModel(pt: PendingTransaction): TransactionObject;
    hash: string;
    methodId: string;
    sender: string;
    nonce: string;
    signature: Signature;
    argsFields: string[];
    auxiliaryData: string[];
    isMessage: boolean;
    constructor(hash: string, methodId: string, sender: string, nonce: string, signature: Signature, argsFields: string[], auxiliaryData: string[], isMessage: boolean);
}
declare enum InclusionStatus {
    UNKNOWN = "unknown",
    PENDING = "pending",
    INCLUDED = "included",
    SETTLED = "settled"
}
export declare class MempoolResolver extends GraphqlModule {
    private readonly mempool;
    private readonly transactionStorage;
    constructor(mempool: Mempool, transactionStorage: TransactionStorage);
    submitTx(tx: TransactionObject): Promise<string>;
    transactionState(hash: string): Promise<InclusionStatus>;
    transactions(): Promise<string[]>;
}
export {};
//# sourceMappingURL=MempoolResolver.d.ts.map