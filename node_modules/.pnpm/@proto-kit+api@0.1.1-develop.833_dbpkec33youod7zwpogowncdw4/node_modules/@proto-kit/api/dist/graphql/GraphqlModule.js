import { ConfigurableModule } from "@proto-kit/common";
import { injectable, Lifecycle, scoped } from "tsyringe";
import { Resolver } from "type-graphql";
const graphqlModuleMetadataKey = "graphqlModule";
export class GraphqlModule extends ConfigurableModule {
    constructor() {
        super();
        const isDecoratedProperly = Reflect.getMetadata(graphqlModuleMetadataKey, this.constructor) === true;
        if (!isDecoratedProperly) {
            throw new Error(`Module ${this.constructor.name} not decorated property. Make sure to use @graphqlModule() on all GraphqlModules`);
        }
    }
}
export class SchemaGeneratingGraphqlModule extends GraphqlModule {
}
export function graphqlModule() {
    return (
    /**
     * Check if the target class extends GraphqlModule, while
     * also providing static config presets
     */
    target) => {
        injectable()(target);
        scoped(Lifecycle.ContainerScoped)(target);
        Resolver()(target);
        Reflect.defineMetadata(graphqlModuleMetadataKey, true, target);
    };
}
