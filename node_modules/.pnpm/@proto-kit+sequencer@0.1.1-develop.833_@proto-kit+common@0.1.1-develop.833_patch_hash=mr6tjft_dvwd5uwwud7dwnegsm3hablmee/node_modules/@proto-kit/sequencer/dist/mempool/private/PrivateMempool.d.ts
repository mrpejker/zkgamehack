import { EventEmitter } from "@proto-kit/common";
import type { Mempool, MempoolEvents } from "../Mempool";
import type { PendingTransaction } from "../PendingTransaction";
import { SequencerModule } from "../../sequencer/builder/SequencerModule";
import { TransactionStorage } from "../../storage/repositories/TransactionStorage";
import { TransactionValidator } from "../verification/TransactionValidator";
export declare class PrivateMempool extends SequencerModule implements Mempool {
    private readonly transactionValidator;
    private readonly transactionStorage;
    readonly events: EventEmitter<MempoolEvents>;
    constructor(transactionValidator: TransactionValidator, transactionStorage: TransactionStorage);
    add(tx: PendingTransaction): Promise<boolean>;
    getTxs(): Promise<PendingTransaction[]>;
    start(): Promise<void>;
}
//# sourceMappingURL=PrivateMempool.d.ts.map