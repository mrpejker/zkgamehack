import { Field, Poseidon } from "o1js";
import { ACTIONS_EMPTY_HASH, BlockHashMerkleTree, NetworkState, } from "@proto-kit/protocol";
import { RollupMerkleTree } from "@proto-kit/common";
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UnprovenBlock = {
    calculateHash(height, transactionsHash) {
        return Poseidon.hash([height, transactionsHash]);
    },
    hash(block) {
        return UnprovenBlock.calculateHash(block.height, block.transactionsHash);
    },
};
// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UnprovenBlockWithMetadata = {
    createEmpty: () => ({
        block: {
            hash: Field(0),
            height: Field(0),
            transactionsHash: Field(0),
            fromEternalTransactionsHash: Field(0),
            toEternalTransactionsHash: Field(0),
            transactions: [],
            networkState: {
                before: NetworkState.empty(),
                during: NetworkState.empty(),
            },
            fromBlockHashRoot: Field(BlockHashMerkleTree.EMPTY_ROOT),
            fromMessagesHash: Field(0),
            toMessagesHash: ACTIONS_EMPTY_HASH,
            previousBlockHash: undefined,
        },
        metadata: {
            afterNetworkState: NetworkState.empty(),
            stateRoot: RollupMerkleTree.EMPTY_ROOT,
            blockHashRoot: BlockHashMerkleTree.EMPTY_ROOT,
            blockStateTransitions: [],
            blockHashWitness: BlockHashMerkleTree.WITNESS.dummy(),
            blockHash: 0n,
        },
    }),
};
