import { Bool, Field } from "o1js";
import { OptionBase } from "@proto-kit/protocol";
/**
 * Option facilitating in-circuit values that may or may not exist.
 */
export class UntypedOption extends OptionBase {
    static fromOption(option) {
        return new UntypedOption(option.isSome, option.encodeValueToFields(), option.isForcedSome);
    }
    static fromJSON({ isSome, value, isForcedSome, }) {
        return new UntypedOption(Bool(isSome), value.map((fieldString) => Field(fieldString)), Bool(isForcedSome));
    }
    constructor(isSome, value, enforceEmpty) {
        super(isSome, enforceEmpty);
        this.value = value;
    }
    clone() {
        return new UntypedOption(this.isSome, this.value, this.isForcedSome);
    }
    encodeValueToFields() {
        return this.value;
    }
}
