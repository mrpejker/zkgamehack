import { NetworkState } from "@proto-kit/protocol";
import { PendingTransaction } from "../../../mempool/PendingTransaction";
import { TaskSerializer } from "../../../worker/flow/Task";
import { TaskStateRecord } from "../TransactionTraceService";
export interface RuntimeProofParameters {
    tx: PendingTransaction;
    networkState: NetworkState;
    state: TaskStateRecord;
}
export type JSONEncodableState = Record<string, string[]>;
export declare class RuntimeProofParametersSerializer implements TaskSerializer<RuntimeProofParameters> {
    toJSON(parameters: RuntimeProofParameters): string;
    fromJSON(json: string): RuntimeProofParameters;
}
//# sourceMappingURL=RuntimeTaskParameters.d.ts.map