var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import { noop } from "@proto-kit/common";
import { SequencerModule, sequencerModule, } from "../../sequencer/builder/SequencerModule";
class NoopIncomingMessageAdapter {
    async getPendingMessages(address, params) {
        return {
            from: "0",
            to: "0",
            messages: [],
        };
    }
}
class NoopOutgoingMessageQueue {
    length() {
        return 0;
    }
    peek(num) {
        return [];
    }
    pop(num) {
        return [];
    }
}
export let NoopBaseLayer = class NoopBaseLayer extends SequencerModule {
    async blockProduced() {
        noop();
    }
    async start() {
        noop();
    }
    dependencies() {
        return {
            IncomingMessageAdapter: {
                useClass: NoopIncomingMessageAdapter,
            },
            OutgoingMessageQueue: {
                useClass: NoopOutgoingMessageQueue,
            },
        };
    }
};
NoopBaseLayer = __decorate([
    sequencerModule()
], NoopBaseLayer);
