import { Mina } from "o1js";
import { MinaIncomingMessageAdapter } from "../../settlement/messages/MinaIncomingMessageAdapter";
import { SequencerModule } from "../../sequencer/builder/SequencerModule";
import { MinaTransactionSender } from "../../settlement/transactions/MinaTransactionSender";
import { WithdrawalQueue } from "../../settlement/messages/WithdrawalQueue";
export class MinaBaseLayer extends SequencerModule {
    dependencies() {
        return {
            IncomingMessageAdapter: {
                useClass: MinaIncomingMessageAdapter,
            },
            TransactionSender: {
                useClass: MinaTransactionSender,
            },
            OutgoingMessageQueue: {
                useClass: WithdrawalQueue,
            },
        };
    }
    async start() {
        const { network } = this.config;
        if (!network.local &&
            (network.graphql === undefined || network.archive === undefined)) {
            throw new Error("The API endpoints have to be defined, if the network is remote");
        }
        const Network = this.config.network.local
            ? await Mina.LocalBlockchain({ proofsEnabled: false })
            : Mina.Network({
                mina: network.graphql,
                archive: network.archive,
            });
        Mina.setActiveInstance(Network);
        this.network = Network;
    }
}
