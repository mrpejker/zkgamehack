import { Field } from "o1js";
import { ProvableStateTransition, StateTransition } from "@proto-kit/protocol";
import { UntypedOption } from "./UntypedOption";
/**
 * Generic state transition that constraints the current method circuit
 * to external state, by providing a state anchor.
 */
export declare class UntypedStateTransition {
    path: Field;
    fromValue: UntypedOption;
    toValue: UntypedOption;
    static fromStateTransition<Value>(st: StateTransition<Value>): UntypedStateTransition;
    static fromJSON({ path, from, to, }: {
        path: string;
        from: Parameters<typeof UntypedOption.fromJSON>[0];
        to: Parameters<typeof UntypedOption.fromJSON>[0];
    }): UntypedStateTransition;
    constructor(path: Field, fromValue: UntypedOption, toValue: UntypedOption);
    get from(): UntypedOption;
    get to(): UntypedOption;
    /**
     * Converts a StateTransition to a ProvableStateTransition,
     * while enforcing the 'from' property to be 'Some' in all cases.
     */
    toProvable(): ProvableStateTransition;
    toJSON(): {
        path: string;
        from: {
            isSome: boolean;
            isForcedSome: boolean;
            value: string[];
        };
        to: {
            isSome: boolean;
            isForcedSome: boolean;
            value: string[];
        };
    };
}
//# sourceMappingURL=UntypedStateTransition.d.ts.map