import { Runtime } from "@proto-kit/module";
import { MethodPublicOutput, RuntimeMethodExecutionContext } from "@proto-kit/protocol";
import { Proof } from "o1js";
import { Task, TaskSerializer } from "../../../worker/flow/Task";
import { TaskWorkerModule } from "../../../worker/worker/TaskWorkerModule";
import { RuntimeProofParameters } from "./RuntimeTaskParameters";
type RuntimeProof = Proof<undefined, MethodPublicOutput>;
export declare class RuntimeProvingTask extends TaskWorkerModule implements Task<RuntimeProofParameters, RuntimeProof> {
    protected readonly runtime: Runtime<never>;
    private readonly executionContext;
    protected readonly runtimeZkProgrammable: import("packages/common/dist").PlainZkProgram<undefined, MethodPublicOutput>;
    name: string;
    constructor(runtime: Runtime<never>, executionContext: RuntimeMethodExecutionContext);
    inputSerializer(): TaskSerializer<RuntimeProofParameters>;
    resultSerializer(): TaskSerializer<RuntimeProof>;
    compute(input: RuntimeProofParameters): Promise<RuntimeProof>;
    prepare(): Promise<void>;
}
export {};
//# sourceMappingURL=RuntimeProvingTask.d.ts.map