import { CompileArtifact } from "@proto-kit/common";
import { Field, SmartContract } from "o1js";
export type ContractCompileArtifact = {
    verificationKey: {
        data: string;
        hash: Field;
    };
};
export declare class CompileRegistry {
    private compilationPromises;
    private contractCompilationPromises;
    private compiledContracts;
    getContractVerificationKey(name: string): ContractCompileArtifact | undefined;
    compile(name: string, zkProgram: {
        compile: () => Promise<CompileArtifact>;
    }): Promise<void>;
    compileSmartContract(name: string, contract: typeof SmartContract & {
        compile: () => Promise<ContractCompileArtifact>;
    }, proofsEnabled?: boolean): Promise<void>;
    private isSubtypeOfName;
    getContractClassByName(name: string): typeof SmartContract | undefined;
}
//# sourceMappingURL=CompileRegistry.d.ts.map