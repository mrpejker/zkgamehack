import { SequencerModule } from "../../sequencer/builder/SequencerModule";
import { TaskPayload } from "../flow/Task";
import { Closeable, InstantiatedQueue, TaskQueue } from "./TaskQueue";
export interface LocalTaskQueueConfig {
    simulatedDuration?: number;
}
export declare class LocalTaskQueue extends SequencerModule<LocalTaskQueueConfig> implements TaskQueue {
    private queues;
    private workers;
    private readonly listeners;
    private workNextTasks;
    createWorker(queueName: string, executor: (data: TaskPayload) => Promise<TaskPayload>): Closeable;
    getQueue(queueName: string): Promise<InstantiatedQueue>;
    start(): Promise<void>;
}
//# sourceMappingURL=LocalTaskQueue.d.ts.map