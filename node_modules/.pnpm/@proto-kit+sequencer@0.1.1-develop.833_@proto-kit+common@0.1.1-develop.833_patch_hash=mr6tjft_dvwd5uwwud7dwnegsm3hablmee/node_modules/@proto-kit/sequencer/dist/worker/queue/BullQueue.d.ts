import { TaskPayload } from "../manager/ReducableTask";
import { Closeable, InstantiatedQueue, TaskQueue } from "./TaskQueue";
/**
 * TaskQueue implementation for BullMQ
 */
export declare class BullQueue implements TaskQueue {
    private readonly redis;
    private readonly options;
    constructor(redis: {
        host: string;
        port: number;
        username?: string;
        password?: string;
    }, options?: {
        retryAttempts?: number;
    });
    createWorker(name: string, executor: (data: TaskPayload) => Promise<TaskPayload>, options?: {
        concurrency: number;
    }): Closeable;
    getQueue(queueName: string): Promise<InstantiatedQueue>;
}
//# sourceMappingURL=BullQueue.d.ts.map