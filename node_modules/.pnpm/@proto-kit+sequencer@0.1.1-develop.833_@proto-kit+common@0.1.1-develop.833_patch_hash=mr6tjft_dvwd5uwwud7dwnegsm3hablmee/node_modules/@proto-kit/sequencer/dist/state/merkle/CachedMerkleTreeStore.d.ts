import { InMemoryMerkleTreeStorage } from "@proto-kit/common";
import { AsyncMerkleTreeStore, MerkleTreeNode, MerkleTreeNodeQuery } from "../async/AsyncMerkleTreeStore";
export declare class CachedMerkleTreeStore extends InMemoryMerkleTreeStorage implements AsyncMerkleTreeStore {
    private readonly parent;
    private writeCache;
    openTransaction(): Promise<void>;
    commit(): Promise<void>;
    constructor(parent: AsyncMerkleTreeStore);
    getNode(key: bigint, level: number): bigint | undefined;
    setNode(key: bigint, level: number, value: bigint): void;
    getWrittenNodes(): {
        [key: number]: {
            [key: string]: bigint;
        };
    };
    resetWrittenNodes(): void;
    private collectNodesToFetch;
    preloadKeys(keys: bigint[]): Promise<void>;
    preloadKey(index: bigint): Promise<void>;
    mergeIntoParent(): Promise<void>;
    setNodeAsync(key: bigint, level: number, value: bigint): Promise<void>;
    getNodesAsync(nodes: MerkleTreeNodeQuery[]): Promise<(bigint | undefined)[]>;
    writeNodes(nodes: MerkleTreeNode[]): void;
}
//# sourceMappingURL=CachedMerkleTreeStore.d.ts.map