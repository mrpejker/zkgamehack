import { InMemoryMerkleTreeStorage, RollupMerkleTree, } from "@proto-kit/common";
export class SyncCachedMerkleTreeStore extends InMemoryMerkleTreeStorage {
    constructor(parent) {
        super();
        this.parent = parent;
    }
    getNode(key, level) {
        return super.getNode(key, level) ?? this.parent.getNode(key, level);
    }
    setNode(key, level, value) {
        super.setNode(key, level, value);
    }
    mergeIntoParent() {
        if (Object.keys(this.nodes).length === 0) {
            return;
        }
        const { nodes } = this;
        Array.from({ length: RollupMerkleTree.HEIGHT }).forEach((ignored, level) => Object.entries(nodes[level]).forEach((entry) => {
            this.parent.setNode(BigInt(entry[0]), level, entry[1]);
        }));
        this.nodes = {};
    }
}
