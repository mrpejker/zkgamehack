import { InMemoryStateService } from "@proto-kit/module";
import { Field } from "o1js";
const errors = {
    parentIsUndefined: () => new Error("Parent StateService is undefined"),
};
export class SyncCachedStateService extends InMemoryStateService {
    constructor(parent) {
        super();
        this.parent = parent;
    }
    get(key) {
        return super.get(key) ?? this.parent?.get(key);
    }
    assertParentNotNull(parent) {
        if (parent === undefined) {
            throw errors.parentIsUndefined();
        }
    }
    /**
     * Merges all caches set() operation into the parent and
     * resets this instance to the parent's state (by clearing the cache and
     * defaulting to the parent)
     */
    async mergeIntoParent() {
        const { parent, values } = this;
        this.assertParentNotNull(parent);
        // Set all cached values on parent
        Object.entries(values).forEach((value) => {
            parent.set(Field(value[0]), value[1] ?? undefined);
        });
        // Clear cache
        this.values = {};
    }
}
