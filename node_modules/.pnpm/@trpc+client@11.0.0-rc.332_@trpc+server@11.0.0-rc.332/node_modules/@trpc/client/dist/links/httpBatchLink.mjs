import { createHTTPBatchLink } from './internals/createHTTPBatchLink.mjs';
import { jsonHttpRequester } from './internals/httpUtils.mjs';

const batchRequester = (requesterOpts)=>{
    return (batchOps)=>{
        const path = batchOps.map((op)=>op.path).join(',');
        const inputs = batchOps.map((op)=>op.input);
        const { promise , cancel  } = jsonHttpRequester({
            ...requesterOpts,
            path,
            inputs,
            headers () {
                if (!requesterOpts.opts.headers) {
                    return {};
                }
                if (typeof requesterOpts.opts.headers === 'function') {
                    return requesterOpts.opts.headers({
                        opList: batchOps
                    });
                }
                return requesterOpts.opts.headers;
            }
        });
        return {
            promise: promise.then((res)=>{
                const resJSON = Array.isArray(res.json) ? res.json : batchOps.map(()=>res.json);
                const result = resJSON.map((item)=>({
                        meta: res.meta,
                        json: item
                    }));
                return result;
            }),
            cancel
        };
    };
};
const httpBatchLink = createHTTPBatchLink(batchRequester);

export { httpBatchLink };
