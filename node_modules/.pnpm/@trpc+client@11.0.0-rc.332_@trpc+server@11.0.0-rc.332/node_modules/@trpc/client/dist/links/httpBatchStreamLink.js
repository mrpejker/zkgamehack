'use strict';

var createHTTPBatchLink = require('./internals/createHTTPBatchLink.js');
var getTextDecoder = require('./internals/getTextDecoder.js');
var parseJSONStream = require('./internals/parseJSONStream.js');

const streamRequester = (requesterOpts)=>{
    const textDecoder = getTextDecoder.getTextDecoder(requesterOpts.opts.textDecoder);
    return (batchOps, unitResolver)=>{
        const path = batchOps.map((op)=>op.path).join(',');
        const inputs = batchOps.map((op)=>op.input);
        const { cancel , promise  } = parseJSONStream.streamingJsonHttpRequester({
            ...requesterOpts,
            textDecoder,
            path,
            inputs,
            headers () {
                if (!requesterOpts.opts.headers) {
                    return {};
                }
                if (typeof requesterOpts.opts.headers === 'function') {
                    return requesterOpts.opts.headers({
                        opList: batchOps
                    });
                }
                return requesterOpts.opts.headers;
            }
        }, (index, res)=>{
            unitResolver(index, res);
        });
        return {
            /**
       * return an empty array because the batchLoader expects an array of results
       * but we've already called the `unitResolver` for each of them, there's
       * nothing left to do here.
       */ promise: promise.then(()=>[]),
            cancel
        };
    };
};
const unstable_httpBatchStreamLink = createHTTPBatchLink.createHTTPBatchLink(streamRequester);

exports.unstable_httpBatchStreamLink = unstable_httpBatchStreamLink;
