import { BlockProducerModule, LocalTaskWorkerModule, PrivateMempool, SequencerModulesRecord, UnprovenProducerModule, TaskQueue, StorageDependencyFactory, BaseLayer, BlockTrigger } from "@proto-kit/sequencer";
import { TypedClass } from "@proto-kit/common";
import { GraphqlSequencerModule, GraphqlServer, DefaultGraphqlModulesRecord } from "@proto-kit/api";
type PreconfiguredMonoSequencerModulesRecord = {
    Mempool: typeof PrivateMempool;
    BlockProducerModule: typeof BlockProducerModule;
    UnprovenProducerModule: typeof UnprovenProducerModule;
    GraphqlServer: typeof GraphqlServer;
    Graphql: TypedClass<GraphqlSequencerModule<DefaultGraphqlModulesRecord>>;
};
export type MonoSequencerModulesRecord = {
    Database: TypedClass<StorageDependencyFactory>;
    TaskQueue: TypedClass<TaskQueue>;
    BaseLayer: TypedClass<BaseLayer>;
    BlockTrigger: TypedClass<BlockTrigger>;
} & PreconfiguredMonoSequencerModulesRecord;
export declare class MonoSequencerModules {
    static worker<QueueModule extends TaskQueue, SequencerModules extends SequencerModulesRecord>(queue: TypedClass<QueueModule>, additionalModules: SequencerModules): {
        LocalTaskWorkerModule: TypedClass<LocalTaskWorkerModule<{
            StateTransitionTask: typeof import("@proto-kit/sequencer").StateTransitionTask;
            StateTransitionReductionTask: typeof import("@proto-kit/sequencer").StateTransitionReductionTask;
            RuntimeProvingTask: typeof import("@proto-kit/sequencer").RuntimeProvingTask;
            BlockProvingTask: typeof import("@proto-kit/sequencer").BlockProvingTask;
            BlockReductionTask: typeof import("@proto-kit/sequencer").BlockReductionTask;
            BlockBuildingTask: typeof import("@proto-kit/sequencer").NewBlockTask;
        }>>;
        TaskQueue: TypedClass<QueueModule>;
    } & SequencerModules;
    static with<QueueModule extends TaskQueue, DatabaseModule extends StorageDependencyFactory, BaseLayerModule extends BaseLayer, SequencerModules extends SequencerModulesRecord, BlockTriggerModule extends BlockTrigger>(queue: TypedClass<QueueModule>, database: TypedClass<DatabaseModule>, baselayer: TypedClass<BaseLayerModule>, trigger: TypedClass<BlockTriggerModule>, additionalModules: SequencerModules): {
        Database: TypedClass<DatabaseModule>;
        Mempool: typeof PrivateMempool;
        BaseLayer: TypedClass<BaseLayerModule>;
        BlockProducerModule: typeof BlockProducerModule;
        UnprovenProducerModule: typeof UnprovenProducerModule;
        BlockTrigger: TypedClass<BlockTriggerModule>;
        TaskQueue: TypedClass<QueueModule>;
        GraphqlServer: typeof GraphqlServer;
        Graphql: TypedClass<GraphqlSequencerModule<{
            MempoolResolver: typeof import("@proto-kit/api").MempoolResolver;
            QueryGraphqlModule: typeof import("@proto-kit/api").QueryGraphqlModule;
            BlockStorageResolver: typeof import("@proto-kit/api").BlockStorageResolver;
            NodeStatusResolver: typeof import("@proto-kit/api").NodeStatusResolver;
            UnprovenBlockResolver: typeof import("@proto-kit/api").UnprovenBlockResolver;
            MerkleWitnessResolver: typeof import("@proto-kit/api").MerkleWitnessResolver;
        }>>;
    } & SequencerModules;
    static defaultConfig(): {
        UnprovenProducerModule: {};
        GraphqlServer: {
            port: number;
            host: string;
            graphiql: true;
        };
        Graphql: {
            QueryGraphqlModule: {};
            MempoolResolver: {};
            BlockStorageResolver: {};
            NodeStatusResolver: {};
            MerkleWitnessResolver: {};
            UnprovenBlockResolver: {};
        };
        Mempool: {};
        BlockProducerModule: {};
    };
}
export {};
//# sourceMappingURL=MonoSequencerModules.d.ts.map