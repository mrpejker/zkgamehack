import { BatchProducerModule, InMemoryDatabase, LocalTaskQueue, LocalTaskWorkerModule, ManualBlockTrigger, NoopBaseLayer, PrivateMempool, SequencerModulesRecord, BlockProducerModule, TaskWorkerModulesWithoutSettlement } from "@proto-kit/sequencer";
import { TypedClass } from "@proto-kit/common";
export type InMemorySequencerModulesRecord = {
    Database: typeof InMemoryDatabase;
    Mempool: typeof PrivateMempool;
    LocalTaskWorkerModule: TypedClass<LocalTaskWorkerModule<TaskWorkerModulesWithoutSettlement>>;
    BaseLayer: typeof NoopBaseLayer;
    BatchProducerModule: typeof BatchProducerModule;
    BlockProducerModule: typeof BlockProducerModule;
    BlockTrigger: typeof ManualBlockTrigger;
    TaskQueue: typeof LocalTaskQueue;
};
export declare class InMemorySequencerModules {
    static with<SequencerModules extends SequencerModulesRecord>(additionalModules: SequencerModules): {
        Database: typeof InMemoryDatabase;
        Mempool: typeof PrivateMempool;
        LocalTaskWorkerModule: TypedClass<LocalTaskWorkerModule<{
            StateTransitionTask: typeof import("@proto-kit/sequencer").StateTransitionTask;
            StateTransitionReductionTask: typeof import("@proto-kit/sequencer").StateTransitionReductionTask;
            RuntimeProvingTask: typeof import("@proto-kit/sequencer").RuntimeProvingTask;
            BlockProvingTask: typeof import("@proto-kit/sequencer").BlockProvingTask;
            BlockReductionTask: typeof import("@proto-kit/sequencer").BlockReductionTask;
            BlockBuildingTask: typeof import("@proto-kit/sequencer").NewBlockTask;
        }>>;
        BaseLayer: typeof NoopBaseLayer;
        BatchProducerModule: typeof BatchProducerModule;
        BlockProducerModule: typeof BlockProducerModule;
        BlockTrigger: typeof ManualBlockTrigger;
        TaskQueue: typeof LocalTaskQueue;
    } & SequencerModules;
}
//# sourceMappingURL=InMemorySequencerModules.d.ts.map