import { BatchProducerModule, LocalTaskWorkerModule, PrivateMempool, BlockProducerModule, VanillaTaskWorkerModules, } from "@proto-kit/sequencer";
export class SimpleSequencerModules {
    static worker(queue, additionalModules) {
        return {
            LocalTaskWorkerModule: LocalTaskWorkerModule.from(VanillaTaskWorkerModules.allTasks()),
            TaskQueue: queue,
            ...additionalModules,
        };
    }
    static with(additionalModules) {
        /* eslint-disable @typescript-eslint/no-shadow */
        const { Database, BlockTrigger, TaskQueue, BaseLayer } = additionalModules;
        /* eslint-enable @typescript-eslint/no-shadow */
        const modulesCopy = { ...additionalModules };
        /* eslint-disable @typescript-eslint/dot-notation */
        delete modulesCopy["Database"];
        delete modulesCopy["TaskQueue"];
        delete modulesCopy["BaseLayer"];
        delete modulesCopy["BlockTrigger"];
        /* eslint-enable @typescript-eslint/dot-notation */
        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions
        const reducedModules = modulesCopy;
        return {
            Database,
            Mempool: PrivateMempool,
            BaseLayer,
            BatchProducerModule,
            BlockProducerModule,
            BlockTrigger,
            TaskQueue,
            ...reducedModules,
        };
    }
    static defaultConfig() {
        return {
            BlockProducerModule: {
                allowEmptyBlock: true,
            },
            Mempool: {},
            BatchProducerModule: {},
        };
    }
    static defaultWorkerConfig() {
        return {
            LocalTaskWorkerModule: VanillaTaskWorkerModules.defaultConfig(),
        };
    }
}
