import { Field, Gadgets } from "o1js";
import { UInt } from "./UInt";
import { UInt224 } from "./UInt224";
export class UInt112 extends UInt {
    static check(x) {
        UInt.assertionFunction(Gadgets.isDefinitelyInRangeN(112, x.value));
    }
    static from(x) {
        if (x instanceof UInt112) {
            return x;
        }
        return new UInt112({ value: UInt.checkConstant(Field(x), 112) });
    }
    static get zero() {
        return UInt112.Unsafe.fromField(Field(0));
    }
    static get max() {
        return UInt112.Unsafe.fromField(UInt.maxIntField(112));
    }
    constructorReference() {
        return UInt112;
    }
    numBits() {
        return 112;
    }
    toUInt224() {
        return UInt224.Unsafe.fromField(this.value);
    }
}
UInt112.Unsafe = {
    fromField(value) {
        return new UInt112({ value });
    },
};
UInt112.Safe = {
    fromField(value) {
        const uint = new UInt112({ value });
        UInt112.check(uint);
        return uint;
    },
};
