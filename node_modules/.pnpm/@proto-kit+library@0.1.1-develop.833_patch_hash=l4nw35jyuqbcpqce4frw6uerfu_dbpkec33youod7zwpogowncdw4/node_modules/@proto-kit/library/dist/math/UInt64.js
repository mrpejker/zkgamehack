import { Field, Gadgets } from "o1js";
import { UInt } from "./UInt";
export class UInt64 extends UInt {
    static check(x) {
        UInt.assertionFunction(Gadgets.isDefinitelyInRangeN(64, x.value));
    }
    static from(x) {
        if (x instanceof UInt64) {
            return x;
        }
        return new UInt64({ value: UInt.checkConstant(Field(x), 64) });
    }
    static get zero() {
        return UInt64.Unsafe.fromField(Field(0));
    }
    static get max() {
        return UInt64.Unsafe.fromField(UInt.maxIntField(64));
    }
    constructorReference() {
        return UInt64;
    }
    numBits() {
        return 64;
    }
}
UInt64.Unsafe = {
    fromField(value) {
        return new UInt64({ value });
    },
};
UInt64.Safe = {
    fromField(value) {
        const uint = new UInt64({ value });
        UInt64.check(uint);
        return uint;
    },
};
