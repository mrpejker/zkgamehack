import { Field, Gadgets } from "o1js";
import { UInt } from "./UInt";
export class UInt224 extends UInt {
    static check(x) {
        UInt.assertionFunction(Gadgets.isDefinitelyInRangeN(224, x.value));
    }
    static from(x) {
        if (x instanceof UInt) {
            return x;
        }
        return new UInt224({ value: UInt.checkConstant(Field(x), 224) });
    }
    static get zero() {
        return UInt224.Unsafe.fromField(Field(0));
    }
    static get max() {
        return UInt224.Unsafe.fromField(UInt.maxIntField(224));
    }
    constructorReference() {
        return UInt224;
    }
    numBits() {
        return 224;
    }
}
UInt224.Unsafe = {
    fromField(value) {
        return new UInt224({ value });
    },
};
UInt224.Safe = {
    fromField(value) {
        const uint = new UInt224({ value });
        UInt224.check(uint);
        return uint;
    },
};
