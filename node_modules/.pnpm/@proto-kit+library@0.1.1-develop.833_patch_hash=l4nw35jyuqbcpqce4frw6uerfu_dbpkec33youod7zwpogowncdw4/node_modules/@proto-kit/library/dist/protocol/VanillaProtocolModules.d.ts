import { MandatoryProtocolModulesRecord, ProtocolModulesRecord } from "@proto-kit/protocol";
import { TransactionFeeHook } from "../hooks/TransactionFeeHook";
export type VanillaProtocolModulesRecord = MandatoryProtocolModulesRecord & {
    TransactionFee: typeof TransactionFeeHook;
};
export declare class VanillaProtocolModules {
    static mandatoryModules<ProtocolModules extends ProtocolModulesRecord>(additionalModules: ProtocolModules): MandatoryProtocolModulesRecord & ProtocolModules;
    static with<ProtocolModules extends ProtocolModulesRecord>(additionalModules: ProtocolModules): VanillaProtocolModulesRecord & ProtocolModules;
    static mandatoryConfig(): {
        BlockProver: {};
        StateTransitionProver: {};
        AccountState: {};
        BlockHeight: {};
        LastStateRoot: {};
    };
    static defaultConfig(): {
        TransactionFee: {
            tokenId: bigint;
            feeRecipient: string;
            baseFee: bigint;
            perWeightUnitFee: bigint;
            methods: {};
        };
        BlockProver: {};
        StateTransitionProver: {};
        AccountState: {};
        BlockHeight: {};
        LastStateRoot: {};
    };
}
//# sourceMappingURL=VanillaProtocolModules.d.ts.map